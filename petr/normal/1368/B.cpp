/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define mp make_pair

using namespace std;

typedef long long int64;
typedef vector<int> vi;
typedef pair<int, int> ii;

class TaskB {
 public:
  void solveOne(istream &in, ostream &out) {
    int64 k;
    in >> k;
    string s = "codeforces";
    vector<int> count(s.size(), 1);
    int64 prod = 1;
    while (prod < k) {
      for (int i = 0; i < count.size() && prod < k; ++i) {
        prod /= count[i];
        ++count[i];
        prod *= count[i];
      }
    }
    for (int i = 0; i < s.size(); ++i) {
      out << string(count[i], s[i]);
    }
    out << "\n";
  }

  void solve(std::istream &in, std::ostream &out) {
    int nt = 1;
    for (int it = 0; it < nt; ++it) {
      solveOne(in, out);
    }
  }
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  TaskB solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}