/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author majk
 */

#ifndef MAJK_LIB
#define MAJK_LIB

#include <vector>
#include <stack>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <iomanip>
#include <set>
#include <functional>
#include <fstream>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <string>
#include <sstream>
#include <queue>
#include <array>
#include <bitset>
using namespace std;

#define x first
#define y second
typedef std::pair<int,int> pii; typedef long long ll; typedef unsigned long long ull; typedef unsigned int ui; typedef pair<ui,ui> puu;

template <typename T, typename U> std::istream&operator>>(std::istream&i, pair<T,U>&p) {i >> p.x >> p.y; return i;}
template<typename T>std::istream&operator>>(std::istream&i,vector<T>&t) {for(auto&v:t){i>>v;}return i;}
template <typename T, typename U> std::ostream&operator<<(std::ostream&o, const pair<T,U>&p) {o << p.x << ' ' << p.y; return o;}
template<typename T>std::ostream&operator<<(std::ostream&o,const vector<T>&t) {if(t.empty())o<<'\n';for(size_t i=0;i<t.size();++i){o<<t[i]<<" \n"[i == t.size()-1];}return o;}
template<typename T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> using maxheap = priority_queue<T, vector<T>, less<T>>;
template <typename T> bool in(T a, T b, T c) { return a <= b && b < c; }
ui logceil(ll x) { return x?8*sizeof(ll)-__builtin_clzll(x):0; }

namespace std { template<typename T,typename U>struct hash<pair<T,U>>{hash<T>t;hash<U>u;size_t operator()(const pair<T,U>&p)const{return t(p.x)^(u(p.y)<<7);}}; }
template<typename T,typename F>T bsh(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){l=m+1;r=m;}else{h=m-1;}}return r;}
template<typename F> double bshd(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){l=m;}else{h=m;}}return (l+h)/2;}
template<typename T,typename F>T bsl(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){h=m-1;r=m;}else{l=m+1;}}return r;}
template<typename F> double bsld(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){h=m;}else{l=m;}}return (l+h)/2;}
template<typename T> T gcd(T a,T b) { if (a<b) swap(a,b); return b?gcd(b,a%b):a; }


template<typename T>class vector2:public vector<vector<T>>{public:vector2(){} vector2(size_t a,size_t b,T t=T()):vector<vector<T>>(a,vector<T>(b,t)){}};
template<typename T>class vector3:public vector<vector2<T>>{public:vector3(){} vector3(size_t a,size_t b,size_t c,T t=T()):vector<vector2<T>>(a,vector2<T>(b,c,t)){}};
template<typename T>class vector4:public vector<vector3<T>>{public:vector4(){} vector4(size_t a,size_t b,size_t c,size_t d,T t=T()):vector<vector3<T>>(a,vector3<T>(b,c,d,t)){}};
template<typename T>class vector5:public vector<vector4<T>>{public:vector5(){} vector5(size_t a,size_t b,size_t c,size_t d,size_t e,T t=T()):vector<vector4<T>>(a,vector4<T>(b,c,d,e,t)){}};


#endif

class EDimaAndKicks {
public:

    map<pii,vector<pii>> E;
    set<pii> Visited;

    void dfs(pii v) {
        if (Visited.find(v) != Visited.end()) return;
        Visited.insert(v);
        for (pii w: E[v]) dfs(w);
    }


    void solve(istream& cin, ostream& cout) {
        int N, M; cin >> N >> M;
        vector2<int> A(N, M); cin >> A;
        vector<pii> V;
        vector<vector<int>> R(N), C(M);
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < M; ++j) {
                if (A[i][j]) {
                    int v = 0, h = 0;
                    v += i!=0 && A[i-1][j];
                    v += i!=N-1 && A[i+1][j];
                    h += j!=0 && A[i][j-1];
                    h += j!=M-1 && A[i][j+1];
                    if ((v && h) || (v + h == 1)) {
                        V.emplace_back(i,j);
                        R[i].push_back(j);
                        C[j].push_back(i);
                    }

                    if (v + h == 0) {
                        cout << "-1\n";
                        return;
                    }
                }
            }
        }

        for (int i = 0; i < N; ++i) {
            sort(R[i].begin(),R[i].end());
            for (int j = 1; j < R[i].size(); ++j) {
                bool ok = true;
                for (int k = R[i][j-1] + 1; k < R[i][j]; ++k) ok &= A[i][k];
                if (ok) {
                    E[{i,R[i][j-1]}].emplace_back(i,R[i][j]);
                    E[{i,R[i][j]}].emplace_back(i,R[i][j-1]);
                }
            }
        }


        for (int j = 0; j < M; ++j) {
            sort(C[j].begin(),C[j].end());
            for (int i = 1; i < C[j].size(); ++i) {
                bool ok = true;
                for (int k = C[j][i-1] + 1; k < C[j][i]; ++k) ok &= A[k][j];
                if (ok) {
                    E[{C[j][i-1],j}].emplace_back(C[j][i], j);
                    E[{C[j][i],j}].emplace_back(C[j][i-1], j);
                }
            }
        }

        int odd = 0;
        for (auto &m: E) {
            odd += m.y.size() % 2;
        }

        if (odd > 2) {
            cout << "-1\n";
            return;
        }

        dfs(V[0]);
        if (Visited.size() != V.size()) {
            cout << "-1\n";
            return;
        }


        int g = 0;
        for (auto &m: E) {
            for (pii w: m.y) {
                g = gcd(g, abs(w.x-m.x.x) + abs(w.y-m.x.y));
            }
        }

        if (g == 1) {
            cout << "-1\n";
            return;
        }

        vector<int> Ans;
        for (int a = 2; a <= g; ++a) if (g % a == 0) Ans.push_back(a);
        cout << Ans;
    }
};


int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	EDimaAndKicks solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
    return 0;
}