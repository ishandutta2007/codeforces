/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <bits/stdc++.h>

using namespace std;

class TaskA {
public:
	void solve(std::istream& in, std::ostream& out) {
		map<int, set<int>> z;
		int n, k;
		in >> n >> k;
		for(int i = 0; i < n; ++i) {
			int a, b;
			in >> a >> b;
			z[a].insert(b);
			z[b].insert(a);
		}
		for(auto x: z) {
			int user = x.first;
			vector<int> ans;
			for(auto y: z) {
				int posFriend = y.first;
				if(x.second.count(posFriend) || posFriend == user)
					continue;
				int cnt = 0;
				for (int fri: x.second) {
					if(z[fri].count(posFriend)) {
						++cnt;
					}
				}

				if(cnt * 100 >= k * x.second.size()) {
					ans.push_back(posFriend);
				}
			}

			out << user << ": ";
			out << ans.size();
			for(int zzz: ans) {
				out << " " << zzz;
			}
			out << "\n";
		}
	}
};


int main() {
	std::cin.sync_with_stdio(false);
	std::cin.tie(0);
	std::cout << std::fixed;
	std::cout.precision(20);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}