/* Generated by powerful Codeforces Tool
 * Author: calabash_fool 
 * Time: 2019-05-13 14:24:33
 * Personal Code Template: https://github.com/4thcalabash/ACM-Code-Library
**/
#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#ifdef __LOCAL_DEBUG__
# define _debug(fmt, ...) fprintf(stderr, "\033[91m[%s %3d]: " fmt "\n\033[0m", \
  __func__,__LINE__, ##__VA_ARGS__)
#else
# define _debug(...) (void(0))
#endif
#define PB(x) push_back(x)
#define rep(i,l,r) for (int i = l,_ = r;i< _;i++)
#define REP(i,l,r) for (int i=l,_=r;i<=_;i++)
#define leave(x) do {cout<<#x<<endl;fflush(stdout);return 0;}while (0);
#define untie do{ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}while (0)
#define range(x) x.begin(),x.end()
typedef long long LL;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef long double db;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int inf = 0x3f3f3f3f;
const ll inf_ll = 0x3f3f3f3f3f3f3f3fLL;
/************* header ******************/
inline ll cross(pii a,pii b,pii c){
    return 1ll * (b.first - a.first) * (c.second - b.second) - 1ll * (b.second - a.second) * (c.first - b.first);
}
const int maxn = 2e3+ 100;
char s[maxn];
int n;
pii points[maxn];
bool used[maxn];
int main(){
    untie;
    cin>>n;
    rep(i,0,n){
        int x,y;
        cin>>x>>y;
        points[i] = make_pair(x,y);
    }
    cin>>s;
    int now = 0;
    rep(i,1,n){
        if (points[i].first < points[now].first || points[i].first == points[now].first && points[i].second < points[now].second){
            now = i;
        }
    }
    cout<<now+1<<' ';
    used[now] = 1;
    rep(i,0,n-2){
        int nxt = 0;
        while (used[nxt])nxt++;
        rep(j,nxt,n){
            if (used[j])continue;
            if (s[i] == 'L' && cross(points[now],points[nxt],points[j])< 0)nxt = j;
            if (s[i] == 'R' && cross(points[now],points[nxt],points[j]) > 0)nxt = j;
        }
        used[nxt] = 1;
        now = nxt;
        cout<<now+1<<' ';
    }
    rep(i,0,n){
        if (used[i])continue;
        cout<<i+1<<endl;
    }
    return 0;
}