#include <bits/stdc++.h>
using namespace std;

const int N = 2e5 + 5;
const int mod = 998244353;

namespace {
	int add(int x) {return (x >= mod) ? x - mod : x;}
	void Add(int &x, int y) {x = add(x + y);}
	int Pow(int x, int y = mod - 2) {
		int res = 1;
		for(; y; y >>= 1, x = 1LL * x * x % mod) {
			if(y & 1)
			res = 1LL * res * x % mod;
		}
		return res;
	}
}

char s[N * 10];
int n, x, mx = (1 << n), Hash[(1 << 18) + 1], cnt = 2, k, Inv[200];

int C(int a, int b) {
	if(b > a) return 0;
	int ans = 1;
	for(int i = 1; i <= b; ++ i) 
	ans = 1LL * ans * 1LL * (a - i + 1) % mod * Inv[i] % mod;
	return ans;
}
int A[13][13][13], dp[12][25][12][12];

void rmain() {
	scanf("%d%d%d", &n, &k, &x);
	int ans = 0;
	for(int i = 1; i <= 11; ++ i) {
		for(int j = 2; j <= min(n, 22); ++ j) {
			if(!dp[i][j][k][x]) continue;
//			cerr << i <<' ' << j <<' ' << k <<' ' << x <<' ' << dp[i][j][k][x] << endl;
			Add(ans, 1LL * dp[i][j][k][x] * C(n - j + i + 1 - 1, i) % mod);
		}
	}
	cout << ans << endl;
}

void prework() {
A[2][1][1]=1;
A[3][2][1]=2;
A[3][3][2]=1;
A[4][3][1]=3;
A[4][3][2]=1;
A[4][4][1]=1;
A[4][4][2]=4;
A[4][5][2]=3;
A[4][6][3]=1;
A[5][4][1]=4;
A[5][4][2]=4;
A[5][5][1]=2;
A[5][5][2]=12;
A[5][5][3]=2;
A[5][6][1]=2;
A[5][6][2]=12;
A[5][6][3]=4;
A[5][7][2]=9;
A[5][7][3]=6;
A[5][8][2]=3;
A[5][8][3]=6;
A[5][9][3]=4;
A[5][10][4]=1;
A[6][5][1]=5;
A[6][5][2]=10;
A[6][5][3]=1;
A[6][6][1]=3;
A[6][6][2]=28;
A[6][6][3]=13;
A[6][7][1]=4;
A[6][7][2]=35;
A[6][7][3]=29;
A[6][7][4]=1;
A[6][8][1]=3;
A[6][8][2]=35;
A[6][8][3]=41;
A[6][8][4]=4;
A[6][9][1]=1;
A[6][9][2]=30;
A[6][9][3]=44;
A[6][9][4]=7;
A[6][10][2]=17;
A[6][10][3]=45;
A[6][10][4]=7;
A[6][11][2]=8;
A[6][11][3]=30;
A[6][11][4]=11;
A[7][6][1]=6;
A[7][6][2]=20;
A[7][6][3]=6;
A[7][7][1]=4;
A[7][7][2]=55;
A[7][7][3]=50;
A[7][7][4]=3;
A[7][8][1]=6;
A[7][8][2]=80;
A[7][8][3]=118;
A[7][8][4]=18;
A[7][9][1]=6;
A[7][9][2]=95;
A[7][9][3]=186;
A[7][9][4]=48;
A[7][10][1]=6;
A[7][10][2]=101;
A[7][10][3]=230;
A[7][10][4]=85;
A[7][10][5]=2;
A[7][11][1]=2;
A[7][11][2]=94;
A[7][11][3]=260;
A[7][11][4]=113;
A[7][11][5]=4;
A[8][7][1]=7;
A[8][7][2]=35;
A[8][7][3]=21;
A[8][7][4]=1;
A[8][8][1]=5;
A[8][8][2]=96;
A[8][8][3]=145;
A[8][8][4]=26;
A[8][9][1]=8;
A[8][9][2]=155;
A[8][9][3]=358;
A[8][9][4]=124;
A[8][9][5]=3;
A[8][10][1]=9;
A[8][10][2]=207;
A[8][10][3]=616;
A[8][10][4]=313;
A[8][10][5]=16;
A[8][11][1]=11;
A[8][11][2]=250;
A[8][11][3]=859;
A[8][11][4]=567;
A[8][11][5]=53;
A[9][8][1]=8;
A[9][8][2]=56;
A[9][8][3]=56;
A[9][8][4]=8;
A[9][9][1]=6;
A[9][9][2]=154;
A[9][9][3]=350;
A[9][9][4]=126;
A[9][9][5]=4;
A[9][10][1]=10;
A[9][10][2]=268;
A[9][10][3]=898;
A[9][10][4]=552;
A[9][10][5]=48;
A[9][11][1]=12;
A[9][11][2]=389;
A[9][11][3]=1654;
A[9][11][4]=1404;
A[9][11][5]=204;
A[9][11][6]=1;
A[10][9][1]=9;
A[10][9][2]=84;
A[10][9][3]=126;
A[10][9][4]=36;
A[10][9][5]=1;
A[10][10][1]=7;
A[10][10][2]=232;
A[10][10][3]=742;
A[10][10][4]=448;
A[10][10][5]=43;
A[10][11][1]=12;
A[10][11][2]=427;
A[10][11][3]=1967;
A[10][11][4]=1887;
A[10][11][5]=357;
A[10][11][6]=6;
A[11][10][1]=10;
A[11][10][2]=120;
A[11][10][3]=252;
A[11][10][4]=120;
A[11][10][5]=10;
A[11][11][1]=8;
A[11][11][2]=333;
A[11][11][3]=1428;
A[11][11][4]=1302;
A[11][11][5]=252;
A[11][11][6]=5;
A[12][11][1]=11;
A[12][11][2]=165;
A[12][11][3]=462;
A[12][11][4]=330;
A[12][11][5]=55;
A[12][11][6]=1;	
}

void prework2() {
	dp[0][0][0][0] = 1;
	for(int i = 0; i < 11; ++ i) {
		for(int l = 0; l <= 24; ++ l) {
			for(int a = 0; a <= 11; ++ a) {
				for(int b = 0; b <= 11; ++ b) if(dp[i][l][a][b]) {
					for(int ll = 0; ll <= 12; ++ ll) {
						for(int aa = 1; aa <= 11 - a; ++ aa) {
							for(int bb = 1; bb <= 11 - b; ++ bb) if(A[ll][aa][bb]) {
								Add(dp[i + 1][l + ll][a + aa][b + bb], 1LL * A[ll][aa][bb] * dp[i][l][a][b] % mod);
							}
						}
					}
				}
			}
		}
	}
}

int main() {
	for(int i = 1; i <= 20; ++ i) Inv[i] = Pow(i);
	prework();
	prework2();
	int t;
	for(cin >> t; t --;) {
		rmain();
	}
}