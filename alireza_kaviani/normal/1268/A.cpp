/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author alireza_kaviani
 */

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define Mp                          make_pair
#define sep                         ' '
#define endl                        '\n'
#define debug(x)                    cerr << #x << " = " << x << endl
#define SZ(x)                       ll(x.size())
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n, k;
string s;

void add(string &x) {
    ll t = 1;
    for (ll i = SZ(x) - 1; i >= 0; i--) {
        if (t == 0) break;
        ll A = ll(x[i] - 48) + t;
        if (A <= 9) x[i] = A + 48, t = 0;
        else x[i] = '0', t = 1;
    }
}

int main() {
    fast_io;

    cin >> n >> k >> s;
    s += string(n % k, '0');

    ll f = 0;
    string x = s.substr(0, k);
    for (ll i = 0; i < SZ(s); i += k) {
        string t = s.substr(i, k);
        if (t > x) {
            f = 1;
            break;
        }
        if (x == t) continue;
        if (t < x) break;
    }

    if (f == 0) {
        cout << n << endl;
        for (ll i = 0; i < n; i++) cout << x[i % k];
        return 0;
    }

    ll t = 1;
    for (ll i = 0; i < k; i++) if (x[i] != '9') t = 0;
    if (t == 1) {
        cout << n + 1 << endl;
        for (ll i = 0; i < n + 1; i++) cout << (i % k == 0 ? 1 : 0);
        return 0;
    }
    add(x);
    cout << n << endl;
    for (ll i = 0; i < n; i++) cout << x[i % k];

    return 0;
}
/*

*/