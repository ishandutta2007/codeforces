#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
int costs[300000];
void init(){
  costs[0] = 1;
  for (int i = 1; i <= 200000;++i){
    for (int q = 0;;++q){
      if(i <= (1LL << q)){
        costs[i] = (1LL << q) - i;
        break;
      }
    }
  }
}
void solve()
{
  int n;
  cin >> n;
  map<int,int> inputs;
  REP(i,n){
    int a;
    cin >> a;
    inputs[a]++;
  }
  vector<int> ruiseki;
  ruiseki.push_back(0);
  for(auto x :inputs){
    ruiseki.push_back(x.second + ruiseki.back());
  }
  int ans = costs[n] + 2LL;
  REP(i, ruiseki.size())
  {
    ans = min(ans, costs[ruiseki[i]] + costs[n - ruiseki[i]] + 1LL);
    REP(q, 20)
    {
      int target = ruiseki[i] + (1 << q) + 1;
      int pos = lower_bound(ALL(ruiseki), target) - ruiseki.begin();
      pos--;
      if(pos <= i)
        continue;
      ans = min(ans, costs[ruiseki[i]] + costs[ruiseki[pos] - ruiseki[i]] + costs[n - ruiseki[pos]]);
    }
  }
  cout << ans << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main() {
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script
  init();
  int t = 1;
  cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase) {
    solve();
  }
  return 0;
}