/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-05-09 19:05:00
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll q , n , k;

ll MAIN(){
    cin >> n >> k;
    if(k > n)   return cout << "NO" << endl , 0;
    if(k % 2 != n % 2 && n % 2 == 1)    return cout << "NO" << endl , 0;
    if(k % 2 != n % 2){
        if(2 * k > n)   return cout << "NO" << endl , 0;
        cout << "YES" << endl;
        for(ll i = 1 ; i < k ; i++) cout << 2 << sep;
        cout << n - 2 * k + 2 << endl;
        return 0;
    }
    cout << "YES" << endl;
    for(ll i = 1 ; i < k ; i++) cout << 1 << sep;
    cout << n - k + 1 << endl;
}

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> q;
    while(q--)  MAIN();

    return 0;
}
/*

*/