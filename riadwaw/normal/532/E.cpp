/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <bits/stdc++.h>
#include <vector>

using namespace std;

class TaskE {
public:
	void solve(std::istream& in, std::ostream& out) {
		typedef long long li;
		li x;
		in>>x;
		string s, t;
		in >> s >> t;
		int n = (int) s.size();
		vector<vector<vector<li>>> dp(n + 2, vector<vector<li>>(2, vector<li>(2, 0LL)));
		dp[0][0][0] = 1;

		for (int i = 0; i < n + 1; ++i) {
			for(int sk1 = 0; sk1 < 2; ++sk1) {
				for (int sk2 = 0; sk2 < 2; ++sk2) {
					if(dp[i][sk1][sk2] == 0)
						continue;
					for (char c = 'a'; c <= 'z'; ++c) {

						int wsk1 = sk1 + (i - sk1 == n || c != s[i - sk1]);
						int wsk2 = sk2 + (i - sk2 == n || c != t[i - sk2]);
						if(wsk1 > 1 || wsk2 > 1)
							continue;
						dp[i + 1][wsk1][wsk2] += dp[i][sk1][sk2];

						//cout << i << ' ' << sk1 << ' ' << sk2 << ' ' << c << ' ' << wsk1 << ' ' << wsk2 << endl;
					}
				}
			}
		}

		out << dp[n + 1][1][1];
	}
};


int main() {
	std::cin.sync_with_stdio(false);
	std::cin.tie(0);
	std::cout << std::fixed;
	std::cout.precision(20);
	TaskE solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}