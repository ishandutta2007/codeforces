using namespace std;
#include "bits/stdc++.h"

// add your library with double quotation #include"" here.

// define your macros here.
// #define REP(a,b) for(long long a = 0;a < b;++a)

using namespace std;
typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))
#define ALL(x) (x).begin(),(x).end()

#define int long long
void solve() {
    // write your solution here.
    int n, l, r;
    cin >> n >> l >> r;
    vector<int> A, B;
    REP(i, l) {
        int a;
        cin >> a;
        A.push_back(a);
    }
    REP(i, r) {
        int a;
        cin >> a;
        B.push_back(a);
    }
    if (l > r) {
        swap(l, r);
        swap(A, B);
    }
    map<int, int> matching;
    REP(i, r) {
        matching[B[i]]++;
    }
    REP(i, l) {
        matching[A[i]]--;
    }
    int ans = 0;
    int matching_cost = 0;
    for (auto x : matching) {
        if (x.second > 0) {
        }
        else {
            ans += -x.second;
        }
    }
    matching_cost = ans;

    for (auto& x : matching) {
        if (x.second > 0) {
            if (x.second % 2 == 1 and matching_cost > 0) {
                matching_cost--;
                x.second--;
            }
        }
    }
    for (auto& x : matching) {
        if (x.second > 0) {
            if (x.second % 2 == 1) {
                ans++;
                x.second--;
            }
            while (x.second > 0 and matching_cost > 0) {
                matching_cost -= 2;
                x.second -= 2;
            }
            ans += x.second / 2;
        }
    }
    cout << ans << endl;
}
#undef int

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    // Fasterize input/output script
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(100);
    // scanf/printf user should delete this fasterize input/output script

    int t = 1;
    cin >> t; // comment out if solving multi testcase
    for (int testCase = 1; testCase <= t; ++testCase) {
        solve();
    }
    return 0;
}