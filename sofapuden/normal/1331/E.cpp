#include<bits/stdc++.h>
#define rep(i,a,b) for(int i = a; i<b; i++)
#define dep(i,a,b) for(int i = a; i>b; i--)
#define makeUnique(vec) sort(all(vec)); vec.resize(unique(all(vec)) - vec.begin())
#define LOG_vec(vec, sep) for (int fl = 0; fl < vec.size(); fl++) { std::cout << vec[fl]<< sep; } std::cout << "\n";
#define LOG_ints(vec, sep) for (int fl = 0; fl < MAXSIZE; fl++) { std::cout << vec[fl]<< sep; } std::cout << "\n"
#define all(x) (x).begin(), (x).end()
#define ll long long
#define LSB(i) ((i) & -(i))
#define MAXSIZE 100000000

using namespace std;

unsigned ll doublefactorial(unsigned ll n)
{
    if (n == 0 || n == 1)
        return 1;
    return n * doublefactorial(n - 2);
}

int main()
{
    string s
    int x, y;
    cin >> x >> y;
    if (s[x * 64 + y] == '0') {
        cout << "OUT\n";

    }
    else {
        cout << "IN\n";
    }
}