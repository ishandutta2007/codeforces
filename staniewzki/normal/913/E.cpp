#include<bits/stdc++.h>
using namespace std;
 
ostream& operator<<(ostream &out, string str) {
	for(char c : str) out << c;
	return out;
}
 
template<class L, class R> ostream& operator<<(ostream &out, pair<L, R> p) {
	return out << "(" << p.first << ", " << p.second << ")";
}
 
template<class T> auto operator<<(ostream &out, T a) -> decltype(a.begin(), out) {
	out << "{";
	for(auto it = a.begin(); it != a.end(); it = next(it))
		out << (it != a.begin() ? ", " : "") << *it;
	return out << "}";
}
 
void dump() { cerr << "\n"; }
template<class T, class... Ts> void dump(T a, Ts... x) {
	cerr << a << ", ";
	dump(x...);
}
 
#ifdef DEBUG
#  define debug(...) cerr << "[" #__VA_ARGS__ "]: ", dump(__VA_ARGS__)
#else
#  define debug(...) false
#endif
 
#define REP(i, n) for(int i = 0; i < n; i++)
#define FOR(i, a, b) for(int i = a; i <= b; i++)
#define ST first
#define ND second
 
template<class T> int size(T && a) { return a.size(); }
 
using LL = long long;
using PII = pair<int, int>;
vector<string> ans = {
    "!x&x",
    "!(x|y|z)",
    "!x&!y&z",
    "!x&!y",
    "!x&!z&y",
    "!x&!z",
    "!(!y&!z|x|y&z)",
    "!(x|y&z)",
    "!x&y&z",
    "!(!y&z|!z&y|x)",
    "!x&z",
    "!(!z&y|x)",
    "!x&y",
    "!(!y&z|x)",
    "!x&(y|z)",
    "!x",
    "!y&!z&x",
    "!y&!z",
    "!(!x&!z|x&z|y)",
    "!(x&z|y)",
    "!(!x&!y|x&y|z)",
    "!(x&y|z)",
    "!(!x&!y|x&y|z)|!x&!y&z",
    "!((x|y)&z|x&y)",
    "!x&y&z|!y&!z&x",
    "!x&y&z|!y&!z",
    "!x&z|!y&!z&x",
    "!x&z|!y&!z",
    "!x&y|!y&!z&x",
    "!x&y|!y&!z",
    "!x&(y|z)|!y&!z&x",
    "!x|!y&!z",
    "!y&x&z",
    "!(!x&z|!z&x|y)",
    "!y&z",
    "!(!z&x|y)",
    "!x&!z&y|!y&x&z",
    "!x&!z|!y&x&z",
    "!x&!z&y|!y&z",
    "!x&!z|!y&z",
    "!x&y&z|!y&x&z",
    "!(!x&z|!z&x|y)|!x&y&z",
    "!(x&y)&z",
    "!(!z&x|y)|!x&z",
    "!x&y|!y&x&z",
    "!(!y&z|x)|!y&x&z",
    "!x&y|!y&z",
    "!x|!y&z",
    "!y&x",
    "!(!x&z|y)",
    "!y&(x|z)",
    "!y",
    "!x&!z&y|!y&x",
    "!x&!z|!y&x",
    "!x&!z&y|!y&(x|z)",
    "!x&!z|!y",
    "!x&y&z|!y&x",
    "!(!x&z|y)|!x&y&z",
    "!x&z|!y&x",
    "!x&z|!y",
    "!x&y|!y&x",
    "!(!x&!y&z|x&y)",
    "!x&(y|z)|!y&x",
    "!x|!y",
    "!z&x&y",
    "!(!x&y|!y&x|z)",
    "!x&!y&z|!z&x&y",
    "!x&!y|!z&x&y",
    "!z&y",
    "!(!y&x|z)",
    "!x&!y&z|!z&y",
    "!x&!y|!z&y",
    "!x&y&z|!z&x&y",
    "!(!x&y|!y&x|z)|!x&y&z",
    "!x&z|!z&x&y",
    "!(!z&y|x)|!z&x&y",
    "!(x&z)&y",
    "!(!y&x|z)|!x&y",
    "!x&z|!z&y",
    "!x|!z&y",
    "!z&x",
    "!(!x&y|z)",
    "!x&!y&z|!z&x",
    "!x&!y|!z&x",
    "!z&(x|y)",
    "!z",
    "!x&!y&z|!z&(x|y)",
    "!x&!y|!z",
    "!x&y&z|!z&x",
    "!(!x&y|z)|!x&y&z",
    "!x&z|!z&x",
    "!(!x&!z&y|x&z)",
    "!x&y|!z&x",
    "!x&y|!z",
    "!x&(y|z)|!z&x",
    "!x|!z",
    "!y&x&z|!z&x&y",
    "!(!x&y|!y&x|z)|!y&x&z",
    "!y&z|!z&x&y",
    "!(!z&x|y)|!z&x&y",
    "!y&x&z|!z&y",
    "!(!y&x|z)|!y&x&z",
    "!y&z|!z&y",
    "!(!y&!z&x|y&z)",
    "!x&y&z|!y&x&z|!z&x&y",
    "!(!x&y|!y&x|z)|!x&y&z|!y&x&z",
    "!(x&y)&z|!z&x&y",
    "!(!z&x|y)|!x&z|!z&x&y",
    "!(x&z)&y|!y&x&z",
    "!(!y&x|z)|!x&y|!y&x&z",
    "!(x&y)&z|!z&y",
    "!x|!y&z|!z&y",
    "!(y&z)&x",
    "!(!x&y|z)|!y&x",
    "!y&z|!z&x",
    "!y|!z&x",
    "!y&x|!z&y",
    "!y&x|!z",
    "!y&(x|z)|!z&y",
    "!y|!z",
    "!(y&z)&x|!x&y&z",
    "!(!x&y|z)|!x&y&z|!y&x",
    "!(x&y)&z|!z&x",
    "!x&z|!y|!z&x",
    "!(x&z)&y|!y&x",
    "!x&y|!y&x|!z",
    "!x&y|!y&z|!z&x",
    "!(x&y&z)",
    "x&y&z",
    "!(x|y|z)|x&y&z",
    "!x&!y&z|x&y&z",
    "!x&!y|x&y&z",
    "!x&!z&y|x&y&z",
    "!x&!z|x&y&z",
    "!(!y&!z|x|y&z)|x&y&z",
    "!(x|y&z)|x&y&z",
    "y&z",
    "!(x|y|z)|y&z",
    "!x&z|y&z",
    "!x&!y|y&z",
    "!x&y|y&z",
    "!x&!z|y&z",
    "!x&(y|z)|y&z",
    "!x|y&z",
    "!y&!z&x|x&y&z",
    "!y&!z|x&y&z",
    "!(!x&!z|x&z|y)|x&y&z",
    "!(x&z|y)|x&y&z",
    "!(!x&!y|x&y|z)|x&y&z",
    "!(x&y|z)|x&y&z",
    "!(!x&!y|x&y|z)|!x&!y&z|x&y&z",
    "!((x|y)&z|x&y)|x&y&z",
    "!y&!z&x|y&z",
    "!y&!z|y&z",
    "!x&z|!y&!z&x|y&z",
    "!(x&z|y)|y&z",
    "!x&y|!y&!z&x|y&z",
    "!(x&y|z)|y&z",
    "!x&(y|z)|!y&!z&x|y&z",
    "!x|!y&!z|y&z",
    "x&z",
    "!(x|y|z)|x&z",
    "!y&z|x&z",
    "!x&!y|x&z",
    "!x&!z&y|x&z",
    "!x&!z|x&z",
    "!x&!z&y|!y&z|x&z",
    "!(x|y&z)|x&z",
    "(x|y)&z",
    "!(x|y|z)|(x|y)&z",
    "z",
    "!x&!y|z",
    "!x&y|x&z",
    "!(!y&z|x)|x&z",
    "!x&y|z",
    "!x|z",
    "!y&x|x&z",
    "!y&!z|x&z",
    "!y&(x|z)|x&z",
    "!y|x&z",
    "!x&!z&y|!y&x|x&z",
    "!(x&y|z)|x&z",
    "!x&!z&y|!y&(x|z)|x&z",
    "!x&!z|!y|x&z",
    "!y&x|y&z",
    "!(!x&z|y)|y&z",
    "!y&x|z",
    "!y|z",
    "!x&y|!y&x|x&z",
    "!x&!z|!y&x|y&z",
    "!x&y|!y&x|z",
    "!x|!y|z",
    "x&y",
    "!(x|y|z)|x&y",
    "!x&!y&z|x&y",
    "!x&!y|x&y",
    "!z&y|x&y",
    "!x&!z|x&y",
    "!x&!y&z|!z&y|x&y",
    "!(x|y&z)|x&y",
    "(x|z)&y",
    "!(x|y|z)|(x|z)&y",
    "!x&z|x&y",
    "!(!z&y|x)|x&y",
    "y",
    "!x&!z|y",
    "!x&z|y",
    "!x|y",
    "!z&x|x&y",
    "!y&!z|x&y",
    "!x&!y&z|!z&x|x&y",
    "!(x&z|y)|x&y",
    "!z&(x|y)|x&y",
    "!z|x&y",
    "!x&!y&z|!z&(x|y)|x&y",
    "!x&!y|!z|x&y",
    "!z&x|y&z",
    "!(!x&y|z)|y&z",
    "!x&z|!z&x|x&y",
    "!x&!y|!z&x|y&z",
    "!z&x|y",
    "!z|y",
    "!x&z|!z&x|y",
    "!x|!z|y",
    "(y|z)&x",
    "!(x|y|z)|(y|z)&x",
    "!y&z|x&y",
    "!(!z&x|y)|x&y",
    "!z&y|x&z",
    "!(!y&x|z)|x&z",
    "!y&z|!z&y|x&y",
    "!x&!y|!z&y|x&z",
    "(x|y)&z|x&y",
    "!(x|y|z)|(x|y)&z|x&y",
    "x&y|z",
    "!x&!y|x&y|z",
    "x&z|y",
    "!x&!z|x&z|y",
    "y|z",
    "!x|y|z",
    "x",
    "!y&!z|x",
    "!y&z|x",
    "!y|x",
    "!z&y|x",
    "!z|x",
    "!y&z|!z&y|x",
    "!y|!z|x",
    "x|y&z",
    "!y&!z|x|y&z",
    "x|z",
    "!y|x|z",
    "x|y",
    "!z|x|y",
    "x|y|z",
    "!x|x",
};

int main() {
	ios_base::sync_with_stdio(0);
	cin.tie(0);

	int n;
	cin >> n;
	REP(i, n) {
		int a = 0;
		REP(j, 8) {
			char c; cin >> c;
			a += (c - '0') << j;
		}
		cout << ans[a] << "\n";
	}
}