/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-04-29 13:44:47
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n , q , cnt = 1 , A[MAXN] , ans[MAXN];
vector<pll> Q[MAXN];
vector<ll> vec;

ll insert(ll A){
    for(ll i : vec){
        ll x = (1ll << 63 - __builtin_clzll(i));
        if(A & x)   A ^= i;
    }
    return A;
}

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n >> q;
    for(ll i = 1 ; i <= n ; i++)    cin >> A[i];
    for(ll i = 0 ; i < q ; i++){
        ll l , x;
        cin >> l >> x;
        Q[l].push_back({x , i});
    }

    for(ll i = 1 ; i <= n ; i++){
        A[i] = insert(A[i]);
        if(A[i] != 0)   vec.push_back(A[i]);
        else    cnt = cnt * 2 % MOD;
        for(pll j : Q[i])   ans[j.Y] = (insert(j.X) == 0 ? cnt : 0);
    }
    for(ll i = 0 ; i < q ; i++) cout << ans[i] << endl;

    return 0;
}
/*

*/