/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <set>
#include <vector>
#include <algorithm>

using namespace std;

class C {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n, m;
		in >> n >> m;
		vector<int> top;
		int sum = 0;
		vector<int> w(n);
		long long answer = 0;
		for (int i = 0; i < n; ++i) {
			in >> w[i];
		}
		for (int i = 0; i < m; ++i) {
			int id = 0;
			in >> id;
			--id;
			auto it = std::find(top.begin(), top.end(), id);
			if(it == top.end()) {
				for(int x: top) {
					answer += w[x];
				}
				top.push_back(id);
			}
			else {
				auto j = it;
				++j;
				for(; j != top.end(); ++j) {
					answer += w[*j];
				}
				top.erase(it);
				top.push_back(id);
			}
		}
		out << answer;
	}
};


int main() {
	std::cin.sync_with_stdio(false);
	std::cin.tie(0);
	std::cout << std::fixed;
	std::cout.precision(20);
	C solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}