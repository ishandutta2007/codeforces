/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

const long long mod = 1000000007;

class ACutAndPaste {
public:
    void solve(std::istream &in, std::ostream &out) {
        int t;
        in >> t;

        while (t--) {
            int x;
            string s;

            in >> x >> s;

            vector<char> ss(s.begin(), s.end());

            long long lon = s.length();

            for (int i = 1; i <= x; ++i) {
                lon = (1LL * i + 1LL * (ss[i - 1] - '0') * (lon - i + mod) % mod) % mod;
                int fin = ss.size();
                for (int j = 0; j < ss[i - 1] - '1' && ss.size() < x; ++j) {
                    for (int u = i; u < fin && ss.size() < x; ++u) {
                        char a = ss[u];
                        ss.push_back(a);
                    }
                }
            }

            out << lon << endl;
        }
    }
};


int main() {
    ACutAndPaste solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}