/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;
typedef pair<ll , pll> pl3;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define Mp                          make_pair
#define tab                         '\t'
#define sep                         ' '
#define endl                        '\n'
#define debug(x)                    cerr << #x << " = " << x << endl
#define SZ(x)                       ll(x.size())
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define file_io                     freopen("in.txt" , "r+" , stdin) ; freopen("out.txt" , "w+" , stdout);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

inline ll input() {
	ll n;
	cin >> n;
	return n;
}

ll poww(ll a, ll b, ll md) {
	return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

ll Sqrt(ll x, ll y) {
	ll t = pow(x, 1. / y);
	for (ll i = max(0LL, t - 10); i <= t + 10; i++) {
		if (poww(i, y, ll(8e18)) == x) return i;
	}
	return -1;
}

set_random;

const ll MAXN = 2010;
const ll INF = 8e18;
const ll MOD1 = 998244353;
const ll MOD2 = 1e9 + 7;
const ll MOD3 = 1e9 + 9;

ll n , k , mark[MAXN][MAXN];
string s[MAXN] , minString;
vector<pl3> vec[2 * MAXN];

vector<pll> adj(pll p)
{
	vector<pll> ans;
	if(1 <= p.X + 1 && p.X + 1 <= n && 1 <= p.Y && p.Y <= n)
	{
		ans.push_back({p.X + 1 , p.Y});
	}
	if(1 <= p.X && p.X <= n && 1 <= p.Y + 1 && p.Y + 1 <= n)
	{
		ans.push_back({p.X , p.Y + 1});
	}
	return ans;
}

int main() {
	fast_io;

	cin >> n >> k;
	for(ll i = 1 ; i <= n ; i++)
	{
		cin >> s[i];
		s[i] = "." + s[i];
	}

	vec[0].push_back({0 , {0 , 1}});
	for(ll i = 1 ; i <= n + n - 1 ; i++)
	{
		char miniChar = ' ';
		for(pl3 j : vec[i - 1])
		{
			if(j.X < k)
			{
				miniChar = 'a';
			}
			for(pll l : adj(j.Y))
			{
				miniChar = (miniChar == ' ' ? s[l.X][l.Y] : min(miniChar , s[l.X][l.Y]));
			}
		}

		for(pl3 j : vec[i - 1])
		{
			for(pll l : adj(j.Y))
			{
				if(!mark[l.X][l.Y])
				{
					if (s[l.X][l.Y] == miniChar)
					{
						vec[i].push_back({j.X , l});
						mark[l.X][l.Y] = 1;
						continue;
					}
					if(j.X < k)
					{
						vec[i].push_back({j.X + 1 , l});
						mark[l.X][l.Y] = 1;
					}
				}
			}
		}
		Sort(vec[i]);
		minString += string(1 , miniChar);
	}
	cout << minString << endl;

	return 0;
}
/*
todo :
    1- set constants
    2- check TimeLimit and MemoryLimit
    3- check special test cases
    4- don't forget BS can help you that is good idea(use for loop for floats)
    5- don't forget printf and scanf can help you in your code speed
*/