/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <vector>

using namespace std;

class TaskA {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n;
		string s;
		in >> n >> s;
		vector<int> v(n);
		for (int i = 0; i < n; ++i) {
			v[i] = s[i] - '0';
		}
		vector<int> sizes;
		for (int i = 0; i < n;) {
			int j = i;
			while(v[j] == v[i]) {
				++j;
			}
			sizes.push_back(j - i);
			i = j;
		}

		out << min(n, (int)sizes.size() + 2);

	}
};


int main() {
	std::ios_base::sync_with_stdio(false);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	in.tie(0);
	out << std::fixed;
	out.precision(20);
	solver.solve(in, out);
	return 0;
}