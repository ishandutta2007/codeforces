#include <iostream>
#include <fstream>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cassert>
#include <ctime>
#include <algorithm>
#include <queue>
#include <memory.h>
#include <stack>
#define mp make_pair
#define pb push_back                     
#define setval(a,v) memset(a,v,sizeof(a))

#if ( _WIN32 || __WIN32__ )
    #define LLD "%I64d"
#else
    #define LLD "%lld"
#endif

using namespace std;

typedef long long ll;
typedef long double ld;

const int ans[610] = {1,20732,39176,57023,74417,91433,108284,124997,141503,157925,174194,190283,206333,222272,238261,253974,269760,285396,301101,316642,332181,347665,363080,378518,393993,409309,424569,439791,454974,470153,485275,500236,515414,530472,545501,560489,575503,590416,605357,620283,635171,649933,664771,679672,694490,709115,723896,738676,753318,768087,782754,797361,812028,826720,841364,855895,870514,885138,899686,914214,928780,943326,957871,972309,986746,1001141,1015619,1030064,1044521,1058798,1073174,1087554,1101903,1116309,1130652,1145026,1159339,1173746,1188093,1202432,1216688,1230996,1245272,1259537,1273689,1287980,1302081,1316314,1330570,1344730,1358925,1373089,1387240,1401374,1415626,1429775,1443939,1458083,1472195,1486323,1500453,1514527,1528622,1542683,1556702,1570716,1584772,1598783,1612824,1626767,1640857,1654854,1668892,1682935,1696863,1710912,1724880,1738807,1752772,1766647,1780671,1794680,1808647,1822528,1836360,1850327,1864207,1878117,1892075,1906069,1919906,1933873,1947727,1961653,1975510,1989438,2003304,2017180,2031020,2044905,2058719,2072561,2086330,2100185,2113990,2127838,2141713,2155442,2169247,2183018,2196835,2210669,2224515,2238231,2252025,2265828,2279483,2293240,2306931,2320691,2334374,2348163,2361872,2375651,2389450,2403099,2416904,2430503,2444352,2458031,2471679,2485399,2499026,2512726,2526330,2540008,2553802,2567510,2581128,2594819,2608394,2622048,2635613,2649274,2662840,2676540,2690185,2703798,2717374,2730937,2744682,2758290,2771910,2785459,2799109,2812655,2826276,2839799,2853362,2866912,2880505,2894042,2907606,2921165,2934703,2948312,2961881,2975367,2988902,3002504,3016009,3029542,3043022,3056533,3069997,3083637,3097083,3110676,3124226,3137800,3151359,3164764,3178276,3191741,3205350,3218845,3232326,3245793,3259118,3272566,3286023,3299511,3312951,3326372,3339778,3353226,3366670,3380175,3393551,3407022,3420476,3433831,3447272,3460716,3474095,3487498,3500974,3514444,3527908,3541338,3554739,3568117,3581527,3594895,3608315,3621779,3635172,3648522,3662084,3675493,3688865,3702151,3715571,3729014,3742387,3755763,3769101,3782494,3795810,3809252,3822594,3835966,3849184,3862541,3875855,3889196,3902460,3915712,3929085,3942498,3955921,3969211,3982460,3995735,4009128,4022481,4035734,4049121,4062451,4075821,4089090,4102417,4115722,4129050,4142364,4155686,4168923,4182183,4195422,4208687,4221985,4235233,4248402,4261661,4274957,4288065,4301295,4314529,4327912,4341144,4354389,4367588,4380845,4394200,4407487,4420721,4433902,4447138,4460241,4473457,4486724,4499966,4513194,4526427,4539593,4552844,4566061,4579285,4592654,4605817,4619006,4632187,4645360,4658586,4671705,4684949,4698103,4711274,4724481,4737851,4750950,4764205,4777296,4790546,4803668,4816891,4830058,4843322,4856492,4869676,4882798,4896011,4909157,4922306,4935488,4948680,4961878,4975039,4988226,5001443,5014695,5027802,5040863,5054025,5067205,5080256,5093333,5106459,5119591,5132783,5145981,5159150,5172232,5185364,5198500,5211713,5224741,5237883,5250964,5264198,5277359,5290378,5303300,5316423,5329410,5342497,5355703,5368777,5381929,5395046,5408176,5421235,5434359,5447430,5460458,5473438,5486492,5499560,5512631,5525740,5538821,5551962,5564989,5578173,5591257,5604343,5617364,5630520,5643587,5656616,5669724,5682698,5695725,5708793,5721870,5734927,5747922,5760903,5773921,5786983,5800089,5813145,5826127,5839332,5852352,5865406,5878520,5891561,5904577,5917583,5930672,5943777,5956845,5969954,5982939,5995955,6008887,6021859,6034853,6047914,6060852,6073902,6086846,6099890,6112891,6125905,6139005,6152008,6164976,6178055,6191134,6204006,6217047,6230025,6243137,6256157,6268950,6281850,6294880,6307854,6320783,6333770,6346739,6359727,6372759,6385750,6398760,6411621,6424585,6437478,6450524,6463538,6476474,6489472,6502519,6515451,6528444,6541470,6554452,6567411,6580260,6593326,6606273,6619295,6632211,6645043,6657923,6670804,6683806,6696711,6709795,6722794,6735695,6748552,6761489,6774395,6787249,6800239,6813192,6826057,6838975,6851866,6864928,6877737,6890595,6903508,6916351,6929345,6942266,6955229,6968229,6981142,6994053,7006943,7019911,7032873,7045744,7058671,7071649,7084585,7097378,7110341,7123329,7136261,7149099,7162172,7175070,7188010,7200837,7213777,7226696,7239661,7252624,7265456,7278251,7291115,7304018,7316887,7329881,7342739,7355504,7368429,7381276,7394032,7406982,7419884,7432639,7445516,7458445,7471320,7484264,7497063,7509988,7522824,7535700,7548535,7561435,7574170,7587022,7599794,7612748,7625549,7638354,7651279,7664134,7676915,7689731,7702574,7715474,7728305,7741178,7753967,7766793,7779545,7792385,7805346,7818155,7830988,7843890,7856583,7869478,7882314,7895233,7908066,7920913,7933766,7946432,7959316,7972124,7985018,7997861,8010615,8023413,8036158,8049029,8061849,8074668,8087510,8100189,8112936,8125719};


int power(int a,int b,int n)            
{
//  cerr<<a<<b<<n<<endl
  if (b==0)
    return 1;
  if (b%2==0)
  {
    int tmp=power(a,b/2,n);
    return (tmp*1LL*tmp)%n;
  }
  return (a*1LL*power(a,b-1,n))%n;
}

bool test(int n,int a){                                                                                    
    int s = n-1;
    int t = 0;
    while (s%2 == 0)
        s /= 2,t++;
    a = power(a,s,n);
    if (a == 1)
        return true;
    for (int i = 0; i < t; i++){        
        int tmp = (a*1LL*a)%n;
//        cerr << a << " " << tmp << endl;
        if (tmp == 1)
            return a == n-1;
        a = tmp;
    }
    return false;
}

bool test(int n){
    if (n <= 10)
        return n == 2 || n == 5;
    if (n%4 != 1)
        return false;
    if (!test(n,2))
        return false;
    if (!test(n,3))
        return false;
    if (!test(n,5))
        return false;
    if (!test(n,7))
        return false;
    return true;
}


int get(int r){
    int ans = ::ans[r/500000] - 1;
    int l = (r/500000)*500000;
    while (l%4 != 1)
        l++;
    while (l <= r){
        ans += test(l);
        l+=4;
    }
    return ans;
}

int main()
{
  #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
  #endif

  int l,r;
  cin >> l >> r;
/*  int ans = 0;
  if (l <= 2 && 2 <= r)
    ans++;

  while ((l&3) != 1)
    l++;
  while ((r&3) != 1)
    --r;

  for (int i = l; i <= r; i+=4)
    if (test(i)){
  //      cerr << i << endl;
        ans ++;
    }

  cout << ans << endl;

  printf("const int ans[] = {");

  int ans = 0;

  for (int i = 1; i <= 300000000; i++){
     ans += test(i);
     if (i % 500000 == 0){
        printf("%d%c",ans,",}"[i == 300000000]);
        cerr << i <<" "<<ans << endl;
     }
  }                   */

//  cerr << get(2) <<" "<<get(1) << endl;

  cout << get(r) - get(l-1) + (l<=2 && r>=2)<< endl;

  return 0;
}