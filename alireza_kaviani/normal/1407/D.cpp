/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-09-08 19:05:04
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

int n , A[MAXN] , dp[MAXN];
vector<int> vec , vec2;

int main() {
	ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

	cin >> n;
	vec = vec2 = {1};
	cin >> A[1];
	for(int i = 2 ; i <= n ; i++){
		cin >> A[i];
		dp[i] = MOD;
		int flag = 1 , flag2 = 1;
		while(SZ(vec) && A[vec.back()] >= A[i]){
			dp[i] = min(dp[i] , dp[vec.back()] + 1);
			if(A[vec.back()] == A[i])
				flag = 0;
			vec.pop_back();
		}
		while(SZ(vec2) && A[vec2.back()] <= A[i]){
			dp[i] = min(dp[i] , dp[vec2.back()] + 1);
			if(A[vec2.back()] == A[i])
				flag2 = 0;
			vec2.pop_back();
		}
		if(SZ(vec) > 0 && flag)
			dp[i] = min(dp[i] , dp[vec.back()] + 1);
		if(SZ(vec2) > 0 && flag2)
			dp[i] = min(dp[i] , dp[vec2.back()] + 1);
		vec.push_back(i);
		vec2.push_back(i);
		//cout << i << sep << dp[i] << endl;
	}
	cout << dp[n] << endl;

    return 0;
}
/*

*/