#include <bits/stdc++.h>
using namespace std;

int N;
int dp[20][20]; // more than i need

int add(int i, int j) {
	int x;
	cin >> x;
	dp[i][j] = x;
	return 0;
}

void add(int idx) {
	int yay = idx < N * N ? add(idx / N, idx % N) : 1;
}

void bellman(int k, int j, int i) {
	// confusing method name too :D
	int yay = (i < N && j < N && k < N) ? (dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j])) : -1;
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	// freopen("input.txt", "r", stdin);

	cin >> N;
	add(0);
	add(1);
	add(2);
	add(3);
	add(4);
	add(5);
	add(6);
	add(7);
	add(8);
	add(9);
	add(10);
	add(11);
	add(12);
	add(13);
	add(14);
	add(15);
	add(16);
	add(17);
	add(18);
	add(19);
	add(20);
	add(21);
	add(22);
	add(23);
	add(24);
	add(25);
	add(26);
	add(27);
	add(28);
	add(29);
	add(30);
	add(31);
	add(32);
	add(33);
	add(34);
	add(35);
	add(36);
	add(37);
	add(38);
	add(39);
	add(40);
	add(41);
	add(42);
	add(43);
	add(44);
	add(45);
	add(46);
	add(47);
	add(48);
	add(49);
	add(50);
	add(51);
	add(52);
	add(53);
	add(54);
	add(55);
	add(56);
	add(57);
	add(58);
	add(59);
	add(60);
	add(61);
	add(62);
	add(63);
	add(64);
	add(65);
	add(66);
	add(67);
	add(68);
	add(69);
	add(70);
	add(71);
	add(72);
	add(73);
	add(74);
	add(75);
	add(76);
	add(77);
	add(78);
	add(79);
	add(80);
	add(81);
	add(82);
	add(83);
	add(84);
	add(85);
	add(86);
	add(87);
	add(88);
	add(89);
	add(90);
	add(91);
	add(92);
	add(93);
	add(94);
	add(95);
	add(96);
	add(97);
	add(98);
	add(99);
	bellman(0,0,0);bellman(0,0,1);bellman(0,0,2);bellman(0,0,3);bellman(0,0,4);bellman(0,0,5);bellman(0,0,6);bellman(0,0,7);bellman(0,0,8);bellman(0,0,9);
	bellman(0,1,0);bellman(0,1,1);bellman(0,1,2);bellman(0,1,3);bellman(0,1,4);bellman(0,1,5);bellman(0,1,6);bellman(0,1,7);bellman(0,1,8);bellman(0,1,9);
	bellman(0,2,0);bellman(0,2,1);bellman(0,2,2);bellman(0,2,3);bellman(0,2,4);bellman(0,2,5);bellman(0,2,6);bellman(0,2,7);bellman(0,2,8);bellman(0,2,9);
	bellman(0,3,0);bellman(0,3,1);bellman(0,3,2);bellman(0,3,3);bellman(0,3,4);bellman(0,3,5);bellman(0,3,6);bellman(0,3,7);bellman(0,3,8);bellman(0,3,9);
	bellman(0,4,0);bellman(0,4,1);bellman(0,4,2);bellman(0,4,3);bellman(0,4,4);bellman(0,4,5);bellman(0,4,6);bellman(0,4,7);bellman(0,4,8);bellman(0,4,9);
	bellman(0,5,0);bellman(0,5,1);bellman(0,5,2);bellman(0,5,3);bellman(0,5,4);bellman(0,5,5);bellman(0,5,6);bellman(0,5,7);bellman(0,5,8);bellman(0,5,9);
	bellman(0,6,0);bellman(0,6,1);bellman(0,6,2);bellman(0,6,3);bellman(0,6,4);bellman(0,6,5);bellman(0,6,6);bellman(0,6,7);bellman(0,6,8);bellman(0,6,9);
	bellman(0,7,0);bellman(0,7,1);bellman(0,7,2);bellman(0,7,3);bellman(0,7,4);bellman(0,7,5);bellman(0,7,6);bellman(0,7,7);bellman(0,7,8);bellman(0,7,9);
	bellman(0,8,0);bellman(0,8,1);bellman(0,8,2);bellman(0,8,3);bellman(0,8,4);bellman(0,8,5);bellman(0,8,6);bellman(0,8,7);bellman(0,8,8);bellman(0,8,9);
	bellman(0,9,0);bellman(0,9,1);bellman(0,9,2);bellman(0,9,3);bellman(0,9,4);bellman(0,9,5);bellman(0,9,6);bellman(0,9,7);bellman(0,9,8);bellman(0,9,9);
	bellman(1,0,0);bellman(1,0,1);bellman(1,0,2);bellman(1,0,3);bellman(1,0,4);bellman(1,0,5);bellman(1,0,6);bellman(1,0,7);bellman(1,0,8);bellman(1,0,9);
	bellman(1,1,0);bellman(1,1,1);bellman(1,1,2);bellman(1,1,3);bellman(1,1,4);bellman(1,1,5);bellman(1,1,6);bellman(1,1,7);bellman(1,1,8);bellman(1,1,9);
	bellman(1,2,0);bellman(1,2,1);bellman(1,2,2);bellman(1,2,3);bellman(1,2,4);bellman(1,2,5);bellman(1,2,6);bellman(1,2,7);bellman(1,2,8);bellman(1,2,9);
	bellman(1,3,0);bellman(1,3,1);bellman(1,3,2);bellman(1,3,3);bellman(1,3,4);bellman(1,3,5);bellman(1,3,6);bellman(1,3,7);bellman(1,3,8);bellman(1,3,9);
	bellman(1,4,0);bellman(1,4,1);bellman(1,4,2);bellman(1,4,3);bellman(1,4,4);bellman(1,4,5);bellman(1,4,6);bellman(1,4,7);bellman(1,4,8);bellman(1,4,9);
	bellman(1,5,0);bellman(1,5,1);bellman(1,5,2);bellman(1,5,3);bellman(1,5,4);bellman(1,5,5);bellman(1,5,6);bellman(1,5,7);bellman(1,5,8);bellman(1,5,9);
	bellman(1,6,0);bellman(1,6,1);bellman(1,6,2);bellman(1,6,3);bellman(1,6,4);bellman(1,6,5);bellman(1,6,6);bellman(1,6,7);bellman(1,6,8);bellman(1,6,9);
	bellman(1,7,0);bellman(1,7,1);bellman(1,7,2);bellman(1,7,3);bellman(1,7,4);bellman(1,7,5);bellman(1,7,6);bellman(1,7,7);bellman(1,7,8);bellman(1,7,9);
	bellman(1,8,0);bellman(1,8,1);bellman(1,8,2);bellman(1,8,3);bellman(1,8,4);bellman(1,8,5);bellman(1,8,6);bellman(1,8,7);bellman(1,8,8);bellman(1,8,9);
	bellman(1,9,0);bellman(1,9,1);bellman(1,9,2);bellman(1,9,3);bellman(1,9,4);bellman(1,9,5);bellman(1,9,6);bellman(1,9,7);bellman(1,9,8);bellman(1,9,9);
	bellman(2,0,0);bellman(2,0,1);bellman(2,0,2);bellman(2,0,3);bellman(2,0,4);bellman(2,0,5);bellman(2,0,6);bellman(2,0,7);bellman(2,0,8);bellman(2,0,9);
	bellman(2,1,0);bellman(2,1,1);bellman(2,1,2);bellman(2,1,3);bellman(2,1,4);bellman(2,1,5);bellman(2,1,6);bellman(2,1,7);bellman(2,1,8);bellman(2,1,9);
	bellman(2,2,0);bellman(2,2,1);bellman(2,2,2);bellman(2,2,3);bellman(2,2,4);bellman(2,2,5);bellman(2,2,6);bellman(2,2,7);bellman(2,2,8);bellman(2,2,9);
	bellman(2,3,0);bellman(2,3,1);bellman(2,3,2);bellman(2,3,3);bellman(2,3,4);bellman(2,3,5);bellman(2,3,6);bellman(2,3,7);bellman(2,3,8);bellman(2,3,9);
	bellman(2,4,0);bellman(2,4,1);bellman(2,4,2);bellman(2,4,3);bellman(2,4,4);bellman(2,4,5);bellman(2,4,6);bellman(2,4,7);bellman(2,4,8);bellman(2,4,9);
	bellman(2,5,0);bellman(2,5,1);bellman(2,5,2);bellman(2,5,3);bellman(2,5,4);bellman(2,5,5);bellman(2,5,6);bellman(2,5,7);bellman(2,5,8);bellman(2,5,9);
	bellman(2,6,0);bellman(2,6,1);bellman(2,6,2);bellman(2,6,3);bellman(2,6,4);bellman(2,6,5);bellman(2,6,6);bellman(2,6,7);bellman(2,6,8);bellman(2,6,9);
	bellman(2,7,0);bellman(2,7,1);bellman(2,7,2);bellman(2,7,3);bellman(2,7,4);bellman(2,7,5);bellman(2,7,6);bellman(2,7,7);bellman(2,7,8);bellman(2,7,9);
	bellman(2,8,0);bellman(2,8,1);bellman(2,8,2);bellman(2,8,3);bellman(2,8,4);bellman(2,8,5);bellman(2,8,6);bellman(2,8,7);bellman(2,8,8);bellman(2,8,9);
	bellman(2,9,0);bellman(2,9,1);bellman(2,9,2);bellman(2,9,3);bellman(2,9,4);bellman(2,9,5);bellman(2,9,6);bellman(2,9,7);bellman(2,9,8);bellman(2,9,9);
	bellman(3,0,0);bellman(3,0,1);bellman(3,0,2);bellman(3,0,3);bellman(3,0,4);bellman(3,0,5);bellman(3,0,6);bellman(3,0,7);bellman(3,0,8);bellman(3,0,9);
	bellman(3,1,0);bellman(3,1,1);bellman(3,1,2);bellman(3,1,3);bellman(3,1,4);bellman(3,1,5);bellman(3,1,6);bellman(3,1,7);bellman(3,1,8);bellman(3,1,9);
	bellman(3,2,0);bellman(3,2,1);bellman(3,2,2);bellman(3,2,3);bellman(3,2,4);bellman(3,2,5);bellman(3,2,6);bellman(3,2,7);bellman(3,2,8);bellman(3,2,9);
	bellman(3,3,0);bellman(3,3,1);bellman(3,3,2);bellman(3,3,3);bellman(3,3,4);bellman(3,3,5);bellman(3,3,6);bellman(3,3,7);bellman(3,3,8);bellman(3,3,9);
	bellman(3,4,0);bellman(3,4,1);bellman(3,4,2);bellman(3,4,3);bellman(3,4,4);bellman(3,4,5);bellman(3,4,6);bellman(3,4,7);bellman(3,4,8);bellman(3,4,9);
	bellman(3,5,0);bellman(3,5,1);bellman(3,5,2);bellman(3,5,3);bellman(3,5,4);bellman(3,5,5);bellman(3,5,6);bellman(3,5,7);bellman(3,5,8);bellman(3,5,9);
	bellman(3,6,0);bellman(3,6,1);bellman(3,6,2);bellman(3,6,3);bellman(3,6,4);bellman(3,6,5);bellman(3,6,6);bellman(3,6,7);bellman(3,6,8);bellman(3,6,9);
	bellman(3,7,0);bellman(3,7,1);bellman(3,7,2);bellman(3,7,3);bellman(3,7,4);bellman(3,7,5);bellman(3,7,6);bellman(3,7,7);bellman(3,7,8);bellman(3,7,9);
	bellman(3,8,0);bellman(3,8,1);bellman(3,8,2);bellman(3,8,3);bellman(3,8,4);bellman(3,8,5);bellman(3,8,6);bellman(3,8,7);bellman(3,8,8);bellman(3,8,9);
	bellman(3,9,0);bellman(3,9,1);bellman(3,9,2);bellman(3,9,3);bellman(3,9,4);bellman(3,9,5);bellman(3,9,6);bellman(3,9,7);bellman(3,9,8);bellman(3,9,9);
	bellman(4,0,0);bellman(4,0,1);bellman(4,0,2);bellman(4,0,3);bellman(4,0,4);bellman(4,0,5);bellman(4,0,6);bellman(4,0,7);bellman(4,0,8);bellman(4,0,9);
	bellman(4,1,0);bellman(4,1,1);bellman(4,1,2);bellman(4,1,3);bellman(4,1,4);bellman(4,1,5);bellman(4,1,6);bellman(4,1,7);bellman(4,1,8);bellman(4,1,9);
	bellman(4,2,0);bellman(4,2,1);bellman(4,2,2);bellman(4,2,3);bellman(4,2,4);bellman(4,2,5);bellman(4,2,6);bellman(4,2,7);bellman(4,2,8);bellman(4,2,9);
	bellman(4,3,0);bellman(4,3,1);bellman(4,3,2);bellman(4,3,3);bellman(4,3,4);bellman(4,3,5);bellman(4,3,6);bellman(4,3,7);bellman(4,3,8);bellman(4,3,9);
	bellman(4,4,0);bellman(4,4,1);bellman(4,4,2);bellman(4,4,3);bellman(4,4,4);bellman(4,4,5);bellman(4,4,6);bellman(4,4,7);bellman(4,4,8);bellman(4,4,9);
	bellman(4,5,0);bellman(4,5,1);bellman(4,5,2);bellman(4,5,3);bellman(4,5,4);bellman(4,5,5);bellman(4,5,6);bellman(4,5,7);bellman(4,5,8);bellman(4,5,9);
	bellman(4,6,0);bellman(4,6,1);bellman(4,6,2);bellman(4,6,3);bellman(4,6,4);bellman(4,6,5);bellman(4,6,6);bellman(4,6,7);bellman(4,6,8);bellman(4,6,9);
	bellman(4,7,0);bellman(4,7,1);bellman(4,7,2);bellman(4,7,3);bellman(4,7,4);bellman(4,7,5);bellman(4,7,6);bellman(4,7,7);bellman(4,7,8);bellman(4,7,9);
	bellman(4,8,0);bellman(4,8,1);bellman(4,8,2);bellman(4,8,3);bellman(4,8,4);bellman(4,8,5);bellman(4,8,6);bellman(4,8,7);bellman(4,8,8);bellman(4,8,9);
	bellman(4,9,0);bellman(4,9,1);bellman(4,9,2);bellman(4,9,3);bellman(4,9,4);bellman(4,9,5);bellman(4,9,6);bellman(4,9,7);bellman(4,9,8);bellman(4,9,9);
	bellman(5,0,0);bellman(5,0,1);bellman(5,0,2);bellman(5,0,3);bellman(5,0,4);bellman(5,0,5);bellman(5,0,6);bellman(5,0,7);bellman(5,0,8);bellman(5,0,9);
	bellman(5,1,0);bellman(5,1,1);bellman(5,1,2);bellman(5,1,3);bellman(5,1,4);bellman(5,1,5);bellman(5,1,6);bellman(5,1,7);bellman(5,1,8);bellman(5,1,9);
	bellman(5,2,0);bellman(5,2,1);bellman(5,2,2);bellman(5,2,3);bellman(5,2,4);bellman(5,2,5);bellman(5,2,6);bellman(5,2,7);bellman(5,2,8);bellman(5,2,9);
	bellman(5,3,0);bellman(5,3,1);bellman(5,3,2);bellman(5,3,3);bellman(5,3,4);bellman(5,3,5);bellman(5,3,6);bellman(5,3,7);bellman(5,3,8);bellman(5,3,9);
	bellman(5,4,0);bellman(5,4,1);bellman(5,4,2);bellman(5,4,3);bellman(5,4,4);bellman(5,4,5);bellman(5,4,6);bellman(5,4,7);bellman(5,4,8);bellman(5,4,9);
	bellman(5,5,0);bellman(5,5,1);bellman(5,5,2);bellman(5,5,3);bellman(5,5,4);bellman(5,5,5);bellman(5,5,6);bellman(5,5,7);bellman(5,5,8);bellman(5,5,9);
	bellman(5,6,0);bellman(5,6,1);bellman(5,6,2);bellman(5,6,3);bellman(5,6,4);bellman(5,6,5);bellman(5,6,6);bellman(5,6,7);bellman(5,6,8);bellman(5,6,9);
	bellman(5,7,0);bellman(5,7,1);bellman(5,7,2);bellman(5,7,3);bellman(5,7,4);bellman(5,7,5);bellman(5,7,6);bellman(5,7,7);bellman(5,7,8);bellman(5,7,9);
	bellman(5,8,0);bellman(5,8,1);bellman(5,8,2);bellman(5,8,3);bellman(5,8,4);bellman(5,8,5);bellman(5,8,6);bellman(5,8,7);bellman(5,8,8);bellman(5,8,9);
	bellman(5,9,0);bellman(5,9,1);bellman(5,9,2);bellman(5,9,3);bellman(5,9,4);bellman(5,9,5);bellman(5,9,6);bellman(5,9,7);bellman(5,9,8);bellman(5,9,9);
	bellman(6,0,0);bellman(6,0,1);bellman(6,0,2);bellman(6,0,3);bellman(6,0,4);bellman(6,0,5);bellman(6,0,6);bellman(6,0,7);bellman(6,0,8);bellman(6,0,9);
	bellman(6,1,0);bellman(6,1,1);bellman(6,1,2);bellman(6,1,3);bellman(6,1,4);bellman(6,1,5);bellman(6,1,6);bellman(6,1,7);bellman(6,1,8);bellman(6,1,9);
	bellman(6,2,0);bellman(6,2,1);bellman(6,2,2);bellman(6,2,3);bellman(6,2,4);bellman(6,2,5);bellman(6,2,6);bellman(6,2,7);bellman(6,2,8);bellman(6,2,9);
	bellman(6,3,0);bellman(6,3,1);bellman(6,3,2);bellman(6,3,3);bellman(6,3,4);bellman(6,3,5);bellman(6,3,6);bellman(6,3,7);bellman(6,3,8);bellman(6,3,9);
	bellman(6,4,0);bellman(6,4,1);bellman(6,4,2);bellman(6,4,3);bellman(6,4,4);bellman(6,4,5);bellman(6,4,6);bellman(6,4,7);bellman(6,4,8);bellman(6,4,9);
	bellman(6,5,0);bellman(6,5,1);bellman(6,5,2);bellman(6,5,3);bellman(6,5,4);bellman(6,5,5);bellman(6,5,6);bellman(6,5,7);bellman(6,5,8);bellman(6,5,9);
	bellman(6,6,0);bellman(6,6,1);bellman(6,6,2);bellman(6,6,3);bellman(6,6,4);bellman(6,6,5);bellman(6,6,6);bellman(6,6,7);bellman(6,6,8);bellman(6,6,9);
	bellman(6,7,0);bellman(6,7,1);bellman(6,7,2);bellman(6,7,3);bellman(6,7,4);bellman(6,7,5);bellman(6,7,6);bellman(6,7,7);bellman(6,7,8);bellman(6,7,9);
	bellman(6,8,0);bellman(6,8,1);bellman(6,8,2);bellman(6,8,3);bellman(6,8,4);bellman(6,8,5);bellman(6,8,6);bellman(6,8,7);bellman(6,8,8);bellman(6,8,9);
	bellman(6,9,0);bellman(6,9,1);bellman(6,9,2);bellman(6,9,3);bellman(6,9,4);bellman(6,9,5);bellman(6,9,6);bellman(6,9,7);bellman(6,9,8);bellman(6,9,9);
	bellman(7,0,0);bellman(7,0,1);bellman(7,0,2);bellman(7,0,3);bellman(7,0,4);bellman(7,0,5);bellman(7,0,6);bellman(7,0,7);bellman(7,0,8);bellman(7,0,9);
	bellman(7,1,0);bellman(7,1,1);bellman(7,1,2);bellman(7,1,3);bellman(7,1,4);bellman(7,1,5);bellman(7,1,6);bellman(7,1,7);bellman(7,1,8);bellman(7,1,9);
	bellman(7,2,0);bellman(7,2,1);bellman(7,2,2);bellman(7,2,3);bellman(7,2,4);bellman(7,2,5);bellman(7,2,6);bellman(7,2,7);bellman(7,2,8);bellman(7,2,9);
	bellman(7,3,0);bellman(7,3,1);bellman(7,3,2);bellman(7,3,3);bellman(7,3,4);bellman(7,3,5);bellman(7,3,6);bellman(7,3,7);bellman(7,3,8);bellman(7,3,9);
	bellman(7,4,0);bellman(7,4,1);bellman(7,4,2);bellman(7,4,3);bellman(7,4,4);bellman(7,4,5);bellman(7,4,6);bellman(7,4,7);bellman(7,4,8);bellman(7,4,9);
	bellman(7,5,0);bellman(7,5,1);bellman(7,5,2);bellman(7,5,3);bellman(7,5,4);bellman(7,5,5);bellman(7,5,6);bellman(7,5,7);bellman(7,5,8);bellman(7,5,9);
	bellman(7,6,0);bellman(7,6,1);bellman(7,6,2);bellman(7,6,3);bellman(7,6,4);bellman(7,6,5);bellman(7,6,6);bellman(7,6,7);bellman(7,6,8);bellman(7,6,9);
	bellman(7,7,0);bellman(7,7,1);bellman(7,7,2);bellman(7,7,3);bellman(7,7,4);bellman(7,7,5);bellman(7,7,6);bellman(7,7,7);bellman(7,7,8);bellman(7,7,9);
	bellman(7,8,0);bellman(7,8,1);bellman(7,8,2);bellman(7,8,3);bellman(7,8,4);bellman(7,8,5);bellman(7,8,6);bellman(7,8,7);bellman(7,8,8);bellman(7,8,9);
	bellman(7,9,0);bellman(7,9,1);bellman(7,9,2);bellman(7,9,3);bellman(7,9,4);bellman(7,9,5);bellman(7,9,6);bellman(7,9,7);bellman(7,9,8);bellman(7,9,9);
	bellman(8,0,0);bellman(8,0,1);bellman(8,0,2);bellman(8,0,3);bellman(8,0,4);bellman(8,0,5);bellman(8,0,6);bellman(8,0,7);bellman(8,0,8);bellman(8,0,9);
	bellman(8,1,0);bellman(8,1,1);bellman(8,1,2);bellman(8,1,3);bellman(8,1,4);bellman(8,1,5);bellman(8,1,6);bellman(8,1,7);bellman(8,1,8);bellman(8,1,9);
	bellman(8,2,0);bellman(8,2,1);bellman(8,2,2);bellman(8,2,3);bellman(8,2,4);bellman(8,2,5);bellman(8,2,6);bellman(8,2,7);bellman(8,2,8);bellman(8,2,9);
	bellman(8,3,0);bellman(8,3,1);bellman(8,3,2);bellman(8,3,3);bellman(8,3,4);bellman(8,3,5);bellman(8,3,6);bellman(8,3,7);bellman(8,3,8);bellman(8,3,9);
	bellman(8,4,0);bellman(8,4,1);bellman(8,4,2);bellman(8,4,3);bellman(8,4,4);bellman(8,4,5);bellman(8,4,6);bellman(8,4,7);bellman(8,4,8);bellman(8,4,9);
	bellman(8,5,0);bellman(8,5,1);bellman(8,5,2);bellman(8,5,3);bellman(8,5,4);bellman(8,5,5);bellman(8,5,6);bellman(8,5,7);bellman(8,5,8);bellman(8,5,9);
	bellman(8,6,0);bellman(8,6,1);bellman(8,6,2);bellman(8,6,3);bellman(8,6,4);bellman(8,6,5);bellman(8,6,6);bellman(8,6,7);bellman(8,6,8);bellman(8,6,9);
	bellman(8,7,0);bellman(8,7,1);bellman(8,7,2);bellman(8,7,3);bellman(8,7,4);bellman(8,7,5);bellman(8,7,6);bellman(8,7,7);bellman(8,7,8);bellman(8,7,9);
	bellman(8,8,0);bellman(8,8,1);bellman(8,8,2);bellman(8,8,3);bellman(8,8,4);bellman(8,8,5);bellman(8,8,6);bellman(8,8,7);bellman(8,8,8);bellman(8,8,9);
	bellman(8,9,0);bellman(8,9,1);bellman(8,9,2);bellman(8,9,3);bellman(8,9,4);bellman(8,9,5);bellman(8,9,6);bellman(8,9,7);bellman(8,9,8);bellman(8,9,9);
	bellman(9,0,0);bellman(9,0,1);bellman(9,0,2);bellman(9,0,3);bellman(9,0,4);bellman(9,0,5);bellman(9,0,6);bellman(9,0,7);bellman(9,0,8);bellman(9,0,9);
	bellman(9,1,0);bellman(9,1,1);bellman(9,1,2);bellman(9,1,3);bellman(9,1,4);bellman(9,1,5);bellman(9,1,6);bellman(9,1,7);bellman(9,1,8);bellman(9,1,9);
	bellman(9,2,0);bellman(9,2,1);bellman(9,2,2);bellman(9,2,3);bellman(9,2,4);bellman(9,2,5);bellman(9,2,6);bellman(9,2,7);bellman(9,2,8);bellman(9,2,9);
	bellman(9,3,0);bellman(9,3,1);bellman(9,3,2);bellman(9,3,3);bellman(9,3,4);bellman(9,3,5);bellman(9,3,6);bellman(9,3,7);bellman(9,3,8);bellman(9,3,9);
	bellman(9,4,0);bellman(9,4,1);bellman(9,4,2);bellman(9,4,3);bellman(9,4,4);bellman(9,4,5);bellman(9,4,6);bellman(9,4,7);bellman(9,4,8);bellman(9,4,9);
	bellman(9,5,0);bellman(9,5,1);bellman(9,5,2);bellman(9,5,3);bellman(9,5,4);bellman(9,5,5);bellman(9,5,6);bellman(9,5,7);bellman(9,5,8);bellman(9,5,9);
	bellman(9,6,0);bellman(9,6,1);bellman(9,6,2);bellman(9,6,3);bellman(9,6,4);bellman(9,6,5);bellman(9,6,6);bellman(9,6,7);bellman(9,6,8);bellman(9,6,9);
	bellman(9,7,0);bellman(9,7,1);bellman(9,7,2);bellman(9,7,3);bellman(9,7,4);bellman(9,7,5);bellman(9,7,6);bellman(9,7,7);bellman(9,7,8);bellman(9,7,9);
	bellman(9,8,0);bellman(9,8,1);bellman(9,8,2);bellman(9,8,3);bellman(9,8,4);bellman(9,8,5);bellman(9,8,6);bellman(9,8,7);bellman(9,8,8);bellman(9,8,9);
	bellman(9,9,0);bellman(9,9,1);bellman(9,9,2);bellman(9,9,3);bellman(9,9,4);bellman(9,9,5);bellman(9,9,6);bellman(9,9,7);bellman(9,9,8);bellman(9,9,9);

	int ans = 0;
	ans=max(ans,dp[0][0]);
	ans=max(ans,dp[0][1]);
	ans=max(ans,dp[0][2]);
	ans=max(ans,dp[0][3]);
	ans=max(ans,dp[0][4]);
	ans=max(ans,dp[0][5]);
	ans=max(ans,dp[0][6]);
	ans=max(ans,dp[0][7]);
	ans=max(ans,dp[0][8]);
	ans=max(ans,dp[0][9]);
	ans=max(ans,dp[1][0]);
	ans=max(ans,dp[1][1]);
	ans=max(ans,dp[1][2]);
	ans=max(ans,dp[1][3]);
	ans=max(ans,dp[1][4]);
	ans=max(ans,dp[1][5]);
	ans=max(ans,dp[1][6]);
	ans=max(ans,dp[1][7]);
	ans=max(ans,dp[1][8]);
	ans=max(ans,dp[1][9]);
	ans=max(ans,dp[2][0]);
	ans=max(ans,dp[2][1]);
	ans=max(ans,dp[2][2]);
	ans=max(ans,dp[2][3]);
	ans=max(ans,dp[2][4]);
	ans=max(ans,dp[2][5]);
	ans=max(ans,dp[2][6]);
	ans=max(ans,dp[2][7]);
	ans=max(ans,dp[2][8]);
	ans=max(ans,dp[2][9]);
	ans=max(ans,dp[3][0]);
	ans=max(ans,dp[3][1]);
	ans=max(ans,dp[3][2]);
	ans=max(ans,dp[3][3]);
	ans=max(ans,dp[3][4]);
	ans=max(ans,dp[3][5]);
	ans=max(ans,dp[3][6]);
	ans=max(ans,dp[3][7]);
	ans=max(ans,dp[3][8]);
	ans=max(ans,dp[3][9]);
	ans=max(ans,dp[4][0]);
	ans=max(ans,dp[4][1]);
	ans=max(ans,dp[4][2]);
	ans=max(ans,dp[4][3]);
	ans=max(ans,dp[4][4]);
	ans=max(ans,dp[4][5]);
	ans=max(ans,dp[4][6]);
	ans=max(ans,dp[4][7]);
	ans=max(ans,dp[4][8]);
	ans=max(ans,dp[4][9]);
	ans=max(ans,dp[5][0]);
	ans=max(ans,dp[5][1]);
	ans=max(ans,dp[5][2]);
	ans=max(ans,dp[5][3]);
	ans=max(ans,dp[5][4]);
	ans=max(ans,dp[5][5]);
	ans=max(ans,dp[5][6]);
	ans=max(ans,dp[5][7]);
	ans=max(ans,dp[5][8]);
	ans=max(ans,dp[5][9]);
	ans=max(ans,dp[6][0]);
	ans=max(ans,dp[6][1]);
	ans=max(ans,dp[6][2]);
	ans=max(ans,dp[6][3]);
	ans=max(ans,dp[6][4]);
	ans=max(ans,dp[6][5]);
	ans=max(ans,dp[6][6]);
	ans=max(ans,dp[6][7]);
	ans=max(ans,dp[6][8]);
	ans=max(ans,dp[6][9]);
	ans=max(ans,dp[7][0]);
	ans=max(ans,dp[7][1]);
	ans=max(ans,dp[7][2]);
	ans=max(ans,dp[7][3]);
	ans=max(ans,dp[7][4]);
	ans=max(ans,dp[7][5]);
	ans=max(ans,dp[7][6]);
	ans=max(ans,dp[7][7]);
	ans=max(ans,dp[7][8]);
	ans=max(ans,dp[7][9]);
	ans=max(ans,dp[8][0]);
	ans=max(ans,dp[8][1]);
	ans=max(ans,dp[8][2]);
	ans=max(ans,dp[8][3]);
	ans=max(ans,dp[8][4]);
	ans=max(ans,dp[8][5]);
	ans=max(ans,dp[8][6]);
	ans=max(ans,dp[8][7]);
	ans=max(ans,dp[8][8]);
	ans=max(ans,dp[8][9]);
	ans=max(ans,dp[9][0]);
	ans=max(ans,dp[9][1]);
	ans=max(ans,dp[9][2]);
	ans=max(ans,dp[9][3]);
	ans=max(ans,dp[9][4]);
	ans=max(ans,dp[9][5]);
	ans=max(ans,dp[9][6]);
	ans=max(ans,dp[9][7]);
	ans=max(ans,dp[9][8]);
	ans=max(ans,dp[9][9]);

	cout << ans << endl;
	return 0;
}