/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-05-26 19:05:02
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n , x , A[MAXN] , mx[MAXN];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n;
    for(int i = 1 ; i <= (n + 1) / 2 ; i++)   cin >> A[i];
    cin >> x;
    if(x > 0){
        ll S = n / 2 * x;
        for(int i = 1 ; i <= (n + 1) / 2 ; i++) S += A[i];
        if(S <= 0)  return cout << -1 << endl , 0;
        return cout << n << endl , 0;
    }
    ll S = 0 , m = (n + 1) / 2;
    x = -x;
    for(int i = m ; i >= 1 ; i--){
        S += A[i];
        //cout << S << endl;
        if(S <= 0)  mx[i] = -1;
        else    mx[i] = m - i + 1 + (x == 0 ? n + 10 : (S - 1) / x);
    }
    ll mn = INF , ans = -1;
    for(int i = 1 ; i <= m ; i++){
        //cout << i << sep << mx[i] << endl;
        mn = min(mn , mx[i]);
        if(mn >= n - i + 1) ans = n - i + 1;
    }
    cout << ans << endl;

    return 0;
}
/*

*/