#include<bits/stdc++.h>
#include<chrono>
using namespace std;
using namespace chrono;
#define all(a) a.begin(), a.end()
#define sz(x) (int(x.size()))
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<int, ll> pil;
typedef pair<ll, int> pli;
typedef vector<string> vs;
template<class T1, class T2>
istream &operator>>(istream &in, pair<T1, T2> &P){
	in >> P.first >> P.second;
	return in;
}
template<class T1, class T2>
ostream &operator<<(ostream &out, pair<T1, T2> &P){
	out << "(" << P.first << ", " << P.second << ")";
	return out;
}
template<class T>
istream &operator>>(istream &in, vector<T> &arr){
	for(auto &x: arr) in >> x;
	return in;
}
template<class T>
ostream &operator<<(ostream &out, vector<T> &arr){
	for(auto &x: arr) out << x << ' '; cout << "\n";
	return out;
}



int main(){
	ios::sync_with_stdio(0);
	cin.tie(0);
	int n;
	cin >> n;
	vector<vi> res(n, vi(n));
	res[0][0] = res[0][1] = 1;
	auto query = [&](int x, int y, int xx, int yy){
		cout << "? " << x + 1 << " " << y + 1 << " " << xx + 1 << " " << yy + 1 << endl;
		int ans;
		cin >> ans;
		return ans;
	};
	res[1][2] = res[0][1] ^ !query(0, 1, 1, 2);
	res[1][0] = res[1][2] ^ !query(1, 0, 1, 2);
	for(int i = 0; i + 2 < n; i ++){
		res[i + 2][0] = res[i][0] ^ !query(i, 0, i + 2, 0);
		res[0][i + 2] = res[0][i] ^ !query(0, i, 0, i + 2);
	}
	for(int s = 0; s <= 2 * n - 2; s ++){
		for(int i = 0, j = s; j >= 0; i ++, j --){
			if(i + 1 < n && j + 1 < n){
				res[i + 1][j + 1] = res[i][j] ^ !query(i, j, i + 1, j + 1);
			}
		}
	}
	for(int i = 0; i + 2 < n; i += 2){
		for(int j = 0; j + 2 < n; j += 2){
			if(res[i][j] && !res[i + 2][j + 2]){
				if(!(res[i][j] == res[i + 2][j] ^ res[i + 1][j] == res[i + 2][j + 1])){
					if(query(i, j, i + 2, j + 1) != (res[i][j] == res[i + 2][j + 1])){
						for(int k = 0; k < n; k ++){
							for(int l = 0; l < n; l ++){
								if(k + l & 1){
									res[k][l] = !res[k][l];
								}
							}
						}
					}
				}
				else{
					if(query(i + 1, j, i + 2, j + 2) != (res[i + 1][j] == res[i + 2][j + 2])){
						for(int k = 0; k < n; k ++){
							for(int l = 0; l < n; l ++){
								if(k + l & 1){
									res[k][l] = !res[k][l];
								}
							}
						}
					}
				}
				cout << "!" << endl;
				for(auto x: res){
					for(auto y: x){
						cout << y;
					}
					cout << endl;
				}
				return 0;
			}
		}
	}
	return 0;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                  //
//                                                                                                  //
//                                              _____________                                       //
//             ++++++++++                ___------------------\\\\                                  //
//           +++`+``+`+`++++        ///`````````````````````````````\\\                             //
//           ++`+`+``+++`++++  /////```````````````````````````````````\\                           //
//           +++`++`+`+``+++/////`````````````````````````````````````````\\                        //
//             +++`++`+``+///```````````|```````````````````````````````````\\                      //
//          ____++++/++++/`````````````/````````|````````|```````````````````\\                     //
//        /  /  / |    //``````````````|````````|```````|````````|````````````\\                    //
//       /  /  /  | ///````````/```````|```````||```````|````````|``````\```````\\                  //
//       | /  /   |///`````````|``````/````````|````````|````````|```````|```````\\                 //
//       |/   |   |//``|```````|``````|````````|`````````|```````|```````|````````\\                //
//       /\___|__//`|``|```````|`    |      ``:|````````|:```````|```````|```|`````|                //
//      /     /  /``|``|``````|/     |        :|     ```:|```````|```````|``++````++                //
//     /     / //```|``|``````|      |        |:        :|    ```|```````|```++``++`\               //
//     |    /  /````|``|``````/    _.::::.    |          |      |    ````|```|`++`\`|               //
//     |   /   |````|``|`````|            `                    |       ``|```++``++`|               //
//     |  /    |````|``|`````|                                 :         |``++````++|               //
//     | /     /````|``|`````|                              _.-:::.      |..`|``.`|.|               //
//     |/     /`````|``|`````|                                     `     |```|````|`|               //
//    /|      |`````|``|`````|                    :'                    .|```|````|.|               //
//   / |      |`````|``|`````|                                         /|-|``|````|`|               //
//  /  |      |`````|```\````|                                        / ||```|````|``\              //
// /   |      |`````|````|```|::                                    /_| ||```|````|``|              //
//            |`````|````|```|:|:.        `.._                    .\___/:|```|````|``|              //
//            |`````\````|```|:|::-          ``:::....           -:|:|:::|```|````|``|              //
//            |``````|```|```|:|::`|.                          .:::|:|:::|```|````|``|              //
//             \`````|```|```|:|::/|--.                     .`:|:::|:|:::/```|````|``|              //
//              |````|```|```\:|:|:|-----             _..-:|:|:|:::|:|::|````|````|`/               //
//              |````|```|````\|:|:|-------.____.....------|/::|:::|:|::|````|````|`|               //
//              |````|```|\````\:|/\___________    ________/\--\:::|:|::|````/````|`|               //
//              |````\```| \```|:/-------------\  /----------\``\::|:|::|```/`````|`|               //
//              |`````|``|  \``|/---------------\/------------\_________|```|`````|`|               //
//                                                                                                  //
//////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                  //
//                                        Created by Aeren                                          //
//                                                                                                  //
//////////////////////////////////////////////////////////////////////////////////////////////////////