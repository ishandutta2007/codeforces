/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author alireza_kaviani
 */

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define Mp                          make_pair
#define sep                         ' '
#define endl                        '\n'
#define debug(x)                    cerr << #x << " = " << x << endl
#define SZ(x)                       ll(x.size())
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define file_io                     freopen("in.txt" , "r" , stdin) ; freopen("out.txt" , "w" , stdout);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

inline ll input() {
    ll n;
    cin >> n;
    return n;
}

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

set_random;

const ll MAXN = 2e3 + 10;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll q , n , m;
pll mn[26] , mx[26];
string s[MAXN];

pair<string , vector<pair<pll , pll>>> solve(){
    vector<pair<pll , pll>> ans;
    for(ll i = 25 ; i >= 0 ; i--){
        if(mx[i].X == -INF){
            if(ans.size() != 0){
                ans.push_back(ans.back());
            }
            continue;
        }
        if(mx[i].X != mn[i].X && mx[i].Y != mn[i].Y)    return {"NO" , ans};
        for(ll j = mn[i].X ; j <= mx[i].X ; j++){
            for(ll k = mn[i].Y ; k <= mx[i].Y ; k++){
                if(s[j][k] == '.' || s[j][k] < i + 97){
                    return {"NO" , ans};
                }
            }
        }
        ans.push_back({mn[i] , mx[i]});
    }
    return {"YES" , ans};
}

int main() {
    fast_io;

    cin >> q;
    while(q--){
        fill(mn , mn + 26 , Mp(INF , INF));
        fill(mx , mx + 26 , Mp(-INF , -INF));
        cin >> n >> m;
        for(ll i = 1 ; i <= n ; i++){
            cin >> s[i];
            s[i] = "." + s[i];
            for(ll j = 1 ; j <= m ; j++){
                if(s[i][j] == '.') continue;
                mn[s[i][j] - 97].X = min(mn[s[i][j] - 97].X , i);
                mn[s[i][j] - 97].Y = min(mn[s[i][j] - 97].Y , j);
                mx[s[i][j] - 97].X = max(mx[s[i][j] - 97].X , i);
                mx[s[i][j] - 97].Y = max(mx[s[i][j] - 97].Y , j);
            }
        }
        pair<string , vector<pair<pll , pll>>> ans = solve();
        cout << ans.X << endl;
        if(ans.X == "NO") continue;
        cout << ans.Y.size() << endl;
        for(ll i = SZ(ans.Y) - 1 ; i >= 0 ; i--){
            cout << ans.Y[i].X.X << sep << ans.Y[i].X.Y << sep << ans.Y[i].Y.X << sep << ans.Y[i].Y.Y << endl;
        }
    }

    return 0;
}
/*
todo :
    1- set constants
    2- check TimeLimit and MemoryLimit
    3- check special test cases
    4- don't forget BS can help you that is good idea(use for loop for floats)
    5- don't forget printf and scanf can help you in your code speed
*/