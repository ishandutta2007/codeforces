/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-08-26 10:25:10
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e5 + 10;
const ll LOG = 22;
const ll X = 64;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

int n , m , cnt[10] , val[MAXN] , S[X] , N[X];
string s;

int main() {
	ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

	cin >> s >> m;
	n = SZ(s);
	for(int i = 0 ; i < n ; i++)	cnt[s[i] - 97]++;
	for(int i = 0 ; i < X ; i++){
		for(int j = 0 ; j < 6 ; j++){
			if(i & (1 << j))	N[i] += cnt[j];
		}
		//cout << i << sep << S[i] << endl;
	}
	for(int i = 0 ; i < n ; i++)	val[i] = X - 1;
	for(int i = 0 ; i < m ; i++){
		int pos , cur = 0;
		string t;
		cin >> pos >> t;
		for(int j = 0 ; j < SZ(t) ; j++){
			cur |= (1 << int(t[j] - 97));
		}
		val[pos - 1] = cur;
	}
	//for(int i = 0 ; i < n ; i++)	cout << i << sep << val[i] << endl;
	for(int i = 0 ; i < n ; i++){
		for(int j = 0 ; j < X ; j++){
			if((j & val[i]) == val[i])	S[j]++;
		}
	}
	for(int i = 0 ; i < X ; i++)	if(S[i] > N[i]){
		return cout << "Impossible" << endl , 0;
	}
	for(int i = 0 ; i < n ; i++){
		for(int j = 0 ; j < X ; j++){
			if((j & (val[i])) == val[i])	S[j]--;
		}
		//int ind = -1;
		for(int j = 0 ; j < 6 ; j++){
			if(val[i] & (1 << j)){
				for(int k = 0 ; k < X ; k++){
					if(k & (1 << j))	N[k]--;
				}
				int flag = 1;
				for(int k = 0 ; k < X ; k++){
					if(S[k] > N[k])	flag = 0;
				}
				if(flag){
					cout << char(j + 97);
					break;
				}
				for(int k = 0 ; k < X ; k++){
					if(k & (1 << j))	N[k]++;
				}
			}
		}
	}
	
    return 0;
}
/*

































*/