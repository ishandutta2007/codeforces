/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-06-18 19:15:01
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n;
vector<pll> vec , ans;

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    for(int i = 0 ; i < 3 ; i++){
        for(int j = 0 ; j < 3 ; j++){
            if(!((i == 0 && j == 0) || (i == 2 && j == 2))) vec.push_back({i , j});
        }
    }
    cin >> n;
    for(int i = 1 ; i <= n ; i++){
        ans.push_back({i - 1 , i});
        ans.push_back({i + 1 , i});
        ans.push_back({i , i - 1});
        ans.push_back({i , i + 1});
        ans.push_back({i , i});
    }
    ans.push_back({0 , 0});
    ans.push_back({n + 1 , n + 1});
    sort(all(ans));
    ans.resize(unique(all(ans)) - ans.begin());
    cout << SZ(ans) << endl;
    for(pll i : ans)    cout << i.X << sep << i.Y << endl;

    return 0;
}
/*

*/