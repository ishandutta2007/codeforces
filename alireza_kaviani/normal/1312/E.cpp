/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author alireza_kaviani
 */

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 500 + 10;
const ll MAXA = 2010;
const ll LOG = 22;
const ll INF = 1e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n , A[MAXN] , dp[MAXN][MAXN] , dp2[MAXN][MAXN];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    for(ll i = 0 ; i < MAXN ; i++){
        for(ll j = 0 ; j < MAXN ; j++)  dp[i][j] = INF , dp2[i][j] = -1;
    }

    cin >> n;
    for(ll i = 1 ; i <= n ; i++)    cin >> A[i];
    for(ll i = 1 ; i <= n ; i++){
        dp[i][i] = 1;
        dp2[i][i] = A[i];
    }

    for(ll l = n ; l > 0 ; l--){
        for(ll r = l + 1 ; r <= n ; r++){
            for(ll k = l ; k < r ; k++){
                dp[l][r] = min(dp[l][r] , dp[l][k] + dp[k + 1][r]);
                if(dp2[l][k] != -1 && dp2[l][k] == dp2[k + 1][r]){
                    dp[l][r] = 1;
                    dp2[l][r] = dp2[l][k] + 1;
                }
            }
        }
    }
    cout << dp[1][n] << endl;

    return 0;
}
/*

*/