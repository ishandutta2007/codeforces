/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;
typedef long long ll;
#define DBG(v) cerr << #v << " = " << (v) << endl;

class ASilentClassroom {
public:
	void solve(std::istream& cin, std::ostream& cout) {
        int n;
        cin >> n;

        map<char, int> mp;
        for (int i = 0; i < n; ++i) {
            string s;
            cin >> s;
            ++mp[s[0]];
        }

        int ans = 0;

        for (auto e : mp) {
            int x = e.second;
            int y = x / 2;
            int z = x - y;
            ans += y * (y - 1) / 2;
            ans += z * (z - 1) / 2;
        }
        cout << ans;
	}
};


int main() {
	ASilentClassroom solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}