#include <bits/stdc++.h>
using namespace std;
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
 
#define ms(s, n) memset(s, n, sizeof(s))
#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define FORd(i, a, b) for (int i = (a) - 1; i >= (b); --i)
#define FORall(it, a) for (__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
#define sz(a) int((a).size())
#define present(t, x) (t.find(x) != t.end())
#define all(a) (a).begin(), (a).end()
#define uni(a) (a).erase(unique(all(a)), (a).end())
#define pb push_back
#define pf push_front
#define mp make_pair
#define fi first
#define se second
#define prec(n) fixed<<setprecision(n)
#define bit(n, i) (((n) >> (i)) & 1)
#define bitcount(n) __builtin_popcountll(n)
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pi;
typedef vector<int> vi;
typedef vector<pi> vii;
const int MOD = (int) 1e9 + 7;
const int FFTMOD = 119 << 23 | 1;
const int INF = (int) 1e9 + 23111992;
const ll LINF = (ll) 1e18 + 23111992;
const ld PI = acos((ld) -1);
const ld EPS = 1e-9;
inline ll gcd(ll a, ll b) {ll r; while (b) {r = a % b; a = b; b = r;} return a;}
inline ll lcm(ll a, ll b) {return a / gcd(a, b) * b;}
inline ll fpow(ll n, ll k, int p = MOD) {ll r = 1; for (; k; k >>= 1) {if (k & 1) r = r * n % p; n = n * n % p;} return r;}
template<class T> inline int chkmin(T& a, const T& val) {return val < a ? a = val, 1 : 0;}
template<class T> inline int chkmax(T& a, const T& val) {return a < val ? a = val, 1 : 0;}
inline ull isqrt(ull k) {ull r = sqrt(k) + 1; while (r * r > k) r--; return r;}
inline ll icbrt(ll k) {ll r = cbrt(k) + 1; while (r * r * r > k) r--; return r;}
inline void addmod(int& a, int val, int p = MOD) {if ((a = (a + val)) >= p) a -= p;}
inline void submod(int& a, int val, int p = MOD) {if ((a = (a - val)) < 0) a += p;}
inline int mult(int a, int b, int p = MOD) {return (ll) a * b % p;}
inline int inv(int a, int p = MOD) {return fpow(a, p - 2, p);}
inline int sign(ld x) {return x < -EPS ? -1 : x > +EPS;}
inline int sign(ld x, ld y) {return sign(x - y);}
mt19937 mt(chrono::high_resolution_clock::now().time_since_epoch().count());
inline int mrand() {return abs((int) mt());}
inline int mrand(int k) {return abs((int) mt()) % k;}
#define db(x) cerr << "[" << #x << ": " << (x) << "] ";
#define endln cerr << "\n";

void chemthan() {
    if (0) {
        auto dgit = [&] (int x) {
            int res = 0;
            while (x) {
                res += x % 10;
                x /= 10;
            }
            return res;
        };
        vector<vi> res(155, vi(10, INF));
        FOR(k, 1, 10) {
            int x = 1;
            while (x * (k + 1) * 9 < 150) x++;
            FOR(i, 0, max((int) 1e6, (int) pow(10, x)) + 333) {
                int sum = 0;
                FOR(j, 0, k + 1) {
                    sum += dgit(i + j);
                }
                if (sum < sz(res)) {
                    chkmin(res[sum][k], i);
                }
            }
        }
        FOR(i, 1, 150 + 1) FOR(k, 1, 10) {
            cout << res[i][k] << ", ";
        }
        cout << "\n";
    }
    else {
        vector<vi> res(155, vi(10, INF));
        vi ar({0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 4, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 9, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 5, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 19, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 6, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 29, 1023111992, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 7, 4, 9, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 39, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 8, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 49, 5, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 18, 1023111992, 19, 9, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 59, 1023111992, 8, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 28, 6, 1023111992, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 69, 1023111992, 4, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 38, 1023111992, 29, 8, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 79, 7, 18, 19, 9, 1023111992, 1023111992, 1023111992, 1023111992, 48, 1023111992, 7, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 89, 1023111992, 5, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 58, 17, 39, 7, 2, 1023111992, 1023111992, 1023111992, 1023111992, 189, 1023111992, 28, 18, 1023111992, 1, 0, 1023111992, 1023111992, 68, 1023111992, 17, 29, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 289, 27, 6, 4, 7, 9, 1023111992, 1023111992, 1023111992, 78, 1023111992, 49, 6, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 389, 1023111992, 38, 17, 1023111992, 8, 1023111992, 1023111992, 1023111992, 88, 37, 27, 28, 3, 1023111992, 1023111992, 1023111992, 1023111992, 489, 1023111992, 16, 39, 1023111992, 7, 1023111992, 1023111992, 1023111992, 98, 1023111992, 59, 5, 1023111992, 2, 1023111992, 1023111992, 1023111992, 589, 47, 48, 16, 5, 6, 1, 0, 1023111992, 198, 1023111992, 37, 27, 1023111992, 19, 9, 1023111992, 1023111992, 689, 1023111992, 26, 38, 1023111992, 5, 8, 1023111992, 1023111992, 298, 57, 69, 49, 4, 18, 7, 1023111992, 1023111992, 789, 1023111992, 58, 15, 1023111992, 4, 6, 1023111992, 1023111992, 398, 1023111992, 47, 26, 1023111992, 17, 5, 1023111992, 1023111992, 889, 67, 36, 37, 15, 3, 4, 1023111992, 1023111992, 498, 1023111992, 79, 48, 1023111992, 16, 3, 1023111992, 1023111992, 989, 1023111992, 68, 59, 1023111992, 29, 2, 1023111992, 1023111992, 598, 77, 57, 25, 14, 15, 19, 1, 0, 1989, 1023111992, 46, 36, 1023111992, 28, 18, 1023111992, 1, 698, 1023111992, 89, 47, 1023111992, 14, 17, 1023111992, 2, 2989, 87, 78, 58, 25, 27, 16, 1023111992, 3, 798, 1023111992, 67, 69, 1023111992, 13, 15, 1023111992, 4, 3989, 1023111992, 56, 35, 1023111992, 26, 14, 1023111992, 5, 898, 97, 189, 46, 24, 39, 13, 1023111992, 6, 4989, 1023111992, 88, 57, 1023111992, 25, 12, 1023111992, 7, 998, 1023111992, 77, 68, 1023111992, 38, 29, 1023111992, 8, 5989, 197, 66, 79, 35, 24, 28, 11, 9, 1998, 1023111992, 289, 45, 1023111992, 37, 27, 1023111992, 10, 6989, 1023111992, 188, 56, 1023111992, 23, 26, 1023111992, 11, 2998, 297, 87, 67, 34, 36, 25, 1023111992, 12, 7989, 1023111992, 76, 78, 1023111992, 49, 24, 1023111992, 13, 3998, 1023111992, 389, 89, 1023111992, 35, 23, 1023111992, 14, 8989, 397, 288, 55, 45, 48, 22, 1023111992, 15, 4998, 1023111992, 187, 66, 1023111992, 34, 39, 1023111992, 16, 9989, 1023111992, 86, 77, 1023111992, 47, 38, 1023111992, 17, 5998, 497, 489, 88, 44, 33, 37, 21, 18, 19989, 1023111992, 388, 189, 1023111992, 46, 36, 1023111992, 19, 6998, 1023111992, 287, 65, 1023111992, 59, 35, 1023111992, 20, 29989, 597, 96, 76, 55, 45, 34, 1023111992, 21, 7998, 1023111992, 589, 87, 1023111992, 58, 33, 1023111992, 22, 39989, 1023111992, 488, 188, 1023111992, 44, 32, 1023111992, 23, 8998, 697, 387, 289, 54, 57, 49, 1023111992, 24, 49989, 1023111992, 196, 75, 1023111992, 43, 48, 1023111992, 25, 9998, 1023111992, 689, 86, 1023111992, 56, 47, 1023111992, 26, 59989, 797, 588, 187, 65, 69, 46, 31, 27, 19998, 1023111992, 487, 288, 1023111992, 55, 45, 1023111992, 28, 69989, 1023111992, 296, 389, 1023111992, 68, 44, 1023111992, 29, 29998, 897, 789, 85, 64, 54, 43, 1023111992, 30, 79989, 1023111992, 688, 186, 1023111992, 67, 42, 1023111992, 31, 39998, 1023111992, 587, 287, 1023111992, 53, 59, 1023111992, 32, 89989, 997, 396, 388, 75, 66, 58, 1023111992, 33, 49998, 1023111992, 889, 489, 1023111992, 79, 57, 1023111992, 34, 99989, 1023111992, 788, 95, 1023111992, 65, 56, 1023111992, 35, 59998, 1997, 687, 286, 74, 78, 55, 41, 36, 199989, 1023111992, 496, 387, 1023111992, 64, 54, 1023111992, 37, 69998, 1023111992, 989, 488, 1023111992, 77, 53, 1023111992, 38, 299989, 2997, 888, 589, 85, 63, 52, 1023111992, 39, 79998, 1023111992, 787, 195, 1023111992, 76, 69, 1023111992, 40, 399989, 1023111992, 596, 386, 1023111992, 89, 68, 1023111992, 41, 89998, 3997, 1989, 487, 84, 75, 67, 1023111992, 42, 499989, 1023111992, 988, 588, 1023111992, 88, 66, 1023111992, 43, 99998, 1023111992, 887, 689, 1023111992, 74, 65, 1023111992, 44, 599989, 4997, 696, 295, 185, 87, 64, 51, 45, 199998, 1023111992, 2989, 486, 1023111992, 73, 63, 1023111992, 46, 699989, 1023111992, 1988, 587, 1023111992, 86, 62, 1023111992, 47, 299998, 5997, 987, 688, 94, 189, 79, 1023111992, 48, 799989, 1023111992, 796, 789, 1023111992, 85, 78, 1023111992, 49, 399998, 1023111992, 3989, 395, 1023111992, 188, 77, 1023111992, 50, 899989, 6997, 2988, 586, 285, 84, 76, 1023111992, 51, 499998, 1023111992, 1987, 687, 1023111992, 187, 75, 1023111992, 52, 999989, 1023111992, 896, 788, 1023111992, 83, 74, 1023111992, 53, 599998, 7997, 4989, 889, 194, 186, 73, 61, 54, 1999989, 1023111992, 3988, 495, 1023111992, 289, 72, 1023111992, 55, 699998, 1023111992, 2987, 686, 1023111992, 185, 89, 1023111992, 56, 2999989, 8997, 996, 787, 385, 288, 88, 1023111992, 57, 799998, 1023111992, 5989, 888, 1023111992, 184, 87, 1023111992, 58, 3999989, 1023111992, 4988, 989, 1023111992, 287, 86, 1023111992, 59, 899998, 9997, 3987, 595, 294, 93, 85, 1023111992, 60, 4999989, 1023111992, 1996, 786, 1023111992, 286, 84, 1023111992, 61, 999998, 1023111992, 6989, 887, 1023111992, 389, 83, 1023111992, 62, 5999989, 19997, 5988, 988, 485, 285, 82, 71, 63, 1999998, 1023111992, 4987, 1989, 1023111992, 388, 189, 1023111992, 64, 6999989, 1023111992, 2996, 695, 1023111992, 284, 188, 1023111992, 65, 2999998, 29997, 7989, 886, 394, 387, 187, 1023111992, 66, 7999989, 1023111992, 6988, 987, 1023111992, 193, 186, 1023111992, 67, 3999998, 1023111992, 5987, 1988, 1023111992, 386, 185, 1023111992, 68, 8999989, 39997, 3996, 2989, 585, 489, 184, 1023111992, 69, 4999998, 1023111992, 8989, 795, 1023111992, 385, 183, 1023111992, 70, 9999989, 1023111992, 7988, 986, 1023111992, 488, 92, 1023111992, 71, 5999998, 49997, 6987, 1987, 494, 384, 289, 81, 72, 19999989, 1023111992, 4996, 2988, 1023111992, 487, 288, 1023111992, 73, 6999998, 1023111992, 9989, 3989, 1023111992, 293, 287, 1023111992, 74, 29999989, 59997, 8988, 895, 685, 486, 286, 1023111992, 75, 7999998, 1023111992, 7987, 1986, 1023111992, 589, 285, 1023111992, 76, 39999989, 1023111992, 5996, 2987, 1023111992, 485, 284, 1023111992, 77, 8999998, 69997, 19989, 3988, 594, 588, 283, 1023111992, 78, 49999989, 1023111992, 9988, 4989, 1023111992, 484, 192, 1023111992, 79, 9999998, 1023111992, 8987, 995, 1023111992, 587, 389, 1023111992, 80, 59999989, 79997, 6996, 2986, 785, 393, 388, 91, 81, 19999998, 1023111992, 29989, 3987, 1023111992, 586, 387, 1023111992, 82, 69999989, 1023111992, 19988, 4988, 1023111992, 689, 386, 1023111992, 83, 29999998, 89997, 9987, 5989, 694, 585, 385, 1023111992, 84, 79999989, 1023111992, 7996, 1995, 1023111992, 688, 384, 1023111992, 85, 39999998, 1023111992, 39989, 3986, 1023111992, 584, 383, 1023111992, 86, 89999989, 99997, 29988, 4987, 885, 687, 292, 1023111992, 87, 49999998, 1023111992, 19987, 5988, 1023111992, 493, 489, 1023111992, 88, 99999989, 1023111992, 8996, 6989, 1023111992, 686, 488, 1023111992, 89, 59999998, 199997, 49989, 2995, 794, 789, 487, 191, 90, 199999989, 1023111992, 39988, 4986, 1023111992, 685, 486, 1023111992, 181, 69999998, 1023111992, 29987, 5987, 1023111992, 788, 485, 1023111992, 182, 299999989, 299997, 9996, 6988, 985, 684, 484, 1023111992, 183, 79999998, 1023111992, 59989, 7989, 1023111992, 787, 483, 1023111992, 184, 399999989, 1023111992, 49988, 3995, 1023111992, 593, 392, 1023111992, 185, 89999998, 399997, 39987, 5986, 894, 786, 589, 1023111992, 186, 499999989, 1023111992, 19996, 6987, 1023111992, 889, 588, 1023111992, 187, 99999998, 1023111992, 69989, 7988, 1023111992, 785, 587, 1023111992, 188, 599999989, 499997, 59988, 8989, 1023111992, 888, 586, 291, 189, 199999998, 1023111992, 49987, 4995, 1023111992, 784, 585, 1023111992, 190, 699999989, 1023111992, 29996, 6986, 1023111992, 887, 584, 1023111992, 281, 299999998, 599997, 79989, 7987, 994, 693, 583, 1023111992, 282, 799999989, 1023111992, 69988, 8988, 1023111992, 886, 492, 1023111992, 283, 399999998, 1023111992, 59987, 9989, 1023111992, 989, 689, 1023111992, 284, 899999989, 699997, 39996, 5995, 1023111992, 885, 688, 1023111992, 285});
        vi ax({0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 4, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 9, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 5, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 19, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 6, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 29, 1023111992, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 7, 4, 9, 1, 0, 1023111992, 1023111992, 1023111992, 1023111992, 39, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 8, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 49, 5, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 18, 1023111992, 19, 9, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 59, 1023111992, 8, 2, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 28, 6, 1023111992, 1023111992, 1, 0, 1023111992, 1023111992, 1023111992, 69, 1023111992, 4, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 38, 1023111992, 29, 8, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 79, 7, 18, 19, 9, 1023111992, 1023111992, 1023111992, 1023111992, 48, 1023111992, 7, 3, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 89, 1023111992, 5, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 58, 17, 39, 7, 2, 1023111992, 1023111992, 1023111992, 1023111992, 189, 1023111992, 28, 18, 1023111992, 1, 0, 1023111992, 1023111992, 68, 1023111992, 17, 29, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 289, 27, 6, 4, 7, 9, 1023111992, 1023111992, 1023111992, 78, 1023111992, 49, 6, 1023111992, 1023111992, 1023111992, 1023111992, 1023111992, 389, 1023111992, 38, 17, 1023111992, 8, 1023111992, 1023111992, 1023111992, 88, 37, 27, 28, 3, 1023111992, 1023111992, 1023111992, 1023111992, 489, 1023111992, 16, 39, 1023111992, 7, 1023111992, 1023111992, 1023111992, 98, 1023111992, 59, 5, 1023111992, 2, 1023111992, 1023111992, 1023111992, 589, 47, 48, 16, 5, 6, 1, 0, 1023111992, 198, 1023111992, 37, 27, 1023111992, 19, 9, 1023111992, 1023111992, 689, 1023111992, 26, 38, 1023111992, 5, 8, 1023111992, 1023111992, 298, 57, 69, 49, 4, 18, 7, 1023111992, 1023111992, 789, 1023111992, 58, 15, 1023111992, 4, 6, 1023111992, 1023111992, 398, 1023111992, 47, 26, 1023111992, 17, 5, 1023111992, 1023111992, 889, 67, 36, 37, 15, 3, 4, 1023111992, 1023111992, 498, 1023111992, 79, 48, 1023111992, 16, 3, 1023111992, 1023111992, 989, 1023111992, 68, 59, 1023111992, 29, 2, 1023111992, 1023111992, 598, 77, 57, 25, 14, 15, 19, 1, 0, 1989, 1023111992, 46, 36, 1023111992, 28, 18, 1023111992, 1, 698, 1023111992, 89, 47, 1023111992, 14, 17, 1023111992, 2, 2989, 87, 78, 58, 25, 27, 16, 1023111992, 3, 798, 1023111992, 67, 69, 1023111992, 13, 15, 1023111992, 4, 3989, 1023111992, 56, 35, 1023111992, 26, 14, 1023111992, 5, 898, 97, 189, 46, 24, 39, 13, 1023111992, 6, 4989, 1023111992, 88, 57, 1023111992, 25, 12, 1023111992, 7, 998, 1023111992, 77, 68, 1023111992, 38, 29, 1023111992, 8, 5989, 197, 66, 79, 35, 24, 28, 11, 9, 1998, 1023111992, 289, 45, 1023111992, 37, 27, 1023111992, 10, 6989, 1023111992, 188, 56, 1023111992, 23, 26, 1023111992, 11, 2998, 297, 87, 67, 34, 36, 25, 1023111992, 12, 7989, 1023111992, 76, 78, 1023111992, 49, 24, 1023111992, 13, 3998, 1023111992, 389, 89, 1023111992, 35, 23, 1023111992, 14, 8989, 397, 288, 55, 45, 48, 22, 1023111992, 15, 4998, 1023111992, 187, 66, 1023111992, 34, 39, 1023111992, 16, 9989, 1023111992, 86, 77, 1023111992, 47, 38, 1023111992, 17, 5998, 497, 489, 88, 44, 33, 37, 21, 18, 19989, 1023111992, 388, 189, 1023111992, 46, 36, 1023111992, 19, 6998, 1023111992, 287, 65, 1023111992, 59, 35, 1023111992, 20, 29989, 597, 96, 76, 55, 45, 34, 1023111992, 21, 7998, 1023111992, 589, 87, 1023111992, 58, 33, 1023111992, 22, 39989, 1023111992, 488, 188, 1023111992, 44, 32, 1023111992, 23, 8998, 697, 387, 289, 54, 57, 49, 1023111992, 24, 49989, 1023111992, 196, 75, 1023111992, 43, 48, 1023111992, 25, 9998, 1023111992, 689, 86, 1023111992, 56, 47, 1023111992, 26, 59989, 797, 588, 187, 65, 69, 46, 31, 27, 19998, 1023111992, 487, 288, 1023111992, 55, 45, 1023111992, 28, 69989, 1023111992, 296, 389, 1023111992, 68, 44, 1023111992, 29, 29998, 897, 789, 85, 64, 54, 43, 1023111992, 30, 79989, 1023111992, 688, 186, 1023111992, 67, 42, 1023111992, 31, 39998, 1023111992, 587, 287, 1023111992, 53, 59, 1023111992, 32, 89989, 997, 396, 388, 75, 66, 58, 1023111992, 33, 49998, 1023111992, 889, 489, 1023111992, 79, 57, 1023111992, 34, 99989, 1023111992, 788, 95, 1023111992, 65, 56, 1023111992, 35, 59998, 1997, 687, 286, 74, 78, 55, 41, 36, 199989, 1023111992, 496, 387, 1023111992, 64, 54, 1023111992, 37, 69998, 1023111992, 989, 488, 1023111992, 77, 53, 1023111992, 38, 299989, 2997, 888, 589, 85, 63, 52, 1023111992, 39, 79998, 1023111992, 787, 195, 1023111992, 76, 69, 1023111992, 40, 399989, 1023111992, 596, 386, 1023111992, 89, 68, 1023111992, 41, 89998, 3997, 1989, 487, 84, 75, 67, 1023111992, 42, 499989, 1023111992, 988, 588, 1023111992, 88, 66, 1023111992, 43, 99998, 1023111992, 887, 689, 1023111992, 74, 65, 1023111992, 44, 599989, 4997, 696, 295, 185, 87, 64, 51, 45, 199998, 1023111992, 2989, 486, 1023111992, 73, 63, 1023111992, 46, 699989, 1023111992, 1988, 587, 1023111992, 86, 62, 1023111992, 47, 299998, 5997, 987, 688, 94, 189, 79, 1023111992, 48, 799989, 1023111992, 796, 789, 1023111992, 85, 78, 1023111992, 49, 399998, 1023111992, 3989, 395, 1023111992, 188, 77, 1023111992, 50, 899989, 6997, 2988, 586, 285, 84, 76, 1023111992, 51, 499998, 1023111992, 1987, 687, 1023111992, 187, 75, 1023111992, 52, 999989, 1023111992, 896, 788, 1023111992, 83, 74, 1023111992, 53, 599998, 7997, 4989, 889, 194, 186, 73, 61, 54, 1999989, 1023111992, 3988, 495, 1023111992, 289, 72, 1023111992, 55, 699998, 1023111992, 2987, 686, 1023111992, 185, 89, 1023111992, 56, 2999989, 8997, 996, 787, 385, 288, 88, 1023111992, 57, 799998, 1023111992, 5989, 888, 1023111992, 184, 87, 1023111992, 58, 3999989, 1023111992, 4988, 989, 1023111992, 287, 86, 1023111992, 59, 899998, 9997, 3987, 595, 294, 93, 85, 1023111992, 60, 4999989, 1023111992, 1996, 786, 1023111992, 286, 84, 1023111992, 61, 999998, 1023111992, 6989, 887, 1023111992, 389, 83, 1023111992, 62, 5999989, 19997, 5988, 988, 485, 285, 82, 71, 63, 1999998, 1023111992, 4987, 1989, 1023111992, 388, 189, 1023111992, 64, 6999989, 1023111992, 2996, 695, 1023111992, 284, 188, 1023111992, 65, 2999998, 29997, 7989, 886, 394, 387, 187, 1023111992, 66, 7999989, 1023111992, 6988, 987, 1023111992, 193, 186, 1023111992, 67, 3999998, 1023111992, 5987, 1988, 1023111992, 386, 185, 1023111992, 68, 8999989, 39997, 3996, 2989, 585, 489, 184, 1023111992, 69, 4999998, 1023111992, 8989, 795, 1023111992, 385, 183, 1023111992, 70, 9999989, 1023111992, 7988, 986, 1023111992, 488, 92, 1023111992, 71, 5999998, 49997, 6987, 1987, 494, 384, 289, 81, 72, 19999989, 1023111992, 4996, 2988, 1023111992, 487, 288, 1023111992, 73, 6999998, 1023111992, 9989, 3989, 1023111992, 293, 287, 1023111992, 74, 29999989, 59997, 8988, 895, 685, 486, 286, 1023111992, 75, 7999998, 1023111992, 7987, 1986, 1023111992, 589, 285, 1023111992, 76, 39999989, 1023111992, 5996, 2987, 1023111992, 485, 284, 1023111992, 77, 8999998, 69997, 19989, 3988, 594, 588, 283, 1023111992, 78, 49999989, 1023111992, 9988, 4989, 1023111992, 484, 192, 1023111992, 79, 9999998, 1023111992, 8987, 995, 1023111992, 587, 389, 1023111992, 80, 59999989, 79997, 6996, 2986, 785, 393, 388, 91, 81, 19999998, 1023111992, 29989, 3987, 1023111992, 586, 387, 1023111992, 82, 69999989, 1023111992, 19988, 4988, 1023111992, 689, 386, 1023111992, 83, 29999998, 89997, 9987, 5989, 694, 585, 385, 1023111992, 84, 79999989, 1023111992, 7996, 1995, 1023111992, 688, 384, 1023111992, 85, 39999998, 1023111992, 39989, 3986, 1023111992, 584, 383, 1023111992, 86, 89999989, 99997, 29988, 4987, 885, 687, 292, 1023111992, 87, 49999998, 1023111992, 19987, 5988, 1023111992, 493, 489, 1023111992, 88, 99999989, 1023111992, 8996, 6989, 1023111992, 686, 488, 1023111992, 89, 59999998, 199997, 49989, 2995, 794, 789, 487, 191, 90, 199999989, 1023111992, 39988, 4986, 1023111992, 685, 486, 1023111992, 181, 69999998, 1023111992, 29987, 5987, 1023111992, 788, 485, 1023111992, 182, 299999989, 299997, 9996, 6988, 985, 684, 484, 1023111992, 183, 79999998, 1023111992, 59989, 7989, 1023111992, 787, 483, 1023111992, 184, 399999989, 1023111992, 49988, 3995, 1023111992, 593, 392, 1023111992, 185, 89999998, 399997, 39987, 5986, 894, 786, 589, 1023111992, 186, 499999989, 1023111992, 19996, 6987, 1023111992, 889, 588, 1023111992, 187, 99999998, 1023111992, 69989, 7988, 1023111992, 785, 587, 1023111992, 188, 599999989, 499997, 59988, 8989, 1985, 888, 586, 291, 189, 199999998, 1023111992, 49987, 4995, 1023111992, 784, 585, 1023111992, 190, 699999989, 1023111992, 29996, 6986, 1023111992, 887, 584, 1023111992, 281, 299999998, 599997, 79989, 7987, 994, 693, 583, 1023111992, 282, 799999989, 1023111992, 69988, 8988, 1023111992, 886, 492, 1023111992, 283, 399999998, 1023111992, 59987, 9989, 1023111992, 989, 689, 1023111992, 284, 899999989, 699997, 39996, 5995, 2985, 885, 688, 1023111992, 285});
        int ptr = 0;
        FOR(i, 1, 150 + 1) FOR(k, 1, 10) {
            res[i][k] = ax[ptr++];
        }
        int test; cin >> test;
        while (test--) {
            int n, k; cin >> n >> k;
            if (!k) {
                string res;
                while (n) {
                    res += char('0' + min(n, 9));
                    n -= min(n, 9);
                }
                reverse(all(res));
                cout << res << "\n";
            }
            else {
                if (res[n][k] == INF) {
                    cout << -1 << "\n";
                }
                else {
                    cout << res[n][k] << "\n";
                }
            }
        }
    }
}

int main(int argc, char* argv[]) {
    ios_base::sync_with_stdio(0), cin.tie(0);
    if (argc > 1) {
        assert(freopen(argv[1], "r", stdin));
    }
    if (argc > 2) {
        assert(freopen(argv[2], "wb", stdout));
    }
    chemthan();
    cerr << "\nTime elapsed: " << 1000 * clock() / CLOCKS_PER_SEC << "ms\n";
    return 0;
}