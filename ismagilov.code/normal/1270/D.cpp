/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Azat Ismagilov
 */

#include <fstream>

#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <numeric>
#include <set>
#include <map>

#define int long long
#define ld long double
#define fs first
#define sc second
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define mp make_pair
#define len(v) ((int)v.size())
#define vc vector
#define pr pair
#define all(v) v.begin(), v.end()
//#pragma GCC optimize("Ofast")
//#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,tune=native")
//#pragma GCC optimize("unroll-loops")

using namespace std;

template<typename T, typename U>
inline ostream &operator<<(ostream &_out, const pair<T, U> &_p) {
    _out << _p.first << ' ' << _p.second;
    return _out;
}

template<typename T, typename U>
inline istream &operator>>(istream &_in, pair<T, U> &_p) {
    _in >> _p.first >> _p.second;
    return _in;
}

template<typename T>
inline ostream &operator<<(ostream &_out, const vector<T> &_v) {
    if (_v.empty()) { return _out; }
    _out << _v.front();
    for (auto _it = ++_v.begin(); _it != _v.end(); ++_it) { _out << ' ' << *_it; }
    return _out;
}

template<typename T>
inline istream &operator>>(istream &_in, vector<T> &_v) {
    for (auto &_i : _v) { _in >> _i; }
    return _in;
}

const int MAXN = 3e5;
const int INF = 1e9;
const int MOD = 1e9 + 7;

int n, k, m;
vc<int> a;

pr<int, int> zap(vc<int> keks) {
    cout << "? ";
    for (auto v : keks) {
        cout << v + 1 << ' ';
    }
    cout << endl;
    cout.flush();
#ifdef ON_PC
    vc<pr<int, int>> b;
    for (auto v : keks) {
        b.pb({a[v], v});
    }
    sort(all(b));
    return b[m - 1];
#else

    pr<int, int> ans;
    cin >> ans.sc >> ans.fs;
    return {ans.fs, ans.sc - 1};
#endif
}

int guess(int n) {
    vc<int> teks;
    for (int i = 0; i < k; i++) {
        teks.pb(i);
    }
    pr<int, int> a = zap(teks);
    teks.clear();
    for (int i = 0; i < k + 1; i++) {
        if (i != a.sc) {
            teks.pb(i);
        }
    }
    pr<int, int> b = zap(teks);
    if (a.fs > b.fs) {
        swap(a, b);
    }
    int counter = 1;
    for (int i = 0; i < k + 1; i++) {
        if (i == a.sc || i == b.sc) {
            continue;
        }
        teks = {};
        for (int j = 0; j < k + 1; j++) {
            if (i != j) {
                teks.pb(j);
            }
        }
        pr<int, int> x = zap(teks);
        if (x == b) {
            counter++;
        }
    }
    return counter;
}

class DStranniiPribor {
public:
    void solve(std::istream &in, std::ostream &out) {
#ifndef ON_PC
        in >> n >> k;
        out << "! " << guess(n);
#else
        in >> n >> k >> m;
        a.resize(n);
        in >> a;
        out << "! " << guess(n);
#endif
    }
};


signed main() {
    DStranniiPribor solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}