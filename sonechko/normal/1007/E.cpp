#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define pb push_back

const int N = 200 + 11;

ll a[N],b[N],c[N],sa[N],sb[N],sc[N];
ll d[N][N][2],g[N][N][2];

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    ll n,t,k;
    cin>>n>>t>>k;
    for (int i=1; i<=n; i++)
    {
        cin>>a[i]>>b[i]>>c[i];
    }
    n++;
    a[n]=2e18;
    b[n]=0;
    c[n]=2e18;
    for (int i=1; i<=n; i++)
    {
        sa[i]=sa[i-1]+a[i];
        sb[i]=sb[i-1]+b[i];
        sc[i]=sc[i-1]+c[i];
    }
    for (int p=1; p<=n; p++)
    for (int s=0; s<=t; s++)
    for (int z=0; z<=1; z++)
    {
        d[p][s][z]=2e18;
        g[p][s][z]=2e18;
        if (d[p-1][s][z]<2e18&&a[p]*1ll*z+b[p]*1ll*s<=c[p])
        {
            d[p][s][z]=d[p-1][s][z];
            ll d=(z*1ll*sa[p-1]+s*1ll*sb[p-1]+k-1)/k;
            if (d*k<=z*1ll*sa[p]+s*1ll*sb[p])
                g[p][s][z]=d;
        }
        for (int r=0; r<s; r++)
            if (g[p][r][z]<2e18)
        {
            ll m=z*1ll*sa[p]+r*1ll*sb[p]-k*1ll*g[p][r][z];
            ll x=(max(m+(s-r)*b[p]-c[p],0ll)+k-1)/k;
            m-=x*k;
            if (m>=0&&d[p-1][s-r][0]<2e18)
            {
                d[p][s][z]=min(d[p][s][z],g[p][r][z]+x+d[p-1][s-r][0]);
                ll d=((s-r)*sb[p-1]+k-1)/k;
                if (d*k<=m+(s-r)*1ll*sb[p])
                    g[p][s][z]=min(g[p][s][z],g[p][r][z]+x+d);
            }
        }
        //cout<<p<<" "<<s<<" "<<z<<" - "<<d[p][s][z]<<" "<<g[p][s][z]<<endl;
    }
    cout<<d[n][t][1];
}
/**
4 10 5
1 1 1
1 0 1
0 5 8
2 7 100



1 0 0 - 0 0
1 0 1 - 0 0
1 1 0 - 0 0
1 1 1 - 2000000000000000000 2000000000000000000
1 2 0 - 2000000000000000000 2000000000000000000
1 2 1 - 2000000000000000000 2000000000000000000
1 3 0 - 2000000000000000000 2000000000000000000
1 3 1 - 2000000000000000000 2000000000000000000
1 4 0 - 2000000000000000000 2000000000000000000
1 4 1 - 2000000000000000000 1
1 5 0 - 2000000000000000000 1
1 5 1 - 1 1
1 6 0 - 1 1
1 6 1 - 2000000000000000000 2000000000000000000
1 7 0 - 2000000000000000000 2000000000000000000
1 7 1 - 2000000000000000000 2000000000000000000
1 8 0 - 2000000000000000000 2000000000000000000
1 8 1 - 2000000000000000000 2000000000000000000
1 9 0 - 2000000000000000000 2000000000000000000
1 9 1 - 2000000000000000000 2
1 10 0 - 2000000000000000000 2
1 10 1 - 2 2
2 0 0 - 0 0
2 0 1 - 0 2000000000000000000
2 1 0 - 0 2000000000000000000
2 1 1 - 2000000000000000000 2000000000000000000
2 2 0 - 2000000000000000000 2000000000000000000
2 2 1 - 2000000000000000000 2000000000000000000
2 3 0 - 2000000000000000000 2000000000000000000
2 3 1 - 2000000000000000000 1
2 4 0 - 2000000000000000000 2000000000000000000
2 4 1 - 1 1
2 5 0 - 2000000000000000000 1
2 5 1 - 1 2000000000000000000
2 6 0 - 1 2000000000000000000
2 6 1 - 2000000000000000000 2000000000000000000
2 7 0 - 2000000000000000000 2000000000000000000
2 7 1 - 2000000000000000000 2000000000000000000
2 8 0 - 2000000000000000000 2000000000000000000
2 8 1 - 2000000000000000000 2
2 9 0 - 2000000000000000000 2000000000000000000
2 9 1 - 2 2
2 10 0 - 2000000000000000000 2
2 10 1 - 2 2000000000000000000
3 0 0 - 0 0
3 0 1 - 0 2000000000000000000
3 1 0 - 0 1
3 1 1 - 2000000000000000000 1
3 2 0 - 1 2
3 2 1 - 1 2
3 3 0 - 2 3
3 3 1 - 2000000000000000000 3
3 4 0 - 3 4
3 4 1 - 4 4
3 5 0 - 2000000000000000000 5
3 5 1 - 5 5
3 6 0 - 6 6
3 6 1 - 6 6
3 7 0 - 7 7
3 7 1 - 7 8
3 8 0 - 8 8
3 8 1 - 2000000000000000000 9
3 9 0 - 9 10
3 9 1 - 10 10
3 10 0 - 2000000000000000000 11
3 10 1 - 11 11
4 0 0 - 0 0
4 0 1 - 0 2000000000000000000
4 1 0 - 0 2
4 1 1 - 2000000000000000000 2
4 2 0 - 1 3
4 2 1 - 1 3
4 3 0 - 2 4
4 3 1 - 3 4
4 4 0 - 3 5
4 4 1 - 4 6
4 5 0 - 5 6
4 5 1 - 5 7
4 6 0 - 6 8
4 6 1 - 6 8
4 7 0 - 7 9
4 7 1 - 7 9
4 8 0 - 8 10
4 8 1 - 9 10
4 9 0 - 9 11
4 9 1 - 10 12
4 10 0 - 11 12
4 10 1 - 11 13
5 0 0 - 0 0
5 0 1 - 0 1
5 1 0 - 0 2000000000000000000
5 1 1 - 1 4
5 2 0 - 1 2000000000000000000
5 2 1 - 1 6
5 3 0 - 2 2000000000000000000
5 3 1 - 3 9
5 4 0 - 3 2000000000000000000
5 4 1 - 4 12
5 5 0 - 5 13
5 5 1 - 5 14
5 6 0 - 6 2000000000000000000
5 6 1 - 6 17
5 7 0 - 7 2000000000000000000
5 7 1 - 7 19
5 8 0 - 8 2000000000000000000
5 8 1 - 9 22
5 9 0 - 9 2000000000000000000
5 9 1 - 10 25
5 10 0 - 11 26
5 10 1 - 11 27
**/