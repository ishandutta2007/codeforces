/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

long long howmany(long long x, long long n) {
    if (x > n)
        return 0;

    long long answer = 1;

    if ((x & 1) == 0) {
        answer += howmany(x + 1, n);
    }

    int size = 1;

    while ((n >> size) > x) {
        answer += 1LL << size;
        size++;
    }

    if ((n >> size) == x) {
        answer += n - (x << size) + 1;
    }

    return answer;
}

class ECommonNumber {
public:
    void solve(std::istream &in, std::ostream &out) {
        long long k, n;
        in >> n >> k;

        long long p = 1;

        while (howmany(2 * p, n) >= k) {
            p *= 2;
        }

        long long answer = p;

        for (long long i = p / 2; i; i /= 2) {
            if (howmany(answer + i, n) >= k) {
                answer += i;
            }
        }

        out << answer << endl;
    }
};


int main() {
    ECommonNumber solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}