/* Generated by powerful Codeforces Tool
 * Author: calabash_boy_love_15 
 * Time: 2019-04-26 14:17:55
 * Personal Code Template: https://github.com/4thcalabash/ACM-Code-Library
**/
#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#ifdef __LOCAL_DEBUG__
# define _debug(fmt, ...) fprintf(stderr, "\033[91m[%s %3d]: " fmt "\n\033[0m", \
  __func__,__LINE__, ##__VA_ARGS__)
#else
# define _debug(...) (void(0))
#endif
#define PB(x) push_back(x)
#define rep(i,l,r) for (int i = l,_ = r;i< _;i++)
#define REP(i,l,r) for (int i=l,_=r;i<=_;i++)
#define leave(x) do {cout<<#x<<endl;fflush(stdout);return 0;}while (0);
#define untie do{ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}while (0)
#define range(x) x.begin(),x.end()
typedef long long LL;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef long double db;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int inf = 0x3f3f3f3f;
const ll inf_ll = 0x3f3f3f3f3f3f3f3fLL;
/************* header ******************/

const int maxn = 2e5+100;
int s[maxn];
int n,b,a;

int main(){

    untie;
    cin>>n>>a>>b;
    for (int i=1;i<=n;i++){
        cin>>s[i];
    }
    int now_a = a;
    int now_b = b;
    for (int i=1;i<=n;i++){
        if (now_a == 0 && now_b == 0){
            printf("%d\n",i-1);
            return 0;
        }
        if (s[i]){
            if (now_a){
                if (now_b < b){
                    now_a --;
                    now_b ++;
                }else if (now_b ){
                    now_b --;
                }else{
                    now_a --;
                }
            }else{
                if (now_b ){
                    now_b --;
                }else{
                    printf("%d\n",i-1);
                    return 0;
                }

            }
        }else{
            if (now_b){
                now_b --;
            }else if (now_a){
                now_a --;
            }else{
                printf("%d\n",i-1);
                return 0;
            }
        }
    }

    printf("%d\n",n);
    return 0;
}