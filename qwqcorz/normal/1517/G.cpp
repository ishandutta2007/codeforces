#include<bits/stdc++.h>
#define int long long
using namespace std;
const int N=2e3+5;
const int inf=1e18;

int read()
{
	int s=0;
	char c=getchar(),lc='+';
	while (c<'0'||'9'<c) lc=c,c=getchar();
	while ('0'<=c&&c<='9') s=s*10+c-'0',c=getchar();
	return lc=='-'?-s:s;
}
void write(int x)
{
	if (x<0) putchar('-'),x=-x;
	if (x<10) putchar(x+'0');
	else write(x/10),putchar(x%10+'0');
}
void print(int x=-1,char c='\n')
{
	write(x);
	putchar(c);
}
namespace Flow
{
	struct edge
	{
		int to,val,nxt;
	}e[N*7];
	int head[N],cur[N],cnte;
	void add_edge(int u,int v,int w)
	{
		e[++cnte].to=v;
		e[cnte].val=w;
		e[cnte].nxt=head[u];
		head[u]=cnte;
	}
	void add(int u,int v,int w)
	{
//		print(u,' ');print(v,' ');print(w);
		add_edge(u,v,w);
		add_edge(v,u,0);
	}
	int q[N],deep[N],S,T,n;
	bool bfs()
	{
		for (int i=0;i<=n;i++) cur[i]=head[i],deep[i]=0;
		int h=1,t=1;
		deep[q[1]=S]=1;
		while (h<=t)
		{
			int now=q[h++];
			for (int i=head[now];i;i=e[i].nxt)
			{
				int to=e[i].to;
				if (deep[to]||!e[i].val) continue;
				deep[q[++t]=to]=deep[now]+1;
			}
		}
		return deep[T];
	}
	int dfs(int now,int flow)
	{
		if (!flow) return 0;
		if (now==T) return flow;
		int ret=0;
		for (int i=cur[now];i;cur[now]=i=e[i].nxt)
		{
			int to=e[i].to,tmp=0;
			if (deep[to]==deep[now]+1&&(tmp=dfs(to,min(flow,e[i].val))))
			ret+=tmp,flow-=tmp,e[i].val-=tmp,e[i^1].val+=tmp;
			if (!flow) break;
		}
		return ret;
	}
	int solve()
	{
		int ret=0;
		while (bfs()) ret+=dfs(S,inf);
		return ret;
	}
	void send(int _n,int _S,int _T)
	{
		cnte=1;
		n=_n,S=_S,T=_T;
	}
}
int x[N],y[N],w[N],in[N],out[N],bel[N];
int dis(int u,int v){return max(abs(x[u]-x[v]),abs(y[u]-y[v]));}

signed main(signed Goodbye,char *Wangang[])
{
	(void)Goodbye,(void)Wangang;
	int n=read(),S=0,T=n*2+1,ans=0;
	for (int i=1;i<=n;i++) x[i]=read(),y[i]=read(),ans+=w[i]=read();
	for (int i=1;i<=n;i++)
	{
		if (x[i]%2!=0&&y[i]%2!=0) bel[i]=1;
		if (x[i]%2==0&&y[i]%2!=0) bel[i]=2;
		if (x[i]%2==0&&y[i]%2==0) bel[i]=3;
		if (x[i]%2!=0&&y[i]%2==0) bel[i]=4;
	}
	for (int i=1;i<=n;i++) in[i]=i,out[i]=i+n;
	Flow::send(T,S,T);
	for (int i=1;i<=n;i++) Flow::add(in[i],out[i],w[i]);
	for (int i=1;i<=n;i++) if (bel[i]==1) Flow::add(S,in[i],inf);
	for (int i=1;i<=n;i++) if (bel[i]==4) Flow::add(out[i],T,inf);
	for (int i=1;i<=n;i++)
	for (int j=1;j<=n;j++)
	{
		if (bel[i]==1&&bel[j]==2&&dis(i,j)<=1) Flow::add(out[i],in[j],inf);
		if (bel[i]==2&&bel[j]==3&&dis(i,j)<=1) Flow::add(out[i],in[j],inf);
		if (bel[i]==3&&bel[j]==4&&dis(i,j)<=1) Flow::add(out[i],in[j],inf);
	}
	print(ans-=Flow::solve());
	
	return 0;
}
//....................  ..                        .    . . ..   .                                          .........
//...................  ....,]]]]]]`.   . .         . .,@@@@@@`.. .                                          ........
//................... ,@@@@@@@@@@@@@@@@@@\].,]]]]]`,@@@@@@@@@@@. .                                          ........
//....................@^...[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`                                            .......
//...................,@`......\@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`.                                          .......
//...................=@......../@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`.                                         .......
//...................=@....../@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                                         .......
//...................=@....=@@@@@@/[[[[[@@@@@@@@@@@@@@@@@/`...[@@@@^                                         .......
//...................=@.../@@@/`...........\@@@@@@@@@@@`........,@@@.                                     . ........
//......,/@@@@@@@O\]`.@`.=@@@`...............\@@@@@@@@`...........@@^                                       ........
//....,@^........,/@@@@^,@@/..................,@@@@@@^............,@@.                                     .........
//....//......,/@[=OOOOO=@@....................,@@@@@...]O@@]......=@^                                     .........
//....@`....]@OO^.=OOO/@@@^.../@@@@@@@`.........=@@@@.=@@@@@@@@....=@^                                     .........
//...=@...,@OOO/.......=@@^.,@@@@@@@@@@@........=@@@@,@@@@@@@@@@...=@^                                    ..........
//...=@..=@`............\@^,@@@@@@@@@@@@@........@@@@=@@@@@@@@@@^..=@.                                 .............
//...=@.=@@OO@@]........@@@=@@@@@@@@@@@@@^......=@@@@O@@@@@@@@@@^..//.                                  ............
//...=@,@`.   .,\@`....=@\@@@@@@@@@@@@@@@^......O@@@@@@@@@@@@@@@..=@.  ......  .  . .......            .............
//...=@@/ ........\@`..=@.\@@@@@@@@@@@@@@^.....=@@@@@@@@@@@@@@@^./@`...,/@O[[...[[[O@@/.=/ .  ...... ...............
//....@@^   /@OOOO@@@\.=@  =@@@@@@@@@@@@@...../@@@@@@@@@@@@@@/]/@/...,@`...............[@@[[O@\`,[[@]...............
//....\@^  =@OOOOOOOO@\.@. OO@@@@@@@@@@/...,@@@@@@@@@@@@@@@@@@@@` .,@`.......,^...........,`...,\@`..,@.............
//....,@^ .=OOOOOOOOOO@\O^.\OOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/... ,@........=/..../@/[............\@...@`...........
//.....=@. =@OOOOOOOOOO@/@.,@OOOO@@@@@@@@@@@@@@@@@@@@@@@/[...    .@`...........,@`.................,@..=O...........
//......@\..\OOOOOOOOOO@^=@.,@OO@@@@@@@@@@@@@@@@@@@@@^         . .O......@O@^.,@....................=\..@*..........
//.......\@..\@OOOOOOOO@O.,@`..@@@@@@@@@@@@@@@@@@@@@@O    .     .,O......=@@`.=^.....................@..@@@]`.......
//........,@\..\@@OOOO@@^...\@@@@@@@@@@@@@@@@@@@@@@@@@.  ..,/@@@@@@..=@`......=O.........../^........@]@@O\*,O@`....
//..........,O@O]....,/@......@@@@@@@@@@@@@@@@@@@@@@@@^../@`*****=@@/@[....,[@`\@.......,@` .......,@/*********@\...
//..............,[\O@@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@.=O*******[[[[O@@O]`]]]/@`@@@O@@O[[[***[[[\@@`*********,O@^..
//.................**O@...../@@@@@@@@@@@@@@@@@@@@@@@@@@@`*****************,\@*****[[`**************************=@...
//................****,@@@@@/*,@@@@@@@@@@@@@@@@@@@@@@@@O*******************************************************O/*..
//...................************[[\OO@@@@@@O/[[[[[[[*,@@\]**************************************************,@@*...
//..............................**********************.***[[@@O]]`***************************************]]@@[**....
//..........................................................*****,[[[OOOOOOOOOOOOOO@@@@@@@@@@@@O@OOOOO[[[****.......
//................................................................................******************................