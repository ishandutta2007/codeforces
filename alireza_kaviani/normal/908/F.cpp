/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-03-30 15:00:30
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n , ans , prv = 0 , cnt[3] , mx[3] , x[MAXN];
vector<ll> R , B;
string col;

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n;
    for(ll i = 1 ; i <= n ; i++){
        cin >> x[i] >> col;
        if(col != "B" && cnt[0] == 0 && cnt[1] == 0)    ans -= x[i];
        if(col != "R" && cnt[0] == 0 && cnt[2] == 0)    ans -= x[i];
        if(col == "G"){
            cnt[0]++;
            if(prv == 0){
                R = {x[i]} , B = {x[i]};
                ans += 2 * x[i];
                prv = x[i];
                continue;
            }
            R.push_back(x[i]);
            B.push_back(x[i]);
            ll mx1 = 0 , mx2 = 0;
            for(ll i = 0 ; i < SZ(R) - 1 ; i++) mx1 = max(mx1 , R[i + 1] - R[i]);
            for(ll i = 0 ; i < SZ(B) - 1 ; i++) mx2 = max(mx2 , B[i + 1] - B[i]);
            ans += min((x[i] - prv) * 2 , (x[i] - prv) * 3 - mx1 - mx2);
            prv = x[i];
            R = {x[i]};
            B = {x[i]};
        }
        if(col == "R"){
            cnt[1]++;
            R.push_back(x[i]);
        }
        if(col == "B"){
            cnt[2]++;
            B.push_back(x[i]);
        }
    }
    if(SZ(R))   ans += R.back() - prv;
    if(SZ(B))   ans += B.back() - prv;
    cout << ans << endl;

    return 0;
}
/*

*/