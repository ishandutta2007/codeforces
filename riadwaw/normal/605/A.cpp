/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

class TaskA {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n;
		in >> n;

		vector<int> a(n);
		for (int i = 0; i < n; ++i) {
			int x;
			in >> x;
			--x;
			a[x] = i;
		}


		int cnt = 0;
		int wh = -1;
		int ans = 0;
		for (int i = 0; i < n; ++i) {
			if (a[i] > wh) {
				++cnt;
				ans = max(ans, cnt);
			} else {
				cnt = 1;
			}
			cerr << i << ' ' << cnt << endl;

			wh = a[i];
		}
		out << n - ans;
	}
};


int main() {
	std::ios_base::sync_with_stdio(false);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	in.tie(0);
	out << std::fixed;
	out.precision(20);
	solver.solve(in, out);
	return 0;
}