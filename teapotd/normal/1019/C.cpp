#define _USE_MATH_DEFINES/////////////////////////////////////////////////////
#include <bits/stdc++.h>//////////////////////////////////////////////////////
#ifdef LOC////////////////////////////////////////////////////////////////////
#include "debuglib.h"/////////////////////////////////////////////////////////
#else/////////////////////////////////////////////////////////////////////////
#define deb(...)//////////////////////////////////////////////////////////////
#define DBP(...)//////////////////////////////////////////////////////////////
#endif////////////////////////////////////////////////////////////////////////
#define x first///////////////////////////////////////////////////////////////
#define y second//////////////////////////////////////////////////////////////
#define mp make_pair//////////////////////////////////////////////////////////
#define pb push_back//////////////////////////////////////////////////////////
#define sz(x)int((x).size())//////////////////////////////////////////////////
#define each(a,x)for(auto&a:(x))///////////////// by teapotd /////////////////
#define all(x)(x).begin(),(x).end()///////////////////////////////////////////
#define rep(i,b,e)for(int i=(b);i<(e);i++)////////////////////////////////////
using namespace std;using namespace rel_ops;using ll=int64_t;using Pii=pair///
<int,int>;using ull=uint64_t;using Vi=vector<int>;void run();int main(){cin.//
sync_with_stdio(0);cin.tie(0);cout<<fixed<<setprecision(10);run();return 0;}//
//--------------------------------------------------------------------------//

struct Vert {
	Vi E;
	int state{0};
};

void run() {
	int n, m;cin >> n >> m;
	vector<Vert> G(n);

	rep(i, 0, m) {
		int a, b; cin >> a >> b;
		G[a-1].E.pb(b-1);
	}

	Vi chosen, ans;

	rep(i, 0, n) if (G[i].state == 0) {
		G[i].state = 1;
		each(e, G[i].E) G[e].state = 1;
		chosen.pb(i);
	}

	while (!chosen.empty()) {
		int v = chosen.back();
		chosen.pop_back();
		if (G[v].state == 2) continue;

		ans.pb(v);
		G[v].state = 2;
		each(e, G[v].E) G[e].state = 2;
	}

	cout << sz(ans) << endl;
	each(x, ans) cout << x+1 << ' ';
	cout << endl;
}