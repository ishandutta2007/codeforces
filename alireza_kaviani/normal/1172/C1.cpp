/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-03-25 17:01:16
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll MAXM = 3e3 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 998244353; // 1e9 + 9;

ll n , m , tot , ans[2] , S[2] , A[MAXN] , W[MAXN] , dp[MAXM][MAXM];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n >> m;
    for(ll i = 1 ; i <= n ; i++)    cin >> A[i];
    for(ll i = 1 ; i <= n ; i++)    cin >> W[i] , tot += W[i] , S[A[i]] += W[i];

    dp[0][0] = 1;
    for(ll i = 0 ; i < m ; i++){
        for(ll j = 0 ; j <= i ; j++){
            dp[i + 1][j + 1] = (dp[i + 1][j + 1] + dp[i][j] * (S[1] + j) % MOD * poww(tot - i + 2 * j , MOD - 2 , MOD)) % MOD;
            dp[i + 1][j] = (dp[i + 1][j] + dp[i][j] * (S[0] - i + j) % MOD * poww(tot - i + 2 * j , MOD - 2 , MOD)) % MOD;
        }
    }
    for(ll i = 0 ; i <= m ; i++){
        ans[0] = (ans[0] + (S[0] - m + i) * poww(S[0] , MOD - 2 , MOD) % MOD * dp[m][i] % MOD) % MOD;
        ans[1] = (ans[1] + (S[1] + i) * poww(S[1] , MOD - 2 , MOD) % MOD * dp[m][i]) % MOD;
    }

    for(ll i = 1 ; i <= n ; i++)    cout << W[i] * ans[A[i]] % MOD << endl;

    return 0;
}
/*

*/