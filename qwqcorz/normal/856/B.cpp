#include<bits/stdc++.h>
#define mk make_pair
#define fi first
#define se second
using namespace std;
const int N=1e6+5;
const int Add1=998244353;
const int Mod1=1919810111;
const int Add2=1145141;
const int Mod2=1e9+7;

int read()
{
	int s=0;
	char c=getchar(),lc='+';
	while (c<'0'||'9'<c) lc=c,c=getchar();
	while ('0'<=c&&c<='9') s=s*10+c-'0',c=getchar();
	return lc=='-'?-s:s;
}
void write(int x)
{
	if (x<0) putchar('-'),x=-x;
	if (x<10) putchar(x+'0');
	else write(x/10),putchar(x%10+'0');
}
void print(int x=-1,char c='\n')
{
	write(x);
	putchar(c);
}
struct edge
{
	int to,nxt;
}e[N*2];
int head[N],cnte=0;
void add_edge(int u,int v)
{
	e[++cnte].to=v;
	e[cnte].nxt=head[u];
	head[u]=cnte;
}
bool vis[N];
int dp[N][2];
char tmp[N];
int len[N],cnt=0;
map<pair<int,int>,int>id;
vector<char>a[N];
vector<int>ha1[N],ha2[N],hb1[N],hb2[N];
void dfs(int now,int father)
{
	vis[now]=1;
	dp[now][0]=0;
	dp[now][1]=1;
	for (int i=head[now];i;i=e[i].nxt)
	{
		int to=e[i].to;
		if (to==father||vis[to]) continue;
		dfs(to,now);
		dp[now][0]+=max(dp[to][0],dp[to][1]);
		dp[now][1]+=dp[to][0];
	}
}
void clear(int n)
{
	for (int i=1;i<=cnt;i++) head[i]=vis[i]=0;
	for (int i=1;i<=n;i++)
	{
		a[i].clear();
		ha1[i].clear();
		ha2[i].clear();
		hb1[i].clear();
		hb2[i].clear();
	}
	cnt=cnte=0;
	id.clear();
}

signed main(signed Goodbye,char *Wangang[])
{
	(void)Goodbye,(void)Wangang;
	int T=read();
	while (T--)
	{
		int n=read();
		for (int i=1;i<=n;i++)
		{
			scanf("%s",tmp);
			len[i]=strlen(tmp);
			for (int j=0;j<len[i];j++) a[i].push_back(tmp[j]);
		}
		for (int i=1;i<=n;i++)
		{
			ha1[i].push_back(a[i][0]-'a'+1+Add1);
			ha2[i].push_back(0);
			for (int j=1;j<len[i];j++)
			{
				ha1[i].push_back((ha1[i].back()*27LL+a[i][j]-'a'+1+Add1)%Mod1);
				ha2[i].push_back((ha2[i].back()*27LL+a[i][j]-'a'+1+Add1)%Mod1);
			}
		}
		for (int i=1;i<=n;i++)
		{
			hb1[i].push_back(a[i][0]-'a'+1+Add2);
			hb2[i].push_back(0);
			for (int j=1;j<len[i];j++)
			{
				hb1[i].push_back((hb1[i].back()*27LL+a[i][j]-'a'+1+Add2)%Mod2);
				hb2[i].push_back((hb2[i].back()*27LL+a[i][j]-'a'+1+Add2)%Mod2);
			}
		}
		for (int i=1;i<=n;i++)
		for (int j=0;j<len[i];j++)
		if (!id.count(mk(ha1[i][j],hb1[i][j]))) id[mk(ha1[i][j],hb1[i][j])]=++cnt;
		for (int i=1;i<=n;i++)
		for (int j=0;j<len[i];j++)
		if (id.count(mk(ha2[i][j],hb2[i][j])))
			add_edge(id[mk(ha1[i][j],hb1[i][j])],id[mk(ha2[i][j],hb2[i][j])]),
			add_edge(id[mk(ha2[i][j],hb2[i][j])],id[mk(ha1[i][j],hb1[i][j])]);
		int ans=0;
		for (int i=1;i<=cnt;i++) if (!vis[i]) dfs(i,0),ans+=max(dp[i][0],dp[i][1]);
		print(ans);
		clear(n);
	}
	
	return 0;
}
//...................  ..                        .    . . ..   .                                          .........
//..................  ....,]]]]]]`.   . .         . .,@@@@@@`.. .                                          ........
//.................. ,@@@@@@@@@@@@@@@@@@\].,]]]]]`,@@@@@@@@@@@. .                                          ........
//...................@^...[@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`                                            .......
//..................,@`......\@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`.                                          .......
//..................=@......../@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`.                                         .......
//..................=@....../@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.                                         .......
//..................=@....=@@@@@@/[[[[[@@@@@@@@@@@@@@@@@/`...[@@@@^                                         .......
//..................=@.../@@@/`...........\@@@@@@@@@@@`........,@@@.                                     . ........
//.....,/@@@@@@@O\]`.@`.=@@@`...............\@@@@@@@@`...........@@^                                       ........
//...,@^........,/@@@@^,@@/..................,@@@@@@^............,@@.                                     .........
//...//......,/@[=OOOOO=@@....................,@@@@@...]O@@]......=@^                                     .........
//...@`....]@OO^.=OOO/@@@^.../@@@@@@@`.........=@@@@.=@@@@@@@@....=@^                                     .........
//..=@...,@OOO/.......=@@^.,@@@@@@@@@@@........=@@@@,@@@@@@@@@@...=@^                                    ..........
//..=@..=@`............\@^,@@@@@@@@@@@@@........@@@@=@@@@@@@@@@^..=@.                                 .............
//..=@.=@@OO@@]........@@@=@@@@@@@@@@@@@^......=@@@@O@@@@@@@@@@^..//.                                  ............
//..=@,@`.   .,\@`....=@\@@@@@@@@@@@@@@@^......O@@@@@@@@@@@@@@@..=@.  ......  .  . .......            .............
//..=@@/ ........\@`..=@.\@@@@@@@@@@@@@@^.....=@@@@@@@@@@@@@@@^./@`...,/@O[[...[[[O@@/.=/ .  ...... ...............
//...@@^   /@OOOO@@@\.=@  =@@@@@@@@@@@@@...../@@@@@@@@@@@@@@/]/@/...,@`...............[@@[[O@\`,[[@]...............
//...\@^  =@OOOOOOOO@\.@. OO@@@@@@@@@@/...,@@@@@@@@@@@@@@@@@@@@` .,@`.......,^...........,`...,\@`..,@.............
//...,@^ .=OOOOOOOOOO@\O^.\OOOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/... ,@........=/..../@/[............\@...@`...........
//....=@. =@OOOOOOOOOO@/@.,@OOOO@@@@@@@@@@@@@@@@@@@@@@@/[...    .@`...........,@`.................,@..=O...........
//.....@\..\OOOOOOOOOO@^=@.,@OO@@@@@@@@@@@@@@@@@@@@@^         . .O......@O@^.,@....................=\..@*..........
//......\@..\@OOOOOOOO@O.,@`..@@@@@@@@@@@@@@@@@@@@@@O    .     .,O......=@@`.=^.....................@..@@@]`.......
//.......,@\..\@@OOOO@@^...\@@@@@@@@@@@@@@@@@@@@@@@@@.  ..,/@@@@@@..=@`......=O.........../^........@]@@O\*,O@`....
//.........,O@O]....,/@......@@@@@@@@@@@@@@@@@@@@@@@@^../@`*****=@@/@[....,[@`\@.......,@` .......,@/*********@\...
//.............,[\O@@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@.=O*******[[[[O@@O]`]]]/@`@@@O@@O[[[***[[[\@@`*********,O@^..
//................**O@...../@@@@@@@@@@@@@@@@@@@@@@@@@@@`*****************,\@*****[[`**************************=@...
//...............****,@@@@@/*,@@@@@@@@@@@@@@@@@@@@@@@@O*******************************************************O/*..
//..................************[[\OO@@@@@@O/[[[[[[[*,@@\]**************************************************,@@*...
//.............................**********************.***[[@@O]]`***************************************]]@@[**....
//.........................................................*****,[[[OOOOOOOOOOOOOO@@@@@@@@@@@@O@OOOOO[[[****.......
//...............................................................................******************................