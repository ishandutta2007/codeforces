/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-10-17 16:35:02
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

int n , A[MAXN];
vector<pii> x , y;
vector<pii> ans;

int main() {
	ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

	cin >> n;
	for(int i = 1 ; i <= n ; i++)	cin >> A[i];
	for(int i = n ; i >= 1 ; i--){
		if(A[i] == 0)	continue;
		if(A[i] == 1){
			ans.push_back({i , i});
			x.push_back({i , i});
			continue;
		}
		if(A[i] == 2){
			if(SZ(x) == 0){
				return cout << -1 << endl , 0;
			}
			int r = x.back().X , c = x.back().Y;
			x.pop_back();
			ans.push_back({r , i});
			y.push_back({r , i});
		}
		if(A[i] == 3){
			int r = -1 , c = -1;
			if(SZ(y)){
				r = y.back().X , c = y.back().Y;
				y.pop_back();
			}
			else if(SZ(x)){
				r = x.back().X , c = x.back().Y;
				x.pop_back();
			}
			else{
				return cout << -1 << endl , 0;
			}
			ans.push_back({i , i});
			ans.push_back({i , c});
			y.push_back({i , i});
		}
	}
	cout << SZ(ans) << endl;
	for(pii i : ans){
		cout << i.X << sep << i.Y << endl;
	}

    return 0;
}
/*

*/