/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <set>

using namespace std;

class TaskD {
public:
	void solve(std::istream& in, std::ostream& out) {
		string s;
		in >> s;
		s = s.substr(4);
		used.clear();
		out << solve(s) << "\n";
	}

	set<int> used;

	int64_t solve(string s) {
		if (s.empty()) {
			return 0;
		}
		string suf = s.substr(1);
		solve(suf);

		for (int i = 0;; ++i) {
			if (s[0] == '0' && i == 0) {
				continue;
			}
			int64_t num = i;
			for (int j = 0; j < s.size(); ++j) {
				num *= 10;
			}
			num += to_int(s);
			if (num < 1989 || used.count(num)) {
				continue;
			} else {
				used.insert(num);
				return num;
			}
		}
	}

	int to_int(string s) {
		return atoi(s.data());
	}
};


int main() {
	std::ios_base::sync_with_stdio(false);
	TaskD solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	in.tie(0);
	out << std::fixed;
	out.precision(20);
	int n;
in >> n;
for(int i = 0; i < n; ++i) {
	solver.solve(in, out);
}

	return 0;
}