#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
void solve()
{
  vector<int> counter;
  vector<vector<int>> values;
  int n, m;
  cin >> n >> m;
  map<int, int> cnters;
  REP(i, n)
  {
    int a;
    cin >> a;
    cnters[a]++;
  }
  set<pair<int, int>> bad;
  REP(i, m)
  {
    int a, b;
    cin >> a >> b;
    bad.insert({a, b});
    bad.insert({b, a});
  }
  vector<pair<int, int>> targets;

  {
    map<int, vector<int>> A;
    for (auto x : cnters)
    {
      A[x.second].push_back(x.first);
      targets.push_back(x);
      bad.insert({x.first, x.first});
    }
    for (auto x : A)
    {
      counter.push_back(x.first);
      sort(ALL(x.second));
      reverse(ALL(x.second));
      x.second.push_back(-1e9);
      values.push_back(x.second);
    }
  }

  priority_queue<pair<int, tuple<int, int, int>>> nexts; // tuple<int,int,int> = (my_name, target_cnt, itr)

  REP(i, targets.size())
  {
    REP(q, counter.size())
    {
      int value_sum = (targets[i].first + values[q][0]);
      int cnt_sum = (targets[i].second + counter[q]);
      nexts.push({value_sum * cnt_sum, {i, q, 0}});
    }
  }

  while (!nexts.empty())
  {
    int eval_value = nexts.top().first;
    tuple<int, int, int> now = nexts.top().second;
    nexts.pop();
    if (bad.count({targets[get<0>(now)].first, values[get<1>(now)][get<2>(now)]}) == 0)
    {
      cout << eval_value << endl;
      return;
    }

    get<2>(now)++;
    int value_sum = targets[get<0>(now)].first + values[get<1>(now)][get<2>(now)];
    int cnt_sum = targets[get<0>(now)].second + counter[get<1>(now)];
    nexts.push({value_sum * cnt_sum, now});
  }

  //  should not reach here!
  assert(0 == 1);
  exit(1);
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}