/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-12-19 13:05:02
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 100 + 10;
const ll MAX = 2e4 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

int n , X , A[MAXN] , B[MAXN] , C[MAXN] , dp[MAXN][MAX] , dp2[MAXN][MAX];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

	cin >> n;
	for(int i = 0 ; i < n ; i++){
		cin >> A[i] >> B[i];
		A[i] *= 2;
		C[i] = A[i] - B[i];
		X += B[i];
	}
	//cout << X << endl;
	fill(dp[0] + 1 , dp[0] + MAX , -MOD);
	fill(dp2[0] + 1 , dp2[0] + MAX , -MOD);
	for(int i = 1 ; i <= n ; i++){
		fill(dp[i] , dp[i] + MAX , -MOD);
		fill(dp2[i] , dp2[i] + MAX , -MOD);
	}
	for(int j = 0 ; j < n ; j++){
		for(int i = n ; i >= 1 ; i--){
			for(int k = C[j] ; k < MAX ; k++){
				dp[i][k] = max(dp[i][k] , dp[i - 1][k - C[j]] + A[j]);
				dp2[i][k] = max(dp2[i][k] , dp2[i - 1][k - C[j]] + B[j]);
			}
		}
	}
	for(int i = 1 ; i <= n ; i++){
		int ans = 0;
		for(int j = 0 ; j <= X ; j++){
			ans = max(ans , dp[i][j]);
			//cout << i << sep << j << sep << dp[i][j] << endl;
		}
		for(int j = X + 1 ; j < MAX ; j++){
			//cout << i << sep << j << sep << dp2[i][j] << endl;
			ans = max(ans , dp2[i][j] + X);
		}
		printf("%.10f " , ((double)ans) / 2);
	}

    return 0;
}
/*

*/