/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class CJeremyBearimy {
public:
    void solve(std::istream &in, std::ostream &out) {
        int t;
        in >> t;

        while (t--) {
            int n;
            in >> n;

            n *= 2;

            vector<vector<pair<int, int>>> tree(n);

            long long a = 0, b = 0;

            for (int i = 0; i + 1 < n; ++i) {
                int u, v, w;
                in >> u >> v >> w;
                u--;
                v--;

                tree[u].push_back({v, w});
                tree[v].push_back({u, w});
            }

            function<int(int, int)> dfs = [&](int s, int p) {
                int total = 1;

                for (auto e : tree[s]) {
                    int u, w;
                    tie(u, w) = e;
                    if (u == p) continue;

                    int cur = dfs(u, s);
                    total += cur;

                    b += 1LL * w * min(cur, n - cur);
                    if (cur & 1)
                        a += w;
                }

                return total;
            };

            dfs(0, -1);

            out << a << " " << b << endl;
        }
    }
};


int main() {
    CJeremyBearimy solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}