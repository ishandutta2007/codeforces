#include <stdio.h>
#include <string.h>
#define N 150005
int limit;struct element_t{int value,rank;};struct node_t{struct element_t e[5];int assign;};void node_el_insert(struct node_t*t,struct element_t e){for(int i=0;i<limit;i++){if(t->e[i].value==0){t->e[i]=e;return;}if(t->e[i].value==e.value){t->e[i].rank+=e.rank;return;}}int min_id=0;for(int i=1;i<limit;i++)if(t->e[i].rank<t->e[min_id].rank)min_id=i;int dec;if(e.rank>t->e[min_id].rank){dec=t->e[min_id].rank;t->e[min_id]=e;}else{dec=e.rank;}for(int i=0;i<limit;i++)t->e[i].rank-=dec;}struct node_t push_up(struct node_t l,struct node_t r){for(int i=0;i<limit;i++)if(r.e[i].value!=0)node_el_insert(&l,r.e[i]);l.assign=0;return l;}struct node_t make_node(int value,int len){struct node_t res;memset(&res,0,sizeof(res));res.e[0].value=value;res.e[0].rank=len;return res;}void push_down(struct node_t*u,struct node_t*l,struct node_t*r,int ll,int lr){if(u->assign){*l=make_node(u->assign,ll);l->assign=u->assign;*r=make_node(u->assign,lr);r->assign=u->assign;u->assign=0;}}struct node_t p[N*4];void init(int u,int l,int r,int*a){if(r-l==1){p[u]=make_node(a[l],1);}else{int mid=(l+r)/2;init(u+u,l,mid,a);init(u+u+1,mid,r,a);p[u]=push_up(p[u+u],p[u+u+1]);}}void modify(int u,int l,int r,int ml,int mr,int value){if(ml<=l&&r<=mr){p[u]=make_node(value,r-l);p[u].assign=value;}else{int mid=(l+r)/2;push_down(&p[u],&p[u+u],&p[u+u+1],mid-l,r-mid);if(ml<mid)modify(u+u,l,mid,ml,mr,value);if(mr>mid)modify(u+u+1,mid,r,ml,mr,value);p[u]=push_up(p[u+u],p[u+u+1]);}}struct node_t query(int u,int l,int r,int ql,int qr){if(ql<=l&&r<=qr)return p[u];int mid=(l+r)/2;push_down(&p[u],&p[u+u],&p[u+u+1],mid-l,r-mid);if(qr<=mid)return query(u+u,l,mid,ql,qr);if(ql>=mid)return query(u+u+1,mid,r,ql,qr);struct node_t rl=query(u+u,l,mid,ql,qr);struct node_t rr=query(u+u+1,mid,r,ql,qr);return push_up(rl,rr);}int a[N];int n,m,pp;int main(){scanf("%d%d%d",&n,&m,&pp);limit=100/pp;for(int i=0;i<n;i++)scanf("%d",&a[i]);init(1,0,n,a);while(m-->0){int opt,l,r;scanf("%d%d%d",&opt,&l,&r);l--;if(opt==1){int value;scanf("%d",&value);modify(1,0,n,l,r,value);}else{struct node_t res=query(1,0,n,l,r);int cnt=0;for(int i=0;i<limit;i++)cnt+=res.e[i].value!=0;printf("%d ",cnt);for(int i=0;i<limit;i++)if(res.e[i].value!=0)printf("%d ",res.e[i].value);puts("");}}return 0;}