#include<bits/stdc++.h>
 using namespace std; long long n,p,l1,r1,ans,cnt,q[105],r[105],Q,R,P,pw[55]; void exgcd(long long a,long long b,long long &x,long long &y){ 	if(b==0){ 		x=1;y=0; 		return; 	} 	exgcd(b,a%b,x,y); 	int t=x; 	x=y;y=t-y*(a/b); 	return; } struct fe{ 	long long rem,x; 	fe operator *(const fe &o)const{ 		return (fe){rem+o.rem,x*o.x%Q}; 	} 	fe operator *(long long o)const{ 		int y=0;while(o%P==0)y++,o/=P; 		return (fe){rem+y,x*o%Q}; 	} 	fe inv(){ 		long long a,b;exgcd(x,Q,a,b); 		if(a<0)a+=Q; 		return (fe){-rem,a}; 	} 	long long get(){ 		if(rem>=R)return 0; 		return pw[rem]*x%Q; 	} }fc[100005],fi[100005]; long long C(long long x,long long y){ 	if(y<0||x<0||x<y)return 0; 	return (fc[x]*fi[y]*fi[x-y]).get(); } long long calc(long long n,long long p,long long k){ 	long long nowx=0,nowy=1; 	for(int i=0;i<cnt;i++){ 		P=q[i],R=r[i];Q=1;for(int i=0;i<R;i++)Q*=P; 		pw[0]=1;for(int i=1;i<R;i++)pw[i]=pw[i-1]*P;pw[R]=0; 		fc[0]=(fe){0,1};for(int i=1;i<=n;i++)fc[i]=fc[i-1]*i; 		fi[n]=fc[n].inv(); 		for(int i=n;i;i--)fi[i-1]=fi[i]*i; 		long long ans=0; 		for(int i=0;i<=n;i++)if((n-i+k)%2==0){ 			ans=(ans+C(n,i)*C(n-i,(n-i+k)/2))%Q; 		} 		long long a,b;exgcd(Q,nowy,a,b); 		long long u=nowy*b,v=a*Q; 		nowx=nowx*v+ans*u,nowy*=Q; 		nowx%=nowy;if(nowx<0)nowx+=nowy; 	} 	return nowx; } int main(){ 	scanf("%I64d%I64d%I64d%I64d",&n,&p,&l1,&r1); 	long long m=p; 	for(long long i=2;i*i<=p;i++)if(m%i==0){ 		q[cnt]=i; 		while(m%i==0)m/=i,r[cnt]++; 		cnt++; 	} 	if(m>1){ 		q[cnt]=m;r[cnt]=1; 		cnt++; 	} 	int s=l1,e=r1; 	if(s%2==1)s++;if(e%2==1)e--; 	if(s<=e)ans=(ans+calc(n,p,s)-calc(n,p,e+2)+p)%p; 	s=l1,e=r1; 	if(s%2==0)s++;if(e%2==0)e--; 	if(s<=e)ans=(ans+calc(n,p,s)-calc(n,p,e+2)+p)%p; 	printf("%lld\n",ans); 	return 0; }