/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include<bits/stdc++.h>
using namespace std;

#define int long long
#define INF LONG_LONG_MAX
#define MINF LONG_LONG_MIN
#define pi acos(-1)
#define bp __builtin_popcount
#define ll long long
#define ld long double
#define pii pair<ll , ll>
#define For(i,a,b) for(ll i=a;i<b;i++)
#define Fori(i,a,b,p) for(ll i=a;i<b;i+=p)
#define Ror(i,a,b) for(ll i=a;i>b;i--)
#define Rori(i,a,b,p) for(ll i=a;i>b;i-=p)

#define precision(x,d) cout<<fixed<<setprecision(d)<<x
#define minQueue priority_queue<pii,vector<pii>,greater<pii> >
#define maxQueue priority_queue<pii>

#define pb push_back
#define pf push_front
#define ff first
#define ss second
#define FILL(a,b) memset((a),(b),sizeof((a)))
#define FAST ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);srand(time(NULL))
#define f(i,n) for(int i=0;i<n;i++)

class ASuperheroTransformation {
public:
	void solve(std::istream& in, std::ostream& out) {

	    string a,b;
	    in >> a >> b;


	    if(a.length()!=b.length()) {out << "No"; return; }
	    int flag = 1, n = a.length();

	    map<char,int> mm;
	    f(i,26)  mm[ (char)(i+'a')] = 0;

	    mm['a']=mm['e']=mm['i']=mm['o'] = mm['u'] = 1;

	    f(i,n) if(mm[a[i]]!=mm[b[i]]) flag = 0;

	    if(flag) out << "Yes";
	    else out << "No";
	}

};


signed main() {
	ASuperheroTransformation solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}