/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>

using namespace std;

class TaskB {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n;
		in >> n;
		bool inc = true;
		for (int i = 0; i < n; ++i) {
			int mx = 0;
			for (int j = 0; j < n; ++j) {
				int x;
				in >> x;
				mx = max(x, mx);
			}
			if (mx == n - 1 && inc) {
				inc = false;
				++mx;
			}
			out << mx << ' ';
		}
	}
};


int main() {
	std::ios_base::sync_with_stdio(false);
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	in.tie(0);
	out << std::fixed;
	out.precision(20);
	solver.solve(in, out);
	return 0;
}