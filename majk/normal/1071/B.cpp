/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author majk
 */

#ifndef MAJK_LIB
#define MAJK_LIB

#include <vector>
#include <stack>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <iomanip>
#include <set>
#include <functional>
#include <fstream>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <string>
#include <sstream>
#include <queue>
#include <bitset>
using namespace std;

#define x first
#define y second
typedef std::pair<int,int> pii; typedef long long ll; typedef unsigned long long ull; typedef unsigned int ui; typedef pair<ui,ui> puu;

template <typename T, typename U> std::istream&operator>>(std::istream&i, pair<T,U>&p) {i >> p.x >> p.y; return i;}
template<typename T>std::istream&operator>>(std::istream&i,vector<T>&t) {for(auto&v:t){i>>v;}return i;}
template <typename T, typename U> std::ostream&operator<<(std::ostream&o, const pair<T,U>&p) {o << p.x << ' ' << p.y; return o;}
template<typename T>std::ostream&operator<<(std::ostream&o,const vector<T>&t) {if(t.empty())o<<'\n';for(size_t i=0;i<t.size();++i){o<<t[i]<<" \n"[i == t.size()-1];}return o;}
template<typename T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> using maxheap = priority_queue<T, vector<T>, less<T>>;
template <typename T> bool in(T a, T b, T c) { return a <= b && b < c; }
ui logceil(int x) { return x?8*sizeof(int)-__builtin_clz(x):0; }

namespace std { template<typename T,typename U>struct hash<pair<T,U>>{hash<T>t;hash<U>u;size_t operator()(const pair<T,U>&p)const{return t(p.x)^(u(p.y)<<7);}}; }
template<typename T,typename F>T bsh(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){l=m+1;r=m;}else{h=m-1;}}return r;}
template<typename F> double bshd(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){l=m;}else{h=m;}}return (l+h)/2;}
template<typename T,typename F>T bsl(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){h=m-1;r=m;}else{l=m+1;}}return r;}
template<typename F> double bsld(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){h=m;}else{l=m;}}return (l+h)/2;}
template<typename T> T gcd(T a,T b) { if (a<b) swap(a,b); return b?gcd(b,a%b):a; }

template<typename T>class vector2:public vector<vector<T>>{public:vector2(){} vector2(size_t a,size_t b,T t=T()):vector<vector<T>>(a,vector<T>(b,t)){}};
template<typename T>class vector3:public vector<vector2<T>>{public:vector3(){} vector3(size_t a,size_t b,size_t c,T t=T()):vector<vector2<T>>(a,vector2<T>(b,c,t)){}};
template<typename T>class vector4:public vector<vector3<T>>{public:vector4(){} vector4(size_t a,size_t b,size_t c,size_t d,T t=T()):vector<vector3<T>>(a,vector3<T>(b,c,d,t)){}};
template<typename T>class vector5:public vector<vector4<T>>{public:vector5(){} vector5(size_t a,size_t b,size_t c,size_t d,size_t e,T t=T()):vector<vector4<T>>(a,vector4<T>(b,c,d,e,t)){}};


#endif
// #include "../l/mod.h"

class TaskB {
public:
void solve(istream& cin, ostream& cout) {
    int N, K;
    cin >> N >> K;
    vector<string> S(N);
    cin >> S;

    vector2<int> O(N, N, -1);
    O[N - 1][N - 1] = 0;
    for (int d = 2 * N - 3; d >= 1; --d) {
        vector<pair<pii, pii>> Z;
        for (int r = 0; r < N; ++r) {
            int c = d - r;
            if (c >= 0 && c < N) {
                int q = N;
                if (r < N - 1) q = min(q, O[r + 1][c]);
                if (c < N - 1) q = min(q, O[r][c + 1]);
                Z.push_back({{S[r][c]-'a', q}, {r, c}});
            }
        }
        sort(Z.begin(), Z.end());
        for (int i = 0; i < Z.size(); ++i) {
            auto &z = Z[i];
            O[z.y.x][z.y.y] = i;
        }
    }

    vector2<int> D(N, N, 10000);
    D[0][0] = 0;
    for (int d = 0; d <= 2 * N - 3; ++d) {
        for (int r = 0; r < N; ++r) {
            int c = d - r;
            if (c >= 0 && c < N) {
                int k = D[r][c] + (S[r][c] != 'a');
                if (r < N - 1) D[r + 1][c] = min(D[r + 1][c], k);
                if (c < N - 1) D[r][c + 1] = min(D[r][c + 1], k);
            }
        }
    }

    for (int d = 2 * N - 2; d >= 0; --d) {
        pii ans = {10000, -1};
        for (int r = 0; r < N; ++r) {
            int c = d - r;
            if (c >= 0 && c < N) {
                if (D[r][c] <= K) {
                    ans = min(ans, {O[r][c], r});
                }
            }
        }
        if (ans.x != 10000) {
            for (int i = 0; i < d; ++i) cout << 'a';
            int r = ans.y;
            int c = d - r;
            if (D[r][c] < K) cout << 'a'; else cout << S[r][c];

            while (r + c < 2 * N - 2) {
                if (r == N - 1) {
                    c++;
                } else if (c == N - 1) {
                    r++;
                } else {
                    if (O[r + 1][c] < O[r][c + 1]) ++r; else ++c;
                }

                cout << S[r][c];
            }
            cout << endl;
            return;
        }
    }
}
};


int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
    return 0;
}