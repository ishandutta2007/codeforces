#include <bits/stdc++.h>
using namespace std;
#define N 55
#define ll long long
const ll INF=1e18;int n,m;ll L[N],R[N],a[N],dp[N][N][N][2][2][2];bool tgL[N][N],tgR[N][N];
void W(ll &x,ll y) {x=min(x,y);}
int main()
{
	scanf("%d %d",&n,&m);++m;
	for(int i=1,t;i<=n;++i)
	{
		scanf("%lld %lld",&L[i],&R[i]);L[i]*=4;R[i]=R[i]*4+3;t=0;
		for(int j=m;j>=0;--j) if((L[i]^R[i])>>j&1) {t=j;break;}
		for(int j=0;j<t;++j) tgL[i][j]=!(L[i]>>j&1),tgR[i][j]=R[i]>>j&1;
	}for(int i=2;i<=m;++i) scanf("%lld",&a[i]);
	for(int l=n;l;--l) for(int r=l;r<=n;++r)
	{
		dp[m+1][l][r][0][0][0]=dp[m+1][l][r][0][1][0]=dp[m+1][l][r][1][0][0]=dp[m+1][l][r][1][1][0]=INF;
		dp[m+1][l][r][0][0][1]=dp[m+1][l][r][0][1][1]=dp[m+1][l][r][1][0][1]=dp[m+1][l][r][1][1][1]=INF;
	}
	for(int i=m;i>=0;--i) for(int l=n+1;l;--l) for(int r=l-1;r<=n;++r)
	{
		dp[i][l][r][0][0][0]=dp[i][l][r][0][1][0]=dp[i][l][r][1][0][0]=dp[i][l][r][1][1][0]=INF;
		dp[i][l][r][0][0][1]=dp[i][l][r][0][1][1]=dp[i][l][r][1][0][1]=dp[i][l][r][1][1][1]=INF;
		W(dp[i][l][r][0][0][0],dp[i+1][l][r][0][0][0]+(l>1 && r<n?((L[l-1]^L[r+1])>>i&1)*a[i]:0));
		W(dp[i][l][r][0][1][0],dp[i+1][l][r][0][1][0]+(l>1 && r<n?((L[l-1]^R[r+1])>>i&1)*a[i]:0));
		W(dp[i][l][r][1][0][0],dp[i+1][l][r][1][0][0]+(l>1 && r<n?((R[l-1]^L[r+1])>>i&1)*a[i]:0));
		W(dp[i][l][r][1][1][0],dp[i+1][l][r][1][1][0]+(l>1 && r<n?((R[l-1]^R[r+1])>>i&1)*a[i]:0));
		W(dp[i][l][r][0][0][1],dp[i+1][l][r][0][0][0]+(l>1 && r<n?(!((L[l-1]^L[r+1])>>i&1))*a[i]:0));
		W(dp[i][l][r][0][1][1],dp[i+1][l][r][0][1][0]+(l>1 && r<n?(!((L[l-1]^R[r+1])>>i&1))*a[i]:0));
		W(dp[i][l][r][1][0][1],dp[i+1][l][r][1][0][0]+(l>1 && r<n?(!((R[l-1]^L[r+1])>>i&1))*a[i]:0));
		W(dp[i][l][r][1][1][1],dp[i+1][l][r][1][1][0]+(l>1 && r<n?(!((R[l-1]^R[r+1])>>i&1))*a[i]:0));
		for(int j=l;j<=r;++j)
		{
			if(tgL[j][i])
			{
				W(dp[i][l][r][0][0][0],dp[i+1][l][j-1][0][0][0]+dp[i][j+1][r][0][0][1]+(l>1?(!((L[l-1]^L[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][0][1][0],dp[i+1][l][j-1][0][0][0]+dp[i][j+1][r][0][1][1]+(l>1?(!((L[l-1]^L[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][1][0][0],dp[i+1][l][j-1][1][0][0]+dp[i][j+1][r][0][0][1]+(l>1?(!((R[l-1]^L[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][1][1][0],dp[i+1][l][j-1][1][0][0]+dp[i][j+1][r][0][1][1]+(l>1?(!((R[l-1]^L[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][0][0][1],dp[i+1][l][j-1][0][0][0]+dp[i][j+1][r][0][0][1]+(l>1?((L[l-1]^L[j])>>i&1)*a[i]:0));
				W(dp[i][l][r][0][1][1],dp[i+1][l][j-1][0][0][0]+dp[i][j+1][r][0][1][1]+(l>1?((L[l-1]^L[j])>>i&1)*a[i]:0));
				W(dp[i][l][r][1][0][1],dp[i+1][l][j-1][1][0][0]+dp[i][j+1][r][0][0][1]+(l>1?((R[l-1]^L[j])>>i&1)*a[i]:0));
				W(dp[i][l][r][1][1][1],dp[i+1][l][j-1][1][0][0]+dp[i][j+1][r][0][1][1]+(l>1?((R[l-1]^L[j])>>i&1)*a[i]:0));
				
			}
			if(tgR[j][i])
			{
				W(dp[i][l][r][0][0][0],dp[i+1][l][j-1][0][1][0]+dp[i][j+1][r][1][0][1]+(l>1?(!((L[l-1]^R[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][0][1][0],dp[i+1][l][j-1][0][1][0]+dp[i][j+1][r][1][1][1]+(l>1?(!((L[l-1]^R[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][1][0][0],dp[i+1][l][j-1][1][1][0]+dp[i][j+1][r][1][0][1]+(l>1?(!((R[l-1]^R[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][1][1][0],dp[i+1][l][j-1][1][1][0]+dp[i][j+1][r][1][1][1]+(l>1?(!((R[l-1]^R[j])>>i&1))*a[i]:0));
				W(dp[i][l][r][0][0][1],dp[i+1][l][j-1][0][1][0]+dp[i][j+1][r][1][0][1]+(l>1?((L[l-1]^R[j])>>i&1)*a[i]:0));
				W(dp[i][l][r][0][1][1],dp[i+1][l][j-1][0][1][0]+dp[i][j+1][r][1][1][1]+(l>1?((L[l-1]^R[j])>>i&1)*a[i]:0));
				W(dp[i][l][r][1][0][1],dp[i+1][l][j-1][1][1][0]+dp[i][j+1][r][1][0][1]+(l>1?((R[l-1]^R[j])>>i&1)*a[i]:0));
				W(dp[i][l][r][1][1][1],dp[i+1][l][j-1][1][1][0]+dp[i][j+1][r][1][1][1]+(l>1?((R[l-1]^R[j])>>i&1)*a[i]:0));
			}
		}
	}printf("%lld\n",dp[0][1][n][0][0][0]);return 0;
}