#include "bits/stdc++.h"
using namespace std;
// add your library with double quotation #include"" here.
// #include "atcoder/all"
// using namespace atcoder;

// define your macros here.
// #define REP(a,b) for(long long a = 0;a < b;++a)

using namespace std;
typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))
#define ALL(x) (x).begin(),(x).end()

#define int ll
void solve() {
    int n, k;
    cin >> n >> k;
    int cnter = 1;
    REP(i, n - 1) {
        cnter *= 2;
        if (cnter > k) break;
    }
    if (cnter < k) {
        cout << -1 << endl;
        return;
    }
    int itring = 1;
    k--;
    while (itring <= n) {
        for (int q = 1;; ++q) {
            int cnter = 1;
            REP(t, n - itring - q) {
                cnter *= 2;
                if (cnter > k) break;
            }
            if (cnter <= k) {
                //ok
                k -= cnter;
            }
            else {
                //expe.
                for (int j = q-1; j >= 0; --j) {
                    cout << itring + j << " ";
                }
                itring += q;
                break;
            }
        }
    }
    cout << endl;
    return;
}
#undef int

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    cout << fixed << setprecision(100);
    int t = 1;
    cin >> t;
    REP(test, t) {
        solve();
    }
    return 0;
}