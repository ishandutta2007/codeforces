/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author alireza_kaviani
 */

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define Mp                          make_pair
#define sep                         ' '
#define endl                        '\n'
#define debug(x)                    cerr << #x << " = " << x << endl
#define SZ(x)                       ll(x.size())
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n, p, k, mx, A[MAXN], B[MAXN], C[MAXN];
pll hair[MAXN];
pair<ll, pll> order[MAXN];
vector<ll> ans;

int main() {
    fast_io;

    cin >> n >> p >> k;
    for (ll i = 1; i <= n; i++) {
        cin >> A[i] >> B[i];
        order[i] = {-B[i], {A[i], i}};
    }
    sort(order + 1, order + n + 1);
    for (ll i = 1; i <= n; i++) B[i] = -order[i].X, A[i] = order[i].Y.X, C[i] = order[i].Y.Y;

    for (ll i = 1; i <= n - (p - k); i++) hair[i] = {-A[i], i};
    sort(hair + 1, hair + 1 + n - p + k);
    for (ll i = 1; i <= k; i++) {
        mx = max(mx, hair[i].Y);
        ans.push_back(C[hair[i].Y]);
    }
    for (ll i = 1; i <= p - k; i++) {
        ans.push_back(C[i + mx]);
    }

    for (ll i : ans) cout << i << sep;

    return 0;
}
/*

*/