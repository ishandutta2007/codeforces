let xint() = Scanf.scanf " %d" (fun x -> x)

let () =
  let rec find a l r x =
    let m = (l + r) / 2 in
    if a.(m) = x then m
    else (
      if a.(m) < x then (find a (m + 1) r x)
      else (find a l (m - 1) x)
    )
  in

  let min x y =
    if x < y then x
    else y
  in

  let n = xint() in
  let a = Array.make n 0 in
  let xs = Array.make n 0 and m = ref 0 in

  for i = 0 to n - 1 do
    a.(i) <- xint();
    xs.(i) <- a.(i);
  done;
  Array.sort (fun x y -> x - y) xs;
  m := 1;
  for i = 1 to n - 1 do
    if xs.(i) != xs.(i - 1) then (
      xs.(!m) <- xs.(i);
      m := !m + 1;
    )
  done;

  let nx = Array.make n n and pos = Array.make !m n in

  for i = n - 1 downto 0 do
    a.(i) <- find xs 0 (!m - 1) a.(i);
    nx.(i) <- pos.(a.(i));
    pos.(a.(i)) <- i;
  done;

  let l = Array.make n 0 and r = Array.make n 0 in
  let ret = ref 0 and i = ref 0 in
  while !i < n do
    let x = !i and y = ref nx.(!i) in
    while !i < !y do
      y := min !y nx.(!i);
      i := !i + 1;
    done;
    if !y != n then (
      l.(!ret) <- x + 1;
      r.(!ret) <- !y + 1;
      ret := !ret + 1;
    );
    if !y = n && x != 0 then (
      r.(!ret - 1) <- n;
    );
    i := !i + 1;
  done;

  if !ret = 0 then (
    Printf.printf "-1\n";
  ) else (
    Printf.printf "%d\n" !ret;
    for i = 0 to !ret - 1 do
      Printf.printf "%d %d\n" l.(i) r.(i);
    done;
  )