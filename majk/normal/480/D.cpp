/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author majk
 */

#ifndef MAJK_LIB
#define MAJK_LIB

#include <vector>
#include <stack>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <iomanip>
#include <set>
#include <functional>
#include <fstream>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <string>
#include <sstream>
#include <queue>
#include <bitset>
using namespace std;

#define x first
#define y second
typedef std::pair<int,int> pii; typedef long long ll; typedef unsigned long long ull; typedef unsigned int ui; typedef pair<ui,ui> puu;

template <typename T, typename U> std::istream&operator>>(std::istream&i, pair<T,U>&p) {i >> p.x >> p.y; return i;}
template<typename T>std::istream&operator>>(std::istream&i,vector<T>&t) {for(auto&v:t){i>>v;}return i;}
template <typename T, typename U> std::ostream&operator<<(std::ostream&o, const pair<T,U>&p) {o << p.x << ' ' << p.y; return o;}
template<typename T>std::ostream&operator<<(std::ostream&o,const vector<T>&t) {if(t.empty())o<<'\n';for(size_t i=0;i<t.size();++i){o<<t[i]<<" \n"[i == t.size()-1];}return o;}
template<typename T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> using maxheap = priority_queue<T, vector<T>, less<T>>;
template <typename T> bool in(T a, T b, T c) { return a <= b && b < c; }
ui logceil(int x) { return 8*sizeof(int)-__builtin_clz(x); }

namespace std { template<typename T,typename U>struct hash<pair<T,U>>{hash<T>t;hash<U>u;size_t operator()(const pair<T,U>&p)const{return t(p.x)^(u(p.y)<<7);}}; }
template<typename T,typename F>T bsh(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){l=m+1;r=m;}else{h=m-1;}}return r;}
template<typename F> double bshd(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){l=m;}else{h=m;}}return (l+h)/2;}
template<typename T,typename F>T bsl(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){h=m-1;r=m;}else{l=m+1;}}return r;}
template<typename F> double bsld(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){h=m;}else{l=m;}}return (l+h)/2;}
template<typename T> T gcd(T a,T b) { if (a<b) swap(a,b); return b?gcd(b,a%b):a; }

template<typename T>class vector2:public vector<vector<T>>{public:vector2(){} vector2(size_t a,size_t b,T t=T()):vector<vector<T>>(a,vector<T>(b,t)){}};
template<typename T>class vector3:public vector<vector2<T>>{public:vector3(){} vector3(size_t a,size_t b,size_t c,T t=T()):vector<vector2<T>>(a,vector2<T>(b,c,t)){}};
template<typename T>class vector4:public vector<vector3<T>>{public:vector4(){} vector4(size_t a,size_t b,size_t c,size_t d,T t=T()):vector<vector3<T>>(a,vector3<T>(b,c,d,t)){}};
template<typename T>class vector5:public vector<vector4<T>>{public:vector5(){} vector5(size_t a,size_t b,size_t c,size_t d,size_t e,T t=T()):vector<vector4<T>>(a,vector4<T>(b,c,d,e,t)){}};


#endif
// #include "../l/mod.h"

class Parcels {
public:

    struct Parc {
        int i, o, w, s, v;
    };

void solve(istream& cin, ostream& cout) {
    int N, S; cin >> N >> S;
    vector<Parc> P(N+1);
    for (int i = 0; i < N; ++i) {
        cin >> P[i].i >> P[i].o >> P[i].w >> P[i].s >> P[i].v;
    }
    P[N].i = 0;
    P[N].o = 2*N;
    P[N].w = 0;
    P[N].s = S;
    P[N].v = 0;

    sort(P.begin(),P.end(),[](const Parc&a, const Parc&b) { return a.o < b.o || (a.o == b.o && a.i > b.i); });

    vector2<int> V(N+1, S+1, 0);
    vector<int> Z(2*N+1, 0), O(N), I(N), C(N), Q;

    for (int i = 0; i <= N; ++i) {

        Q.clear();
        for (int j = 0; j < i; ++j) {
            if (P[j].i >= P[i].i && P[j].o <= P[i].o) {
                Q.push_back(j);
            }
        }
        sort(Q.begin(),Q.end(),[&](int a, int b) { return P[a].i < P[b].i; });

        for (int i = 0; i < Q.size(); ++i) {
            O[i] = P[Q[i]].o;
            I[i] = P[Q[i]].i;
            C[i] = P[Q[i]].s + P[Q[i]].w;
        }

        fill(Z.begin() + P[i].i, Z.begin() + P[i].o + 1, 0);
        for (int s = 0; s <= S - P[i].w; ++s) {
            int k = 0;
            for (int t = P[i].i; t < P[i].o; ++t) {
                while (k < Q.size() && I[k] == t) {
                    Z[O[k]] = max(Z[O[k]], Z[t] + V[Q[k]][min(s, C[k])]);
                    ++k;
                }
                Z[t+1] = max(Z[t+1], Z[t]);
            }

            V[i][s + P[i].w] = Z[P[i].o] + P[i].v;
        }
    }

    cout << V[N][S] << endl;
}
};


int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	Parcels solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
    return 0;
}