/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: AmShZ6
 * Time: 2020-05-16 16:05:01
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 1e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll q , n;
vector<ll> vec , temp , pr[MAXN] , p[MAXN] , primes;

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    for(int i = 1 ; i <= 10 ; i++)  vec.push_back(i * 100);
    for(int i = 2 ; i < 680 ; i++){
        ll ok = 1;
        for(int j = 2 ; j < i ; j++)    if(i % j == 0)  ok = 0;
        if(ok == 0) continue;
        primes.push_back(i);
    }
    primes.push_back(INF + 1);
    cin >> q;
    while(q--){
        n = 1;
        /*for(ll i = 0 ; i < 10 ; i++)    p[i] = pr[i];
        for(ll i = 0 ; i < 17 ; i++){
            ll cur = 1;
            for(ll j = 0 ; j < 10 ; j++){
                if(SZ(p[j])){
                    cur *= p[j].back();
                    p[j].pop_back();
                }
            }
            cout << "? " << cur << endl;
            cout.flush();
            cin >> cur;
            n *= cur;
        }*/
        ll cur = 1 , cnt = 0;
        for(ll i : primes){
            if(INF / i < cur){
                cout << "? " << cur << endl;
                cout.flush();
                cin >> cur;
                n *= cur;
                cur = 1;
                cnt++;
            }
            cur *= i;
        }
        //cout << cnt << endl;
        for(ll i = 0 ; i < 5 ; i++){
            cout << "? " << n * n << endl;
            cout.flush();
            cin >> n;
        }
        ll d = 0;
        for(ll i = 1 ; i * i <= n ; i++){
            if(n % i == 0){
                d++;
                if(i * i != n)  d++;
            }
        }
        cout << "! " << max(8ll , d * 2) << endl;
        cout.flush();
    }

    return 0;
}
/*

*/