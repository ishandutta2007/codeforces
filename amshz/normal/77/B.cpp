/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Parsa Bahrami
 */

#pragma GCC optimize("O2")

#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

typedef long long int ll;
typedef long double ld;
typedef pair<ll, ll> pll;

template<class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;

#define sz(x)                       (ll) x.size()
#define all(x)                      (x).begin(),(x).end()
#define F                           first
#define S                           second

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll INF = 8e18;
const ll MOD = 1e9 + 7;
ll q;

int main() {
    scanf("%lld", &q);
    while (q--) {
        double a, b;
        cin >> a >> b;
        if (b == 0) {
            printf("%.15f\n", 1.0);
        } else if (a == 0) {
            printf("%.15f\n", 0.5);
        } else if (a > b * 4) {
            printf("%.15f\n", 1 - b / a);
        } else {
            printf("%.15f\n", 1 - (b + b - a / 4) / (4 * b));
        }
    }
    return 0;
}