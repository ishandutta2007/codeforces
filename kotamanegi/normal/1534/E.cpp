#line 1 "Contests/Codeforces_1534/E/main.cpp"
using namespace std;
#line 2 "library/bits/stdc++.h"

// C
#ifndef _GLIBCXX_NO_ASSERT
#include <cassert>
#endif
#include <cctype>
#include <cerrno>
#include <cfloat>
#include <ciso646>
#include <climits>
#include <clocale>
#include <cmath>
#include <csetjmp>
#include <csignal>
#include <cstdarg>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>

#if __cplusplus >= 201103L
#include <ccomplex>
#include <cfenv>
#include <cinttypes>
#include <cstdbool>
#include <cstdint>
#include <ctgmath>
#include <cwchar>
#include <cwctype>
#endif

// C++
#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>

#if __cplusplus >= 201103L
#include <array>
#include <atomic>
#include <chrono>
#include <condition_variable>
#include <forward_list>
#include <future>
#include <initializer_list>
#include <mutex>
#include <random>
#include <ratio>
#include <regex>
#include <scoped_allocator>
#include <system_error>
#include <thread>
#include <tuple>
#include <typeindex>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>
#endif
#line 3 "Contests/Codeforces_1534/E/main.cpp"

// add your library with double quotation #include"" here.
// define your macros here.
using namespace std;
typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))
#define ALL(x) (x).begin(),(x).end()

#define int long long
pair<int,int> dp[1000];
void solve(){
    // write your solution here.
    int n,k;
    cin >> n >> k;
    REP(i,n+1){
        dp[i] = mp(1e18,-1);
    }
    dp[0] = mp(0,-1);
    queue<int> nexts;
    nexts.push(0);
    while(nexts.empty() == false){
        int now = nexts.front();
        nexts.pop();
        for(int t = 0;t <= k;++t){
            int next = k - 2 * t + now;
            int use_bad = k - t;
            int use_next = t;
            if(use_bad + now > n) continue;
            if(next < 0) continue;
            if(use_next > now) continue;
            if(dp[next].first == 1e18){
                dp[next] = mp(dp[now].first + 1,now);
                nexts.push(next);
            }
        }
    }
    if(dp[n].first == 1e18){
        cout << "-1" << endl;
        return;
    }
    vector<int> ways;
    int now = n;
    while(now != 0){
        ways.push_back(now);
        now = dp[now].second;
    }
    ways.push_back(0);
    reverse(ALL(ways));
    int ans = 0;
    vector<int> ok;
    vector<int> bad;
    REP(i,n){
        bad.push_back(i+1);
    }
    for(int i = 1;i < ways.size();++i){
        int use_bad = (ways[i] - ways[i-1] + k) / 2;
        int use_ok = k - use_bad;
        vector<int> next_ok;
        vector<int> next_bad;
        REP(i,ok.size() - use_ok){
            next_ok.push_back(ok[i]);
        }
        REP(i,bad.size() - use_bad){
            next_bad.push_back(bad[i]);
        }
        cout << "?";
        for(int i = ok.size()-use_ok;i < ok.size();++i){
            cout << " " << ok[i];
            next_bad.push_back(ok[i]);
        }
        for(int i = bad.size()-use_bad;i < bad.size();++i){
            cout << " " << bad[i];
            next_ok.push_back(bad[i]);
        }
        cout << endl;
        int tmp;
        cin >> tmp;
        ans ^= tmp;
        ok = next_ok;
        bad = next_bad;
    }
    cout << "! " << ans << endl;
}
#undef int

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    // Fasterize input/output script
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(100);
    // scanf/printf user should delete this fasterize input/output script

    int t = 1;
    //cin >> t; // comment out if solving multi testcase
    for(int testCase = 1;testCase <= t;++testCase){
        solve();
    }
    return 0;
}