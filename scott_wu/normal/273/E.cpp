#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>
#include <algorithm>
#include <vector>
#include <cmath>
#include <queue>
#include <map>
#include <set>

using namespace std;
typedef long long ll;
const int MAXN = 1100;
const ll MOD = 1000000007;

int N;
ll P;
ll sum[3];
ll dp[MAXN][4];

int sval[110] = 
{1, 3, 4, 5, 7, 9, 13, 15, 19, 27, 39, 40, 57, 58, 81, 85, 120, 121, 174, 179, 255, 260, 363, 382, 537, 544, 780, 805, 1146, 1169, 1632, 1718, 2415, 2447, 3507, 3622, 5154, 5260, 7341, 7730, 10866, 11011, 15780, 16298, 23190, 23669, 33033, 34784, 48894, 49549, 71007, 73340, 104352, 106510, 148647, 156527, 220020, 222970, 319530, 330029, 469581, 479294, 668910, 704371, 990087, 1003364, 1437882, 1485130, 2113113, 2156822, 3010092, 3169669, 4455390, 4515137, 6470466, 6683084, 9509007, 9705698, 13545411, 14263510, 20049252, 20318116, 29117094, 30073877, 42790530, 43675640, 60954348, 64185794, 90221631, 91431521, 131026920, 135332446, 192557382, 196540379, 274294563, 288836072, 405997338, 411441844, 589621137, 608996006, 866508216, 884431705, 1000000001};
int rval[110] = 
{0, 1, 2, 1, 2, 0, 1, 2, 0, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2, 1};
int nc = 103;

int main()
{
	sum[0] = sum[1] = sum[2] = 0;
	
	cin >> N >> P;
	for (int i = 0; i < 110; i++)
	{
		if (sval[i+1] >= P)
			sval[i+1] = P;
		sum[rval[i]] += ((ll) (sval[i+1] - sval[i]) * ((ll) 2 * P - sval[i] - sval[i+1] + 1)) / 2LL;
		sum[rval[i]] %= MOD;
		
		if (sval[i+1] >= P)
			break;
	}
	
	for (int i = 0; i < MAXN; i++)
		for (int j = 0; j < 4; j++)
			dp[i][j] = 0;
	
	dp[0][0] = 1;
	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < 4; j++)
			for (int k = 0; k < 3; k++)
			{
				int next = j ^ k;
				dp[i+1][next] = (dp[i+1][next] + dp[i][j] * sum[k]) % MOD;
			}
	}
	
	ll ans = 0;
	for (int i = 1; i < 4; i++)
		ans += dp[N][i];
	ans %= MOD;
	cout << ans << "\n";
	return 0;
}