#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
int dp[2000][2000];
void solve()
{
  int n, l, k;
  cin >> n >> l >> k;
  vector<int> D, A;
  REP(i,n){
    int a;
    cin >> a;
    D.push_back(a);
  }
  D.push_back(l);
  REP(i, n)
  {
    int a;
    cin >> a;
    A.push_back(a);
  }
  REP(i,600){
    REP(q,600){
      dp[i][q] = 1e18;
    }
  }
  REP(i,600){
    dp[0][i] = 0;
  }
  for (int i = 1; i <= n;++i){
    for (int q = 0; q < i;++q){
      int ranges = D[i] - D[q];
      int costs = ranges * A[q];
      REP(t, k + 1)
      {
        dp[i][t + (i - q - 1)] = min(dp[i][t + (i - q - 1)], dp[q][t] + costs);
      }
    }
  }
  cout << dp[n][k] << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main() {
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase) {
    solve();
  }
  return 0;
}