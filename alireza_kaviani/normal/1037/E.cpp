/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define Mp                          make_pair
#define tab                         '\t'
#define sep                         ' '
#define endl                        '\n';
#define debug(x)                    cerr << #x << " = " << x << endl
#define SZ(x)                       ll(x.size())
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define file_io                     freopen("in.txt" , "r+" , stdin) ; freopen("out.txt" , "w+" , stdout);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());

inline ll input() {
    ll n;
    cin >> n;
    return n;
}

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

set_random;

const ll MAXN = 2e5 + 10;
const ll INF = 8e18;
const ll MOD1 = 998244353;
const ll MOD2 = 1e9 + 7;
const ll MOD3 = 1e9 + 9;

vector<ll> adj[MAXN];
vector<ll> ans;
vector<pll> E;
ll n, m, k, v, u, deg[MAXN];
set<pll> st;
map<pll, ll> mark;

void sub(ll v);
void del(ll v);

void sub(ll v)
{
    if (st.find({deg[v], v}) != st.end()) {
        st.erase({deg[v], v});
        deg[v]--;
        if (deg[v] >= k) st.insert({deg[v], v});
        else del(v);
    }
}

void del(ll v)
{
    for (ll u : adj[v])
    {
        if (!mark[{v, u}])
        {
            mark[{v, u}] = mark[{u, v}] = 1;
            sub(u);
        }
    }
}

int main(){
    fast_io;

    cin >> n >> m >> k;
    for (ll i = 0; i < m; i++)
    {
        cin >> v >> u;
        adj[v].push_back(u);
        adj[u].push_back(v);
        E.push_back({u, v});

        deg[v]++;
        deg[u]++;
    }

    for (ll i = 1; i <= n; i++) st.insert({deg[i], i});
    for (ll i = 1; i <= n; i++)
    {
        if (deg[i] < k)
        {
            st.erase({deg[i] , i});
            deg[i] = 0;
            del(i);
        }
    }

    ans.push_back(st.size());
    for (ll i = E.size() - 1 ; i >= 1 ; i--)
    {
        v = E[i].X, u = E[i].Y;
        if (!mark[{v, u}])
        {
            mark[{v, u}] = mark[{u, v}] = 1;
            sub(v);
            sub(u);
        }
        ans.push_back(st.size());
    }

    for (ll i = ans.size() - 1; i >= 0; i--) cout << ans[i] << endl;

    return 0;
}