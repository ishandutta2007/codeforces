/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-05-26 13:06:50
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e7 + 10;
const ll LOG = 32;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

int n , trieInd , nxt[MAXN][2] , val[MAXN];

void insert(int x , int v){
    int cur = 0;
    for(int i = LOG - 1 ; i >= 0 ; i--){
        int V = 0;
        if(x & (1ll << i))  V = 1;
        if(nxt[cur][V] == 0)  nxt[cur][V] = ++trieInd;
        val[cur] += v;
        cur = nxt[cur][V];
    }
    val[cur] += v;
}

int get(int x){
    int cur = 0 , ans = 0;
    for(int i = LOG - 1 ; i >= 0 ; i--){
        int V = 0 ;
        if(x & (1ll << i))  V = 1;
        if(nxt[cur][1 - V] != 0 && val[nxt[cur][1 - V]] != 0){
            cur = nxt[cur][1 - V];
            ans += (1ll << i);
        }
        else    cur = nxt[cur][V];
        //cout << cur << V << sep;
    }
    //cout << endl;
    return ans;
}

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n;
    insert(0 , 1);
    while(n--){
        string s; int x;
        cin >> s >> x;
        if(s == "+")    insert(x , 1);
        if(s == "-")    insert(x , -1);
        if(s == "?")    cout << get(x) << endl;
    }

    return 0;
}
/*

*/