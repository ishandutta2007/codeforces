#include <bits/stdc++.h>

using namespace std;

/*
%%%%=%%=%=%%%%%%%%%%%%%%%%%%%%@@@%@@%%%%%%%%==%%@@@@@%%%%%%@%%%%%%%%%%%%%%%%%
%%%+%@@%%%%=%@%%%%%@@@@@@%@@@@@@%@@@@@%@%@%%%%%%@@@##@@@@%@@@@%%%%@@@%%%%%%%%
@%=+=@@@%%++%%%%%%%%%%%%%%%%%%@%=%%%%%%%%%%%%%%%%%@@@%%%%=%=@@@%%%%%==%=%%%%=
%%==%%@@%*+=%@@@@@%@@@@@@%@@@%@@%@@@@@@@%%@@@@%%%@@@@@@#@%%%@%@@%%%%%%%%%%%%%
@@==%@@%@%@%%%@@@@@@@@@@@%@@%%@%=@@@@@%%%%@@@@@@@@@@#@@@@@@@@@@@%%%@@%%%%%==%
@%%%%@@@%%@@@%@@@@@@@%%%@%%%%=+++===+====%==%@@@@@@=%@=%%=@@#@##@@@@%%%@@@%%%
@@==*@@@@@@@@@@@@@@@@@%%@===%===========++++=++=%@%==%%=@%@@@##@@#@@@%@%@%%%%
#@=+=++=%%@@@@@@@@@@@@@%====%%%=%====%=%%%====++=+%==@@=+=@@@##%%@@@%%%%%@@%@
===++*%@@#@@@@@@@@@@@@==@%%%%%%%@@@@@#@@@@@#%@#@%=+====+==@@@%+%%%%%=%%%@@@@#
%%=+==*@@%=@%@%%===@@@@#%@@@@@@@###@@##@@@@######%=====%%%@%+=+=%==%=%==@@@%%
=++++=++==+===+===%@@@@@@@################@######@%=+==%=%@+++====@%==+=%%%%%
@%=====+======+=+++%%%@@%%@%%=+******+===%%@@%%@@@@===%+%+++*%%%=%@@%==%%%==%
%%======%%=%==+==+%@@@%@@%=*::::::::::**********+%@%=========%%%%=++=====%=%#
%%%=%%%%=%====%%=====@@@@@+:::::::::::::******::*=@%==%%=%===@%%%=======%%%%@
%%=%=%%%%%====%%%%====%@@%+::::::::::::::********+@%==%%%==+%%%%%%%%=%%%%%%%=
%@%@@@%======%========%@@%*:::::::::::::::::::****=@%===%%%%%%===%%%%@=%%%=++
#@@@@%%==%%@%%=%==%=::=@@*:::::::::***:*******:::**@=:+%@%%%%%%%%%@@@@==+=+++
@@@@%%%%%%%%%=%@##@%%++%%::*==%%@@@@=***=%##@@%%=**%=%=%%%%%%=+==%@%%%%%%==%=
@%%@@@@%=@%%====%@@@=+===:*+%@@@#%%%=*:*%@%##@@@%+:====%%%%@@%+=%+%@%=%%+=%==
@@#@@@@@%#@@%@@@%%@@@+***::::*++==+**:::++====+**::++%%%===%@%%=%%%=+=%%%%===
@%%%@@@%%%%@%@%%%@@#@@+**::---::::::::::*::::::::::*=%@@%%%@%%%%@%@@@@@@%%%==
##@@@@@%@%@@@##@@@@@@@#=+:::---::*+::--::*+*::::::*+%%%%%=%@%%@@%@@@@#@@@%%%%
###@%%@@%%%%%%@##@@##@@#@*:*::**++*+=+*+=++++*****+=%%%%@%@%%@@@@@@@#@@@%%%=%
###@##@@@%%%@@####@#@##%%+****+++****+==+++++=+++*=%%=%%%@@##@@@@@%@@%%==%@@=
###@@#@@@@%%%@####@@%%@@%%****+=%%=========%=++++=%%%@@%%%@###@@@@@@@@@@@@%%%
####@@@@@@@@%@@%@====+==%%@=++++***+++=+=++++===@@%%%%=%%%@@##@@#@@###@@@@@@@
###@@@###@@@%%====++++==%%%%*+++*+==%%%%%=++====%=%%@%@@@#@@@@@%@@@#@@@@@@%%%
#########@@##%===++++=@=+==%**+++********++==++%%%%%%@@%%%@####@@@@#@##@@@%@@
#####@#@@#@%=++=++++++=%=%%%***++======%%%==+++@@==%@@@%%@@@@#%@@@@@#@@@@%@@@
###@#@###@@%====+==+++=%@%@=***+++==%%%%===+++=#@@%%%%=%@@#@##@@%@@@#@@@@@#@@
#@@%@@@###@@%==+===%%=%@@%@=*****++++===+++++=##@@@@%@@%==+=%@@@@@###@@@@%@%%
@@###@#%%=======%%%%%%%@@@@=*******+++++++*++%##@@@@%@@%@@%=====%@@@@@@@@%%%%
##@%#%===%%%%%%%%@#%%@@@@@@%*::::****++*****+@##@@@%%@@@%%@@@%=====%%%%%%%%%%
@@@===%%%%%%%%%@@##@@@@@@@#@@@%+:::::::::::*%##@@@@@@@@@%%@@@@@%%%%====%%%%%%
@===%%%%%%%@@@@###@#@@@#@@#@@@@@@@@@@@@@@@@@###@@@@@@@##@%@@@@@@%%%%%========
=%%%%%%@@@@@@@###@##@@@@@@#@@@@###@####@########@#@@@@@#@@@@#@@@@@@%%%%%%===+
%%%%@@@@@@@@####@##@@@@@@##@@@@@%@##@@@@@@@##@@#@@@@@@@#@@@@@@@@@%%@@@%%%====
@@@###@@@######@##@@@@@###@@@%@@@%%%@@@@@@@%@@@@@@@@@@@##@%##@@@@@@@@@#@@%+==
@@#####@######@##@@@@@@@+-*%=*+==%%%%%%%%@@@%@@@@@@@@@@@#@%@####@@#####@@%=++
@############@@##@@@@@@%@:%:-*++:-*%%%%%%%@@%@@@@@@@@@@@#@@@@####@######@%===
@###########@@##@@@@@@%@%%%--+%%*-:%%%%%%%%@@%@@@@@@@@@@@@@@@###########@%=+=
###############@@@@@@%@%%%%--:+%%%%%%%%%%%%@@@@@@@@@@@@@#@@@@###########@%%==
@##########@###@@@@@%@%%%%%%=*:---=%%%%%%%%%@@@@@@@@@@@@@@@@@###########@%==+
###############@@##@@@@%%%%%%%%%*-*%%%%%%%%%@@@@@@@@@@@@@@@@@###########@%%==
@#########@####@###@@@%%%%%-:=%%:-*%%%%%%%%%%@@@@@@@@@@@@#@@@###########@@%==
@########@########@:*%%@@@%--=%%:-*%%%%%%%%%%@@@@@@@@@@##@@@@###########@%%==
##################@%%@@@@@@%+*::-+%%%%@@%%%%%@@@@#@@@@##@#@@@############@%==
@#######@########%*++*++=%%%%@%@@@@@@@@@@@@@@@@###@@@##@@@@@@###########@@=+=
#################%**+:---%+----:@@%-----%:----*@@#@######@@@@@###########@==+
#######@########@%%:%*--@@@=----=%:---*%@%*--@@@@#######@@##@@###########@===
################@*@%@*-:@@@=----*+----+@@@:-:@@@#######@@@@@@@###########@===*/

main() {
    int n, l, r;
    int max = 0;
    cin >> n;
    int a[n];
    int b[n];
    for (int i = 0; i < n; i++){
        cin >> a[i];
    }
    for (int i = 0; i < n; i++){
        cin >> b[i];
    }
    for (int i = 0; i < n; i++){
        for (int j = i; j < n; j++){
            int kol = a[i];
            int kol1 = b[i];
            for(int x = i + 1; x <= j; x++){
                kol = kol | a[x];
            }
            for(int x = i + 1; x <= j; x++){
                kol1 = kol1 | b[x];
            }
            if (kol + kol1 > max){
                max = kol + kol1;
            }
        }
    }
    cout << max;
}