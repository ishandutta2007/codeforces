#include<bits/stdc++.h>

using namespace std;

const int maxN = 400;
set < int > s[maxN + 1], s2[maxN + 1];
const int dp[] = {0, 4, 10, 20, 35, 56, 83, 116, 155, 198, 244, 292, 341, 390, 439, 488, 537, 586, 635, 684, 733, 782, 831, 880, 929, 978, 1027, 1076, 1125, 1174, 1223, 1272, 1321, 1370, 1419, 1468
, 1517, 1566, 1615, 1664, 1713, 1762, 1811, 1860, 1909, 1958, 2007, 2056, 2105, 2154, 2203, 2252, 2301, 2350, 2399, 2448, 2497, 2546, 2595, 2644, 2693, 2742, 2791, 2840, 2889, 2938, 2987, 3036, 3085, 3134, 3183
, 3232, 3281, 3330, 3379, 3428, 3477, 3526, 3575, 3624, 3673, 3722, 3771, 3820, 3869, 3918, 3967, 4016, 4065, 4114, 4163, 4212, 4261, 4310, 4359, 4408, 4457, 4506, 4555, 4604, 4653, 4702, 4751, 4800, 4849, 4898
, 4947, 4996, 5045, 5094, 5143, 5192, 5241, 5290, 5339, 5388, 5437, 5486, 5535, 5584, 5633, 5682, 5731, 5780, 5829, 5878, 5927, 5976, 6025, 6074, 6123, 6172, 6221, 6270, 6319, 6368, 6417, 6466, 6515, 6564, 6613
, 6662, 6711, 6760, 6809, 6858, 6907, 6956, 7005, 7054, 7103, 7152, 7201, 7250, 7299, 7348, 7397, 7446, 7495, 7544, 7593, 7642, 7691, 7740, 7789, 7838, 7887, 7936, 7985, 8034, 8083, 8132, 8181, 8230, 8279, 8328
, 8377, 8426, 8475, 8524, 8573, 8622, 8671, 8720, 8769, 8818, 8867, 8916, 8965, 9014, 9063, 9112, 9161, 9210, 9259, 9308, 9357, 9406, 9455, 9504, 9553, 9602, 9651, 9700, 9749, 9798, 9847, 9896, 9945, 9994, 10043
, 10092, 10141, 10190, 10239, 10288, 10337, 10386, 10435, 10484, 10533, 10582, 10631, 10680, 10729, 10778, 10827, 10876, 10925, 10974, 11023, 11072, 11121, 11170, 11219, 11268, 11317, 11366, 11415, 11464, 11513, 11562, 11611, 11660, 11709, 11758
, 11807, 11856, 11905, 11954, 12003, 12052, 12101, 12150, 12199, 12248, 12297, 12346, 12395, 12444, 12493, 12542, 12591, 12640, 12689, 12738, 12787, 12836, 12885, 12934, 12983, 13032, 13081, 13130, 13179, 13228, 13277, 13326, 13375, 13424, 13473
, 13522, 13571, 13620, 13669, 13718, 13767, 13816, 13865, 13914, 13963, 14012, 14061, 14110, 14159, 14208, 14257, 14306, 14355, 14404, 14453, 14502, 14551, 14600, 14649, 14698, 14747, 14796, 14845, 14894, 14943, 14992, 15041, 15090, 15139, 15188
, 15237, 15286, 15335, 15384, 15433, 15482, 15531, 15580, 15629, 15678, 15727, 15776, 15825, 15874, 15923, 15972, 16021, 16070, 16119, 16168, 16217, 16266, 16315, 16364, 16413, 16462, 16511, 16560, 16609, 16658, 16707, 16756, 16805, 16854, 16903
, 16952, 17001, 17050, 17099, 17148, 17197, 17246, 17295, 17344, 17393, 17442, 17491, 17540, 17589, 17638, 17687, 17736, 17785, 17834, 17883, 17932, 17981, 18030, 18079, 18128, 18177, 18226, 18275, 18324, 18373, 18422, 18471, 18520, 18569, 18618
, 18667, 18716, 18765, 18814, 18863, 18912, 18961, 19010, 19059, 19108, 19157, 19206, 19255, 19304, 19353};

int main ()
{
//freopen ("input", "r", stdin);
//freopen ("output", "w", stdout);

/*for (int i=0; i<=maxN; i++)
    for (int j=0; i+j<=maxN; j++)
        for (int k=0; i+j+k<=maxN; k++)
            for (int p=0; i+j+k+p<=maxN; p++)
                s2[i + j + k + p].insert (i + 5 * j + 10 * k + 50 * p);
for (int a=0; a<=maxN; a++)
    for (int b=0; a + 5 * b<=maxN; b++)
        for (int c=0; a + 5 * b + 10 * c <= maxN; c++)
            for (int d=0; a + 5 * b + 10 * c + 50 * d <= maxN; d ++)
                s[a + 5 * b + 10 * c + 50 * d].insert (a + b + c + d);*/
/*for (int i=1; i<=maxN; i++)
{
    int prv = -1, l = -1;
    for (auto it : s[i])
    {
        if (it != prv + 1)
        {
            if (l != -1)
                printf ("[%2d, %2d] ", l, prv);
            l = it;
        }
        prv = it;
    }
    if (l != -1)
        printf ("[%2d, %2d] ", l, prv);
    printf ("\n");
}*/
/*for (int i=1; i<=maxN; i++)
    for (auto it : s[i])
        s2[it].insert (i);*/
//for (int i=1; i<=maxN; i++)
  //  printf ("%d\n", dp[i] - dp[i - 1]);
int N;
scanf ("%d", &N);
if (N <= 20) printf ("%d\n", dp[N]);
else printf ("%I64d\n", dp[20] + 49LL * (N - 20));
/*for (int i=1; i<=maxN; i++)
{
    int prv = -1, l = -1;
    for (auto it : s2[i])
    {
        if (it != prv + 1)
        {
            if (l != -1)
                printf ("[%2d, %2d] ", l, prv);
            l = it;
        }
        prv = it;
    }
    if (l != -1)
        printf ("[%2d, %2d] ", l, prv);
    printf ("\n");
}*/
return 0;
}