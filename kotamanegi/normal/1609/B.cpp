#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
void solve()
{
  int n, query;
  cin >> n >> query;
  string s;
  cin >> s;
  auto match = [&s](int index)
  {
    if (index < 0)
      return false;
    if (index + 2 >= s.length())
      return false;
    if (s[index] == 'a' and s[index + 1] == 'b' and s[index + 2] == 'c')
      return true;
    return false;
  };
  int ans = 0;
  REP(i, n)
  {
    ans += match(i);
  }
  REP(i, query)
  {
    int a;
    cin >> a;
    a--;
    string b;
    cin >> b;
    REP(q, 3)
    {
      ans -= match(a - q);
    }
    s[a] = b[0];
    REP(q, 3)
    {
      ans += match(a - q);
    }
    cout << ans << endl;
  }
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}