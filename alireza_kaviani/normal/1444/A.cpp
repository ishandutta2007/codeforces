/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-11-01 14:35:02
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll t , p , q;

int main() {
	ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

	cin >> t;
	while(t--){
		cin >> p >> q;
		if(p % q != 0){
			cout << p << endl;
			continue;
		}
		ll ans = 0;
		vector<pll> vec;
		for(ll i = 2 ; i * i <= q ; i++){
			if(q % i == 0){
				ll x = 1;
				while(q % i == 0){
					q /= i;
					x *= i;
				}
				vec.push_back({i , x});
			}
		}
		if(q > 1){
			vec.push_back({q , q});
		}
		for(pll i : vec){
			ll x = i.X , y = i.Y , cur = 1 , A = p;
			while(A % x == 0){
				A /= x;
			}
			ans = max(ans , A * y / x);
		}
		cout << ans << endl;
	}

    return 0;
}
/*

*/