/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define mp make_pair

using namespace std;

typedef long long int64;
typedef vector<int> vi;
typedef pair<int, int> ii;

class TaskA {
 public:
  void solveOne(istream &in, ostream &out) {
    int n;
    int k1;
    int k2;
    in >> n >> k1 >> k2;
    int m1 = 0;
    int m2 = 0;
    for (int i = 0; i < k1; ++i) {
      int a;
      in >> a;
      m1 = max(m1, a);
    }
    for (int i = 0; i < k2; ++i) {
      int a;
      in >> a;
      m2 = max(m2, a);
    }
    if (m1 > m2) {
      out << "YES\n";
    } else {
      out << "NO\n";
    }
  }

  void solve(std::istream &in, std::ostream &out) {
    int nt;
    in >> nt;
    for (int it = 0; it < nt; ++it) {
      solveOne(in, out);
    }
  }
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  TaskA solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}