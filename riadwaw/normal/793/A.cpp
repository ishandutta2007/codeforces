/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

class TaskA {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n, k;
		in >> n >> k;
		vector<int> a(n);
		int64_t time = 0;

		for (int i = 0; i < n; ++i) {
			in >> a[i];
		}


		int mn = *min_element(a.begin(), a.end());
		for (int i = 0; i < n; ++i) {
			if ((a[i] - mn) % k) {
				out << -1;
				return;;
			}
			time += (a[i] - mn) / k;
		}

		out << time << "\n";
	}
};


int main() {
	std::ios_base::sync_with_stdio(false);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	in.tie(nullptr);
	out << std::fixed;
	out.precision(20);
	solver.solve(in, out);
	return 0;
}