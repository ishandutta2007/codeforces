#include <bits/stdc++.h>

using namespace std;

int n;
int a[20][20];

int go(int u, int v) {
  scanf("%d", &a[u][v]);
  (v < n ? go(u, v + 1) : 1);
  (u < n && v == n ? go(u + 1, 1) : 1);
  return 0;
}

int dis(int u) {
a[1][1] = min(a[1][1], a[1][u] + a[u][1]);
a[1][2] = min(a[1][2], a[1][u] + a[u][2]);
a[1][3] = min(a[1][3], a[1][u] + a[u][3]);
a[1][4] = min(a[1][4], a[1][u] + a[u][4]);
a[1][5] = min(a[1][5], a[1][u] + a[u][5]);
a[1][6] = min(a[1][6], a[1][u] + a[u][6]);
a[1][7] = min(a[1][7], a[1][u] + a[u][7]);
a[1][8] = min(a[1][8], a[1][u] + a[u][8]);
a[1][9] = min(a[1][9], a[1][u] + a[u][9]);
a[1][10] = min(a[1][10], a[1][u] + a[u][10]);
a[2][1] = min(a[2][1], a[2][u] + a[u][1]);
a[2][2] = min(a[2][2], a[2][u] + a[u][2]);
a[2][3] = min(a[2][3], a[2][u] + a[u][3]);
a[2][4] = min(a[2][4], a[2][u] + a[u][4]);
a[2][5] = min(a[2][5], a[2][u] + a[u][5]);
a[2][6] = min(a[2][6], a[2][u] + a[u][6]);
a[2][7] = min(a[2][7], a[2][u] + a[u][7]);
a[2][8] = min(a[2][8], a[2][u] + a[u][8]);
a[2][9] = min(a[2][9], a[2][u] + a[u][9]);
a[2][10] = min(a[2][10], a[2][u] + a[u][10]);
a[3][1] = min(a[3][1], a[3][u] + a[u][1]);
a[3][2] = min(a[3][2], a[3][u] + a[u][2]);
a[3][3] = min(a[3][3], a[3][u] + a[u][3]);
a[3][4] = min(a[3][4], a[3][u] + a[u][4]);
a[3][5] = min(a[3][5], a[3][u] + a[u][5]);
a[3][6] = min(a[3][6], a[3][u] + a[u][6]);
a[3][7] = min(a[3][7], a[3][u] + a[u][7]);
a[3][8] = min(a[3][8], a[3][u] + a[u][8]);
a[3][9] = min(a[3][9], a[3][u] + a[u][9]);
a[3][10] = min(a[3][10], a[3][u] + a[u][10]);
a[4][1] = min(a[4][1], a[4][u] + a[u][1]);
a[4][2] = min(a[4][2], a[4][u] + a[u][2]);
a[4][3] = min(a[4][3], a[4][u] + a[u][3]);
a[4][4] = min(a[4][4], a[4][u] + a[u][4]);
a[4][5] = min(a[4][5], a[4][u] + a[u][5]);
a[4][6] = min(a[4][6], a[4][u] + a[u][6]);
a[4][7] = min(a[4][7], a[4][u] + a[u][7]);
a[4][8] = min(a[4][8], a[4][u] + a[u][8]);
a[4][9] = min(a[4][9], a[4][u] + a[u][9]);
a[4][10] = min(a[4][10], a[4][u] + a[u][10]);
a[5][1] = min(a[5][1], a[5][u] + a[u][1]);
a[5][2] = min(a[5][2], a[5][u] + a[u][2]);
a[5][3] = min(a[5][3], a[5][u] + a[u][3]);
a[5][4] = min(a[5][4], a[5][u] + a[u][4]);
a[5][5] = min(a[5][5], a[5][u] + a[u][5]);
a[5][6] = min(a[5][6], a[5][u] + a[u][6]);
a[5][7] = min(a[5][7], a[5][u] + a[u][7]);
a[5][8] = min(a[5][8], a[5][u] + a[u][8]);
a[5][9] = min(a[5][9], a[5][u] + a[u][9]);
a[5][10] = min(a[5][10], a[5][u] + a[u][10]);
a[6][1] = min(a[6][1], a[6][u] + a[u][1]);
a[6][2] = min(a[6][2], a[6][u] + a[u][2]);
a[6][3] = min(a[6][3], a[6][u] + a[u][3]);
a[6][4] = min(a[6][4], a[6][u] + a[u][4]);
a[6][5] = min(a[6][5], a[6][u] + a[u][5]);
a[6][6] = min(a[6][6], a[6][u] + a[u][6]);
a[6][7] = min(a[6][7], a[6][u] + a[u][7]);
a[6][8] = min(a[6][8], a[6][u] + a[u][8]);
a[6][9] = min(a[6][9], a[6][u] + a[u][9]);
a[6][10] = min(a[6][10], a[6][u] + a[u][10]);
a[7][1] = min(a[7][1], a[7][u] + a[u][1]);
a[7][2] = min(a[7][2], a[7][u] + a[u][2]);
a[7][3] = min(a[7][3], a[7][u] + a[u][3]);
a[7][4] = min(a[7][4], a[7][u] + a[u][4]);
a[7][5] = min(a[7][5], a[7][u] + a[u][5]);
a[7][6] = min(a[7][6], a[7][u] + a[u][6]);
a[7][7] = min(a[7][7], a[7][u] + a[u][7]);
a[7][8] = min(a[7][8], a[7][u] + a[u][8]);
a[7][9] = min(a[7][9], a[7][u] + a[u][9]);
a[7][10] = min(a[7][10], a[7][u] + a[u][10]);
a[8][1] = min(a[8][1], a[8][u] + a[u][1]);
a[8][2] = min(a[8][2], a[8][u] + a[u][2]);
a[8][3] = min(a[8][3], a[8][u] + a[u][3]);
a[8][4] = min(a[8][4], a[8][u] + a[u][4]);
a[8][5] = min(a[8][5], a[8][u] + a[u][5]);
a[8][6] = min(a[8][6], a[8][u] + a[u][6]);
a[8][7] = min(a[8][7], a[8][u] + a[u][7]);
a[8][8] = min(a[8][8], a[8][u] + a[u][8]);
a[8][9] = min(a[8][9], a[8][u] + a[u][9]);
a[8][10] = min(a[8][10], a[8][u] + a[u][10]);
a[9][1] = min(a[9][1], a[9][u] + a[u][1]);
a[9][2] = min(a[9][2], a[9][u] + a[u][2]);
a[9][3] = min(a[9][3], a[9][u] + a[u][3]);
a[9][4] = min(a[9][4], a[9][u] + a[u][4]);
a[9][5] = min(a[9][5], a[9][u] + a[u][5]);
a[9][6] = min(a[9][6], a[9][u] + a[u][6]);
a[9][7] = min(a[9][7], a[9][u] + a[u][7]);
a[9][8] = min(a[9][8], a[9][u] + a[u][8]);
a[9][9] = min(a[9][9], a[9][u] + a[u][9]);
a[9][10] = min(a[9][10], a[9][u] + a[u][10]);
a[10][1] = min(a[10][1], a[10][u] + a[u][1]);
a[10][2] = min(a[10][2], a[10][u] + a[u][2]);
a[10][3] = min(a[10][3], a[10][u] + a[u][3]);
a[10][4] = min(a[10][4], a[10][u] + a[u][4]);
a[10][5] = min(a[10][5], a[10][u] + a[u][5]);
a[10][6] = min(a[10][6], a[10][u] + a[u][6]);
a[10][7] = min(a[10][7], a[10][u] + a[u][7]);
a[10][8] = min(a[10][8], a[10][u] + a[u][8]);
a[10][9] = min(a[10][9], a[10][u] + a[u][9]);
a[10][10] = min(a[10][10], a[10][u] + a[u][10]);
  (u < n ? dis(u + 1) : 1);
}

int res = 0;

int go1(int u, int v) {
  (u != v ? res = max(res, a[u][v]) : 1);
  (v < n ? go1(u, v + 1) : 1);
  (u < n && v == n ? go1(u + 1, 1) : 1);
  return 0;
}

int main() {
  cin >> n;
  memset(a, 60, sizeof a);
  go(1, 1);
  dis(1);
  go1(1, 1);
cout << res << endl;
  return 0;
}