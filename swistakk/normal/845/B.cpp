/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author yassin
 */

#include <fstream>
#include <iostream>
#include <vector>
#include <string>
#include <utility>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <tuple>
#include <queue>
#include <functional>
#include <stack>
#include <numeric>
#include <cassert>
#include <sstream>

using namespace std;

class TaskB {
public:
    void solve(istream& in, ostream& out) {
        string s;
        in >> s;
        int mn = 6;
        string x;
        for (int i = 0; i < 1e6; ++i) {
            x = to_string(i);
            while (x.size() < 6U) {
              x = '0' + x;
            }
            assert(x.size() == 6U);
            if (x[0] + x[1] + x[2] == x[3] + x[4] + x[5]) {
                int cur = 0;
                for (int j = 0; j < 6; ++j) {
                    cur += (x[j] != s[j]);
                }
                mn = min(mn, cur);
            }
        }
        out << mn << "\n";
    }
};


int main() {
	std::ios::sync_with_stdio(false); cin.tie(nullptr);
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}