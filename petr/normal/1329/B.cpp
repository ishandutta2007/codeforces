/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define mp make_pair

using namespace std;

typedef long long int64;
typedef vector<int> vi;
typedef pair<int, int> ii;

class TaskB {
 public:
  void solveOne(istream &in, ostream &out) {
    int d;
    int64 m;
    in >> d >> m;
    int64 res = 1;
    for (int bits = 1; bits <= 30; ++bits) {
      int rmin = 1 << (bits - 1);
      int rmax = min(d, (1 << bits) - 1);
      if (rmin <= rmax) {
        res = res * (rmax - rmin + 2) % m;
      }
    }
    res = (res + m - 1) % m;
    out << res << "\n";
  }

  void solve(std::istream &in, std::ostream &out) {
    int nt;
    in >> nt;
    for (int it = 0; it < nt; ++it) {
      solveOne(in, out);
    }
  }
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  TaskB solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}