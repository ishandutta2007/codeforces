/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author majk
 */

#ifndef MAJK_LIB
#define MAJK_LIB

#include <vector>
#include <stack>
#include <iostream>
#include <fstream>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <iomanip>
#include <set>
#include <functional>
#include <algorithm>
#include <numeric>
#include <cassert>
#include <cmath>
#include <string>
#include <queue>
#include <array>
#include <bitset>
using namespace std;

#define x first
#define y second
typedef std::pair<int,int> pii; typedef long long ll; typedef unsigned long long ull; typedef unsigned int ui; typedef pair<ui,ui> puu;

template <typename T, typename U> std::istream&operator>>(std::istream&i, pair<T,U>&p) {i >> p.x >> p.y; return i;}
template<typename T>std::istream&operator>>(std::istream&i,vector<T>&t) {for(auto&v:t){i>>v;}return i;}
template <typename T, typename U> std::ostream&operator<<(std::ostream&o, const pair<T,U>&p) {o << p.x << ' ' << p.y; return o;}
template<typename T>std::ostream&operator<<(std::ostream&o,const vector<T>&t) {if(t.empty())o<<'\n';for(size_t i=0;i<t.size();++i){o<<t[i]<<" \n"[i == t.size()-1];}return o;}
template<typename T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> using maxheap = priority_queue<T, vector<T>, less<T>>;
ui logceil(ll x) { return x?8*sizeof(ll)-__builtin_clzll(x):0; }

namespace std { template<typename T,typename U>struct hash<pair<T,U>>{hash<T>t;hash<U>u;size_t operator()(const pair<T,U>&p)const{return t(p.x)^(u(p.y)<<7);}}; }
template<typename T,typename F>T bsh(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){l=m+1;r=m;}else{h=m-1;}}return r;}
template<typename F> double bshd(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){l=m;}else{h=m;}}return (l+h)/2;}
template<typename T,typename F>T bsl(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){h=m-1;r=m;}else{l=m+1;}}return r;}
template<typename F> double bsld(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){h=m;}else{l=m;}}return (l+h)/2;}
template<typename T> T gcd(T a,T b) { if (a<b) swap(a,b); return b?gcd(b,a%b):a; }


template<typename T>class vector2:public vector<vector<T>>{public:vector2(){} vector2(size_t a,size_t b,T t=T()):vector<vector<T>>(a,vector<T>(b,t)){}};
template<typename T>class vector3:public vector<vector2<T>>{public:vector3(){} vector3(size_t a,size_t b,size_t c,T t=T()):vector<vector2<T>>(a,vector2<T>(b,c,t)){}};
template<typename T>class vector4:public vector<vector3<T>>{public:vector4(){} vector4(size_t a,size_t b,size_t c,size_t d,T t=T()):vector<vector3<T>>(a,vector3<T>(b,c,d,t)){}};
template<typename T>class vector5:public vector<vector4<T>>{public:vector5(){} vector5(size_t a,size_t b,size_t c,size_t d,size_t e,T t=T()):vector<vector4<T>>(a,vector4<T>(b,c,d,e,t)){}};


#endif

class CArsonInBerlandForest {
public:
    void solve(istream& cin, ostream& cout) {
        int N, M; cin >> N >> M;
        vector<string> A(N); cin >> A;

        vector<pii> Q;
        vector2<int> D(N, M, 1000006);
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < M; ++j) {
                if (A[i][j] == '.') {
                    D[i][j] = 0;
                    continue;
                }
                bool one = false;
                for (int di = -1; di <= 1; ++di) {
                    for (int dj = -1; dj <= 1; ++dj) {
                        int a = i+di;
                        int b = j+dj;
                        one |= a<0||a>=N||b<0||b>=M||A[a][b]=='.';
                    }
                }
                if (one) {
                    D[i][j] = 1;
                    Q.push_back({i,j});
                }
            }
        }

        for (int q = 0; q < Q.size(); ++q) {
            int i = Q[q].x, j = Q[q].y;
            for (int di = -1; di <= 1; ++di) {
                for (int dj = -1; dj <= 1; ++dj) {
                    int a = i+di;
                    int b = j+dj;
                    if (a<0||a>=N||b<0||b>=M) continue;
                    if (D[a][b] != 1000006) continue;
                    D[a][b] = D[i][j]+1;
                    Q.push_back({a,b});
                }
            }
        }

        int mx = bsh(1, N*M, [&](int q) {
            vector2<int> S(N+1, M+1, 0);
            for (int i = 0; i < N; ++i) {
                for (int j = 0; j < M; ++j) {
                    S[i+1][j+1] = S[i][j+1] + S[i+1][j] - S[i][j] + (D[i][j] >= q);
                }
            }

//            cout << q << '\n' << S;
            for (int i = 0; i < N; ++i) {
                for (int j = 0; j < M; ++j) {
                    int a = max(0,i-q+1);
                    int b = max(0,j-q+1);
                    int c = min(i+q-1,N-1);
                    int d = min(j+q-1,M-1);
                    int tot = S[c+1][d+1] - S[c+1][b] - S[a][d+1] + S[a][b];
                    if ((tot == 0) != (A[i][j] == '.')) return false;
                }
            }
            return true;
        });

        vector<string> Ans(N, string(M, ' '));
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < M; ++j) {
                Ans[i][j] = ".X"[D[i][j] >= mx];
            }
        }
        cout << mx-1 << endl;
        for (string&ans: Ans) cout << ans << '\n';
    }
};


int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	CArsonInBerlandForest solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
    return 0;
}