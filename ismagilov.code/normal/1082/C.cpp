/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Azat Ismagilov
 */

#include <bits/stdc++.h>

#define int long long
#define fs first
#define sc second
#define pb push_back
#define mp make_pair
#define len(v) ((int)v.size())
#define vc vector
#define pr pair
#define all(v) v.begin(), v.end()

using namespace std;

typedef long long ll;
typedef long double ld;


class TaskC {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n, m;
		in >> n >> m;
		int ans = 0;
		vc<vc<int>> a(m);
		for (int i = 0; i < n; i++){
			int s, r;
			in >> s >> r;
			s--;
			a[s].pb(r);
		}
		vc<int> anses(n);
		for (int i = 0; i < m; i++){
			sort(all(a[i]));
			reverse(all(a[i]));
			int sum = 0;
			for (int j = 0; j < len(a[i]); j++){
				sum += a[i][j];
				if (sum > 0){
					anses[j] += sum;
				}
			}
		}
		for (int i = 0; i < n; i++){
			ans = max(ans, anses[i]);
		}
		out << ans;
	}
};


main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}