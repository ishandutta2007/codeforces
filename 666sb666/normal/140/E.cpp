														#include<cstdio>



																	#include<cstring>








															#include<cmath>


























											#include<cstdlib>

















		#include<iostream>







			#include<algorithm>












		#include<string>










																		#include<vector>


										#include<queue>








																												#include<set>










																#include<map>

				using namespace std;



















								#include<cstdio>
















															#include<cstring>







											#include<cmath>







							#include<cstdlib>







														#include<iostream>




		#include<algorithm>

















							#include<string>





									#include<vector>











																#include<queue>









				#include<set>








							#include<map>










																using namespace std;





													#define GC getchar()




					#define PC putchar


																inline void read   (            int&n        )





													          {     int x=0                  ,        f=1;char ch=GC;while                 (   ch<'0'||ch>'9'        )




























										{     if                (                 ch        ==                             '-'              )                f=-1;ch=GC;              }              while                (                   ch                       >=               '0'&&ch     <=       '9'           )         x=              (          x<<1          )       +                  (                x<<3                 )                    +ch-'0'              ,             ch=GC;n=x*f;    }




















								int outputarray  [                20               ]                        ;











										inline void write     (                       int k         )










			                      {             int num=0;if      (             k<0               )                   PC          (                       '-'        )       ,         k=-k;do














																									{                  outputarray                    [       ++    num               ]     =k%10         ,                k      /=           10;              }    while     (            k         )          ;while               (             num       )                 PC                (         outputarray               [          num                   --      ]                    +'0'                    ) ;puts        (     ""         )                           ;           }














			const int N=1e6+5                        ,       M=5005;




											int n         ,           m                ,             p         ,            l                      [                      N               ]                   ,                lim         [           N                     ]           ,             mx             ,              now      ,            last;












									long long g     [           M                  ]      [            M            ]              ,                         fac          [              M        ]           ,         pre                         [   M             ]     ,                     f               [        2                 ]       [             N              ]     ,          sum=1;



















													int main            (  )
















																		               {















						read      (                     n     )                  ,                        read       (          m                 )                  ,                read    (                   p        )                 ;












							for                   (        int i=1;i     <=    n;i               ++             )                  read           (                l              [                     i         ]           )                      ,              mx=max              (                      mx     ,                      l                         [                      i            ]                    )   ,                 lim                  [          i           ]                  =min         (      m       ,        l                [       i  ]        )                   ;












														g              [           0                         ]         [        0                    ]          =1;










										for    (               int i=1;i      <=               mx;i                 ++                )













						for           (               int j=1;j         <=      mx;j              ++           )        g                   [               i      ]      [          j      ]                   =                        (        g     [          i-1                ]         [                   j-1             ]                     +g           [                       i-1      ]        [      j                ]         *                (        j-1           )         %p               )         %p;





























																		fac               [                        0           ]               =1;










							for    (                int i=1;i            <=                    mx;i                 ++           )            fac       [            i                           ]                    =fac           [                     i-1      ]                            *i%p;







										pre            [          0          ]          =1;







						for       (             int i=1;i            <=  mx;i            ++         )       pre       [         i                            ]       =pre                     [     i-1    ]          *         (                m-i+1                    )         %p;










																				for         (       int i=1;i       <=          n;i      ++               )



















											    {



























							now         ^=             1;






			for          (                      int j=lim                    [     i-1          ]                    +1;j   <=            lim         [                i                      ]         ;j                    ++        )                      f             [                      last                         ]                     [            j      ]          =0;










														for                (       int j=1;j              <=         lim          [              i         ]        ;j             ++         )       f            [              now         ]      [              j        ]                =g                [        l             [                        i                    ]    ]                   [               j                   ]     *              (        pre                 [        j        ]           *sum%p-fac                  [        j            ]               *f          [                              last         ]       [    j             ]     %p+p                    )     %p;
















				sum=0;











										for                 (             int j=1;j                <=       lim          [         i           ]                      ;j      ++              ) sum=                      (  sum+f        [               now                  ]         [  j     ]                       )      %p;




													last=now;





														            }














																	printf        (             "%lld\n"        ,                     sum           )           ;














																return 0;











								          }