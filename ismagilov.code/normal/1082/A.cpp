/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Azat Ismagilov
 */

/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */
/* VLADOS PRIDI */

#include <bits/stdc++.h>

#define int long long
#define fs first
#define sc second
#define pb push_back
#define mp make_pair
#define len(v) ((int)v.size())
#define vc vector
#define pr pair
#define all(v) v.begin(), v.end()

using namespace std;

typedef long long ll;
typedef long double ld;
const int INF = 1e18;

class TaskA {
public:
    void solve(std::istream &in, std::ostream &out) {
        int t;
        in >> t;
        for (int i = 0; i < t; i++) {
            int n, x, y, d;
            in >> n >> x >> y >> d;
            if ((x - y) % d == 0) {
                out << abs(x - y) / d << endl;
                continue;
            }
            int ans = INF;
            if ((y - 1) % d == 0) {
                ans = min(ans, (x - 1 + d - 1) / d + (y - 1) / d);
            }
            if ((n - y) % d == 0){
                ans = min(ans, (n - x + d - 1) / d + (n - y) / d);
            }
            if (ans == INF){
                ans = -1;
            }
            out << ans << endl;
        }
    }
};


main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}