/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define mp make_pair

using namespace std;

typedef long long int64;
typedef vector<int> vi;
typedef pair<int, int> ii;

class TaskB {
 public:
  void solveOne(istream &in, ostream &out) {
    int n;
    in >> n;
    int nice = 0;
    vector<int> left;
    vector<int> right;
    for (int i = 0; i < n; ++i) {
      int len;
      in >> len;
      bool is_nice = false;
      int first;
      in >> first;
      int last = first;
      for (int j = 1; j < len; ++j) {
        int cur;
        in >> cur;
        if (last < cur) {
          is_nice = true;
        }
        last = cur;
      }
      if (is_nice) {
        ++nice;
      } else {
        left.pb(first);
        right.pb(last);
      }
    }
    sort(left.begin(), left.end());
    sort(right.begin(), right.end());
    int64 res = n * (int64) n;
    int j = 0;
    for (int i = 0; i < left.size(); ++i) {
      while (j < right.size() && right[j] < left[i]) ++j;
      res -= (right.size() - j);
    }
    out << res << "\n";
  }

  void solve(std::istream &in, std::ostream &out) {
    int nt = 1;
    for (int it = 0; it < nt; ++it) {
      solveOne(in, out);
    }
  }
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  TaskB solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}