/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author ei13333
 */

#include <bits/stdc++.h>

using namespace std;

using int64 = long long;
const int INF = 1 << 30;

class TaskA
{
public:
  void solve(istream &cin, ostream &cout)
  {
    vector < int > square;
    for(int i = 0; i < 10000; i++) {
      square.emplace_back(i * i);
    }
    int N;
    cin >> N;

    int ret = -INF;
    for(int i = 0; i < N; ++i) {
      int x;
      cin >> x;
      if(!binary_search(begin(square), end(square), x)) {
        ret = max(ret, x);
      }
    }
    cout << ret << endl;
  }
};


int main()
{
  cin.tie(0);
  ios::sync_with_stdio(false);
  cout << fixed << setprecision(12);

  TaskA solver;
  std::istream &in(std::cin);
  std::ostream &out(std::cout);
  solver.solve(in, out);
}