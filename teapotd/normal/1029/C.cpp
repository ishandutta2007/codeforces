#define _USE_MATH_DEFINES/////////////////////////////////////////////////////
#include <bits/stdc++.h>//////////////////////////////////////////////////////
#ifdef LOC////////////////////////////////////////////////////////////////////
#include "debuglib.h"/////////////////////////////////////////////////////////
#else/////////////////////////////////////////////////////////////////////////
#define deb(...)//////////////////////////////////////////////////////////////
#define DBP(...)//////////////////////////////////////////////////////////////
#endif////////////////////////////////////////////////////////////////////////
#define x first///////////////////////////////////////////////////////////////
#define y second//////////////////////////////////////////////////////////////
#define mp make_pair//////////////////////////////////////////////////////////
#define pb push_back//////////////////////////////////////////////////////////
#define sz(x)int((x).size())//////////////////////////////////////////////////
#define each(a,x)for(auto&a:(x))///////////////// by teapotd /////////////////
#define all(x)(x).begin(),(x).end()///////////////////////////////////////////
#define rep(i,b,e)for(int i=(b);i<(e);i++)////////////////////////////////////
using namespace std;using namespace rel_ops;using ll=int64_t;using Pii=pair///
<int,int>;using ull=uint64_t;using Vi=vector<int>;void run();int main(){cin.//
sync_with_stdio(0);cin.tie(0);cout<<fixed<<setprecision(10);run();return 0;}//
//--------------------------------------------------------------------------//

int uplg(int n) { return 32-__builtin_clz(n); }
int uplg(ll n)  { return 64-__builtin_clzll(n); }

vector<Pii> segs;
int ans = 0;

Pii inter(int b, int e, Pii bounds) {
	rep(i, b, e) {
		bounds.x = max(bounds.x, segs[i].x);
		bounds.y = min(bounds.y, segs[i].y);
	}
	return bounds;
}

void solve(int b, int e, Pii bounds) {
	if (b >= e) return;
	if (b+1 == e) {
		ans = max(ans, bounds.y-bounds.x);
		return;
	}

	int mid = (b+e) / 2;
	solve(b, mid, inter(mid, e, bounds));
	solve(mid, e, inter(b, mid, bounds));
}

void run() {
	int n; cin >> n;
	segs.resize(n);
	each(s, segs) cin >> s.x >> s.y;

	solve(0, n, {INT_MIN, INT_MAX});
	cout << ans << endl;
}