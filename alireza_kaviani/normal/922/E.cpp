/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-04-17 17:25:10
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e4 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n , W , B , X , dp[MAXN] , c[MAXN];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    fill(dp , dp + MAXN , -INF);

    cin >> n >> W >> B >> X;
    dp[0] = W;
    for(ll i = 0 ; i < n ; i++) cin >> c[i];
    for(ll i = 0 , cost , C ; i < n ; i++){
        cin >> cost; C = c[i];
        if(i != 0)  for(ll j = 0 ; j < MAXN ; j++)  dp[j] = (dp[j] < 0 ? -INF : min(W + B * j , dp[j] + X));
        for(ll j = 0 ; j < C ; j++){
            for(ll k = MAXN - 1 ; k >= 1 ; k--){
                dp[k] = max(dp[k] , dp[k - 1] - cost);
            }
            //for(ll k = 0 ; k < MAXN ; k++)  cout << dp[k] << sep;
            //cout << endl;
        }
        //cout << "=========" << endl;
    }
    ll ans = 0;
    for(ll i = 0 ; i < MAXN ; i++)  if(dp[i] >= 0)  ans = i;
    cout << ans << endl;

    return 0;
}
/*

*/