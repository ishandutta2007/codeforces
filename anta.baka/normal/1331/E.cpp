#define _CRT_SECURE_NO_WARNINGS

#pragma GCC optimize("O3")

#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <cassert>
#include <set>
#include <map>
#include <cstring>
#include <string>
#include <random>
#include <queue>
#include <numeric>
#include <ctime>
#include <unordered_map>
#include <bitset>
#include <unordered_set>
#include <iomanip>

#define sz(a) (int)((a).size())
#define all(a) (a).begin(), (a).end()
#define pb push_back
#define mp make_pair

using namespace std;
using ll = long long;
using vi = vector<int>;
using pii = pair<int, int>;
using ld = long double;
int32_t main() {
	ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
	/*
	ifstream cin("out.txt");
	vi kek;
	char ch;
	while (cin >> ch) {
		assert(ch == '[');
		char c;
		cin >> c;
		kek.pb(c - '0');
		while (cin >> ch && ch != ']');
	}
	assert(sz(kek) == 964 * 963);
	vector<vector<char>> a(964, vector<char>(963));
	for (int i = 0; i < sz(kek); i++) {
		a[i / 963][i % 963] = kek[i];
	}
	ofstream cout("in.txt");
	//a.erase(a.begin());
	//a.erase(a.begin());
	for (int i = 0; i < 64; i++, cout) {
		for (int j = 0; j < 64; j++) {
			cout << char('0' + a[i * 15 + 7][j * 15 + 7]);
		}
	}
	*/
	string s
	int r, c;
	cin >> r >> c;
	cout << (s[r * 64 + c] == '0' ? "IN" : "OUT");
}