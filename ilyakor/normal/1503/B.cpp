/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <functional>
#include <sstream>
#include <cmath>

#include <cstring>
#include <cstdio>

using namespace std;

typedef pair<int, int> ii;
typedef long long int64;
typedef vector<int> vi;

#define pb push_back
#define mp make_pair
#define all(v) (v).begin(),(v).end()
#define sz(v) ((int)(v).size())

template<class T> T abs(T x) { return x >= 0 ? x : -x; }
template<class T> T sqr(T x) { return x * x; }

class TaskB {
public:
    bool ok(int r, const vector<vi>& a, int x, int y) {
        for (int dx = -1; dx <= 1; ++dx)
            for (int dy = -1; dy <= 1; ++dy) {
                if (dx == 0 && dy == 0) continue;
                if (dx != 0 && dy != 0) continue;
                int i = x + dx, j = y + dy;
                if (i < 0 || i >= sz(a) || j < 0 || j >= sz(a[i])) continue;
                if (a[i][j] == r) return false;
            }
        return true;
    }

    void solve(std::istream& in, std::ostream& out) {
	    int n;
	    in >> n;
	    vector<vi> a(n, vi(n, 0));
	    for (int it = 0; it < n * n; ++it) {
	        int c;
	        in >> c;
	        int x, y, r = -1;
	        if (c != 1) {
                for (int i = 0; i < n && r == -1; ++i)
                    for (int j = 0; j < n && r == -1; ++j)
                        if (a[i][j] == 0 && (i + j) % 2 == 1) {
                            x = i;
                            y = j;
                            r = 1;
                            break;
                        }
	        } else {
	            for (int i = 0; i < n && r == -1; ++i)
	                for (int j = 0; j < n && r == -1; ++j)
	                    if (a[i][j] == 0 && (i + j) % 2 == 0) {
	                        x = i;
	                        y = j;
	                        r = 2;
	                        break;
	                    }
	        }
	        if (r == -1) {
                for (int i = 0; i < n && r == -1; ++i)
                    for (int j = 0; j < n && r == -1; ++j)
                        if (a[i][j] == 0) {
                            r = 1;
                            while (r == c || !ok(r, a, i, j)) ++r;
                            x = i;
                            y = j;
                            break;
                        }
	        }
	        a[x][y] = r;
	        out << r << " " << (x + 1) << " " << (y + 1) << "\n";
	        out.flush();
	    }
	}
};


int main() {
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}