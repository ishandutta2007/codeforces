/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class TaskC {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int n;
	    in >> n;
	    vector<int> a(n);
	    for (int i = 0; i < n; ++i) {
	        in >> a[i];
	        --a[i];
	    }
	    for (int i = 0; i < n; ++i) if (a[i] % 2 != i % 2) {
	        out << -1 << "\n";
	        return;
	    }
	    vector<int> where(n);
	    for (int i = 0; i < n; ++i) where[a[i]] = i;
	    vector<int> res;

	    auto apply = [&](int len) {
	        reverse(a.begin(), a.begin() + len + 1);
	        for (int i = 0; i <= len; ++i) where[a[i]] = i;
	        res.push_back(len + 1);
	    };

	    for (int i = n - 1; i > 0; i -= 2) {
	        apply(where[i]);
	        apply(where[i - 1] - 1);
	        apply(where[i - 1] + 1);
	        apply(where[i]);
	        apply(i);
	    }

	    out << res.size() << "\n";
	    for (int x : res) out << x << " ";
	    out << "\n";
	}
};


int main() {
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	int n;
in >> n;
for(int i = 0; i < n; ++i) {
	solver.solve(in, out);
}

	return 0;
}