/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <functional>
#include <sstream>
#include <cmath>

#include <cstring>
#include <cstdio>

using namespace std;

typedef pair<int, int> ii;
typedef long long int64;
typedef vector<int> vi;

#define pb push_back
#define mp make_pair
#define all(v) (v).begin(),(v).end()
#define sz(v) ((int)(v).size())

template<class T> T abs(T x) { return x >= 0 ? x : -x; }
template<class T> T sqr(T x) { return x * x; }

class TaskD {
public:
	void solve(std::istream& in, std::ostream& out) {
	    int n, k;
	    in >> n >> k;
	    --k;
	    vector<vi> a(n, vi(32, 0));
	    for (int i = 1; i < n; ++i) {
	        out << "or " << 1 << " " << (i + 1) << "\n";
	        out.flush();
	        int r1;
	        in >> r1;
            out << "and " << 1 << " " << (i + 1) << "\n";
            out.flush();
            int r2;
            in >> r2;
            for (int j = 0; j < 32; ++j) {
                int c1 = (r1 >> j) % 2;
                int c2 = (r2 >> j) % 2;
                a[i][31 - j] = c1 + c2;
            }
	    }
	    int x = 1, y = 2;
        out << "or " << (x + 1) << " " << (y + 1) << "\n";
        out.flush();
        int r1;
        in >> r1;
        out << "and " << (x + 1) << " " << (y + 1) << "\n";
        out.flush();
        int r2;
        in >> r2;
        vector<vi> b(n, vi(32, 0));
        for (int j = 0; j < 32; ++j) {
            int c1 = (r1 >> j) % 2;
            int c2 = (r2 >> j) % 2;
            b[0][31 - j] = (a[x][31 - j] + a[y][31 - j] - (c1 + c2)) / 2;
        }

        for (int i = 1; i < n; ++i) {
            for (int j = 0; j < 32; ++j)
                b[i][j] = a[i][j] - b[0][j];
        }
        vi v;
        for (int i = 0; i < n; ++i) {
            v.pb(i);
        }
        sort(v.begin(), v.end(), [&](int x, int y) {
            return b[x] < b[y];
        });
        int res = 0;
        vi t  = b[v[k]];
        for (int i = 0; i < 32; ++i) if (t[i]) {
            res |= (1 << (31 - i));
        }
        out << "finish " << res << "\n";
        out.flush();
	}
};


int main() {
	TaskD solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}