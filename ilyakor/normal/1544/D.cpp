/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <functional>
#include <sstream>
#include <cmath>

#include <cstring>
#include <cstdio>

using namespace std;

typedef pair<int, int> ii;
typedef long long int64;
typedef vector<int> vi;

#define pb push_back
#define mp make_pair
#define all(v) (v).begin(),(v).end()
#define sz(v) ((int)(v).size())

template<class T> T abs(T x) { return x >= 0 ? x : -x; }
template<class T> T sqr(T x) { return x * x; }

class TaskD {
public:
    void solve(std::istream& in, std::ostream& out) {
        int64 seed = 57;
	    int n;
	    in >> n;
	    seed += n;
	    vi a(n);
	    for (int i = 0; i < n; ++i) {
	        in >> a[i];
	        --a[i];
	        seed = seed * 43 + a[i];
	    }
	    srand(seed);
	    vi b;
	    for (int it = 0; it < 50; ++it) {
            b = vi(n, -1);
            vi inds;
            for (int i = 0; i < n; ++i) {
                inds.pb(i);
            }
            random_shuffle(all(inds));
            set<int> was;
            for (int i : inds) {
                if (a[i] == i) continue;
                if (was.count(a[i])) continue;
                was.insert(a[i]);
                b[i] = a[i];
            }
            if (complete(b)) break;
        }
	    if (!complete(b)) {
	        bool found = false;
	        for (int i = 0; i < sz(b); ++i) {
	            if (b[i] != -1) {
	                b[i] = -1;
	                found = true;
	                break;
	            }
	        }
	        assert(found);
	        if (!complete(b)) {
	            assert(false);
	        }
	    }
	    int res = 0;
	    for (int i = 0; i < sz(b); ++i) {
	        if (b[i] == a[i]) ++res;
	    }
	    out << res << "\n";
	    for (int x : b)
	        out << (x + 1) << " ";
	    out << "\n";
	}

    bool complete(vi& a) {
        vi tout(sz(a), -1);
        vi tin(sz(a), 0);
        for (int i = 0; i < sz(a); ++i) {
            int x = a[i];
            if (x != -1)
                tin[x] = 1;
            if (x == -1) {
                tout[i] = i;
                continue;
            }
            while (a[x] != -1 && tout[x] == -1 && x != i) x = a[x];
            if (tout[x] != -1) x = tout[x];
            int y = i;
            while (y != -1 && tout[y] == -1) {
                tout[y] = x;
                y = a[y];
            }
        }
        vector<ii> v;
        for (int i = 0; i < sz(a); ++i) if (!tin[i]) {
            v.pb(ii(i, tout[i]));
        }
        if (sz(v) == 1) {
            if (v[0].first == v[0].second) return false;
        }
        for (int i = 0; i < sz(v); ++i) {
            int x = v[i].second;
            int y = v[(i + 1) % sz(v)].first;
            assert(x != y);
            a[x] = y;
        }
        for (int i = 0 ;i < sz(a); ++i)
            assert(a[i] != -1);
        return true;
    }
};


int main() {
	TaskD solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	int n;
in >> n;
for(int i = 0; i < n; ++i) {
	solver.solve(in, out);
}

	return 0;
}