/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author parsa bahrami
 */

#pragma GCC optimize("O2")

#include <bits/stdc++.h>

using namespace std;

typedef long long int ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef pair<double, double> pdd;
typedef pair<ld, ld> pld;
typedef pair<string, string> pss;

#define sz(x)                       (ll) x.size()
#define PB(x)                       push_back(x)
#define bs(a, x)                   binary_search(a , a + sizeof(a) / sizeof(a[0] , x)
#define ts(x)                       to_string(x)
#define jjoin(x)                    for (auto i : x) cout << i << endl;
#define all(x)                      (x).begin(),(x).end()
#define bsv(a, x)                  binary_search(all(a), x)
#define Sort(x)                     sort(all((x)))
#define F                           first
#define S                           second
#define Mp                          make_pair
#define tab                         '\t'
#define sep                         ' '
#define error(x)                    cerr << #x << " = " << x << endl
#define fast_io                     ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define file_io                     freopen("in.txt" , "r+" , stdin) ; freopen("out.txt" , "w+" , stdout);
#define set_random                  mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
#define kill(x)                     return cout << x << endl , 0;
#define endl                        '\n'

inline ll input() {
    ll n;
    cin >> n;
    return n;
}

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 2e5 + 10;
const ll MAXA = 1010;
const ll INF = 8e18;
const ll MOD = 1e9 + 7;
const ld PI = 4 * atan((ld) 1);
ll a[MAXA][MAXA];

int main() {
    fast_io;
    set_random;
    ll n, m;
    cin >> n >> m;
    ll q;
    cin >> q;
    for (ll i = 0; i < MAXA; i++) {
        for (ll j = 0; j < MAXA; j++) {
            a[i][j] = 0;
        }
    }
    ll ind = 0;
    for (ll i = 0; i < q; i++) {
        ll x, y;
        cin >> x >> y;
        a[x][y] = 1;
        if ((a[x + 1][y + 1] == 1 && a[x + 1][y] == 1 && a[x][y + 1] == 1) ||
            (a[x - 1][y + 1] == 1 && a[x - 1][y] == 1 && a[x][y + 1] == 1) ||
            (a[x - 1][y - 1] == 1 && a[x - 1][y] == 1 && a[x][y - 1] == 1) ||
            (a[x + 1][y - 1] == 1 && a[x][y - 1] == 1 && a[x + 1][y] == 1)) {
            kill(i + 1);
        }
    }
    ll cnt = 0;
    for (ll i = 0; i < n; i++) {
        for (ll j = 0; j < m; j++) {
            if (a[i][j] && a[i][j + 1] && a[i + 1][j] && a[i + 1][j + 1]) cnt++;
        }
    }
    cout << (cnt == 0 ? 0 : ind) << endl;
    return 0;
}