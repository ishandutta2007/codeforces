/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-10-10 18:20:02
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = (1 << 21);
const ll LOG = 21;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

int mark[MAXN];
vector<pair<ll , pll>> ans;

int bit(ll x){
	return 64 - __builtin_clzll(x);
}

void make(ll n){
	if(n >= MAXN * MAXN){
		return;
	}
	ans.push_back({0 , {n , n}});
	make(n * 2);
}

void solve(ll n){
	if(n == 1){
		return;
	}
	make(n);
	if(mark[n]){
		ans.push_back({1 , {n , n * 2}});
		ans.push_back({0 , {n , n * 2}});
		ans.push_back({0 , {n , n + 2}});
		ll x = 3 * n , y = 2 * n + 2;
		ans.push_back({1 , {x , y}});
		x ^= y;
		ans.push_back({1 , {x , n}});
		make(2);
		for(int i = 1 ; i < LOG ; i++){
			if(n & (1 << i)){
				ans.push_back({1 , {n , (1 << i)}});
				n ^= (1 << i);
			}
		}
		return;
	}
	int bits = bit(n);
	ans.push_back({0 , {n , (n * (1 << (bits - 1)))}});
	ll x = n * (1 << (bits - 1)) + n;
	while(bit(x) > bit(n)){
		ll y = bit(x) - bit(n);
		ans.push_back({1 , {x , n * (1 << y)}});
		x ^= n * (1 << y);
	}
	solve(x);
}

int main() {
	ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

	for(ll i = 3 ; i < MAXN ; i += 2){
		int bits = bit(i);
		ll x = i * (1 << (bits - 1)) + i;
		while(bit(x) > bit(i)){
			ll y = bit(x) - bit(i);
			x ^= i * (1 << y);
		}
	}
	for(int i = 1 ; i < LOG ; i++){
		mark[(1 << i) - 1] = 1;
	}
	int n;
	cin >> n;
	solve(n);
	cout << SZ(ans) << endl;
	for(pair<ll , pll> i : ans){
		if(i.X){
			cout << i.Y.X << sep << "^ " << i.Y.Y << endl;
		}
		else{
			cout << i.Y.X << sep << "+ " << i.Y.Y << endl;
		}
	}

    return 0;
}
/*

*/