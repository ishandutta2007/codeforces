/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-04-08 19:05:03
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e3 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n , last , cur , A[3][3] = {{1, 7 ,9} , {3 , 2 , 5} , {4 , 8 , 6}} , ans[MAXN][MAXN];
vector<ll> vec[MAXN];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n;
    if(n <= 2)  return cout << -1 << endl, 0;
    for(ll i = 0 ; i < n ; i++){
        for(ll j = 0 ; j < n ; j++){
            if(j > 2 || (i > 2 && j != 0))  vec[i].push_back(j);
        }
    }
    
    last = n - 1;
    for(ll i = 0 ; i < n ; i++){
        //cout << cur << sep << last << endl;
        if(n != 3)  ans[i][last] = ++cur;
        ll x = last;
        for(ll j : vec[i]){
            if(j != x){
                last = j;
                ans[i][j] = ++cur;
            }
        }
    }
    for(ll i = n - 1 ; i >= 3 ; i--)    ans[i][0] = ++cur;
    for(ll i = 0 ; i < 3 ; i++) for(ll j = 0 ; j < 3 ; j++) ans[i][j] = A[i][j] + cur;
    for(ll i = 0 ; i < n ; i++ , cout << endl)  for(ll j = 0 ; j < n ; j++) cout << ans[i][j] << sep;

    return 0;
}
/*

*/