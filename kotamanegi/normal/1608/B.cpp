#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long

void solve()
{
  int n, a, b;
  cin >> n >> a >> b;
  vector<int> ans;
  int flag = 0;
  if (a < b)
  {
    swap(a, b);
    flag = 1;
  }
  int check_A = a;
  int check_B = b;
  ans.push_back(n);
  int current_S = 1;
  int current_E = n - 1;
  for (int i = 0; i < n; ++i)
  {
    if (i % 2 == 0)
    {
      if (a == 0)
        break;
      ans.push_back(current_S);
      a--;
      current_S++;
    }
    else
    {
      if (b == 0)
      {
        break;
      }
      ans.push_back(current_E);
      b--;
      current_E--;
    }
  }
  if (a != 0 or b != 0)
  {
    cout << -1 << endl;
    return;
  }
  set<int> checker;
  REP(i, ans.size())
  {
    checker.insert(ans[i]);
  }
  reverse(ALL(ans));
  for (int i = n; i >= 1; --i)
  {
    if (checker.count(i) == 0)
    {
      ans.push_back(i);
    }
  }
  if (ans.size() != n)
  {
    cout << -1 << endl;
    return;
  }
  reverse(ALL(ans));

  for (int i = 1; i < n - 1; ++i)
  {
    if (ans[i] > ans[i - 1] and ans[i] > ans[i + 1])
    {
      check_A--;
    }
    if (ans[i] < ans[i - 1] and ans[i] < ans[i + 1])
    {
      check_B--;
    }
  }
  if (check_A != 0 or check_B != 0)
  {
    cout << -1 << endl;
    return;
  }
  if (flag == 1)
  {
    REP(i, n)
    {
      ans[i] = n + 1 - ans[i];
    }
  }
  REP(i, ans.size())
  {
    if (i != 0)
      cout << " ";
    cout << ans[i];
  }
  cout << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}