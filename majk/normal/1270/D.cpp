/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author majk
 */

#ifndef MAJK_LIB
#define MAJK_LIB

#include <vector>
#include <stack>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <iomanip>
#include <set>
#include <functional>
#include <algorithm>
#include <numeric>
#include <cassert>
#include <cmath>
#include <string>
#include <queue>
#include <array>
#include <bitset>
using namespace std;

#define x first
#define y second
typedef std::pair<int,int> pii; typedef long long ll; typedef unsigned long long ull; typedef unsigned int ui; typedef pair<ui,ui> puu;

template <typename T, typename U> std::istream&operator>>(std::istream&i, pair<T,U>&p) {i >> p.x >> p.y; return i;}
template<typename T>std::istream&operator>>(std::istream&i,vector<T>&t) {for(auto&v:t){i>>v;}return i;}
template <typename T, typename U> std::ostream&operator<<(std::ostream&o, const pair<T,U>&p) {o << p.x << ' ' << p.y; return o;}
template<typename T>std::ostream&operator<<(std::ostream&o,const vector<T>&t) {if(t.empty())o<<'\n';for(size_t i=0;i<t.size();++i){o<<t[i]<<" \n"[i == t.size()-1];}return o;}
template<typename T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> using maxheap = priority_queue<T, vector<T>, less<T>>;
ui logceil(ll x) { return x?8*sizeof(ll)-__builtin_clzll(x):0; }

namespace std { template<typename T,typename U>struct hash<pair<T,U>>{hash<T>t;hash<U>u;size_t operator()(const pair<T,U>&p)const{return t(p.x)^(u(p.y)<<7);}}; }
template<typename T,typename F>T bsh(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){l=m+1;r=m;}else{h=m-1;}}return r;}
template<typename F> double bshd(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){l=m;}else{h=m;}}return (l+h)/2;}
template<typename T,typename F>T bsl(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){h=m-1;r=m;}else{l=m+1;}}return r;}
template<typename F> double bsld(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){h=m;}else{l=m;}}return (l+h)/2;}
template<typename T> T gcd(T a,T b) { if (a<b) swap(a,b); return b?gcd(b,a%b):a; }


template<typename T>class vector2:public vector<vector<T>>{public:vector2(){} vector2(size_t a,size_t b,T t=T()):vector<vector<T>>(a,vector<T>(b,t)){}};
template<typename T>class vector3:public vector<vector2<T>>{public:vector3(){} vector3(size_t a,size_t b,size_t c,T t=T()):vector<vector2<T>>(a,vector2<T>(b,c,t)){}};
template<typename T>class vector4:public vector<vector3<T>>{public:vector4(){} vector4(size_t a,size_t b,size_t c,size_t d,T t=T()):vector<vector3<T>>(a,vector3<T>(b,c,d,t)){}};
template<typename T>class vector5:public vector<vector4<T>>{public:vector5(){} vector5(size_t a,size_t b,size_t c,size_t d,size_t e,T t=T()):vector<vector4<T>>(a,vector4<T>(b,c,d,e,t)){}};


#endif

class DStrangeDevice {
public:
    void solve(istream& cin, ostream& cout) {
        int K, N; cin >> N >> K;
        if (K == 1) {
            cout << "! " << 1 << endl;
            return;
        }
        vector<int> A(N, -1);
        vector<bool> Q(N, false);
        for (int i = 0; i < K-1; ++i) Q[i] = true;
        for (int i = K-1; i < N; ++i) {
            Q[i] = true;
            cout << "?";
            for (int j = 0; j < N; ++j) if (Q[j]) cout << ' ' << j+1;
            cout << endl;
            int a, b; cin >> a >> b;
            --a;
            A[a] = b;
            Q[a] = false;
        }
        assert(count(Q.begin(),Q.end(),false) == N-K+1);
        if (K <= count(Q.begin(),Q.end(),false)) {
            cout << "?";
            int v = 0;
            vector<int> Last;
            for (int j = 0; j < N; ++j) {
                if (!Q[j] && v < K) {
                    assert(A[j] != -1);
                    Last.push_back(A[j]);
                    cout << ' ' << j+1;
                    ++v;
                }
            }
            assert(Last.size() == K);
            cout << endl;
            int a, b; cin >> a >> b;
            sort(Last.begin(),Last.end());
            for (int i = 0; i < N; ++i) {
                if (Last[i] == b) {
                    cout << "! " << i+1 << endl;
                    return;
                }
            }
            assert(false);
        } else {
            vector<int> Other, Mine;
            for (int i = 0; i < N; ++i) if (Q[i]) Other.push_back(i); else Mine.push_back(i);
            assert(Mine.size() >= 2);
            Mine.resize(2);
            assert(A[Mine[0]] != -1);
            assert(A[Mine[1]] != -1);
            if (A[Mine[0]] > A[Mine[1]]) swap(Mine[0],Mine[1]);
            int ans = 1;
            for (int i = 0; i < K-1; ++i) {
                cout << "? " << Mine[0]+1 << ' ' << Mine[1]+1;
                for (int j = 0; j < K-1; ++j) if (i!=j) cout << ' ' << Other[j]+1;
                cout << endl;
                int a, b; cin >> a >> b;
                --a;
                assert(a == Mine[0] || a == Mine[1]);
                if (a == Mine[1]) ans++;
            }

            cout << "! " << ans << endl;
            return;
        }
    }
};


int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	DStrangeDevice solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
    return 0;
}