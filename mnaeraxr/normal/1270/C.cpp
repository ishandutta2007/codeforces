/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class CMakeGood {
public:
    void solve(std::istream &in, std::ostream &out) {
        int t;
        in >> t;

        while (t--) {
            int n;
            in >> n;

            long long v = 1LL << 58;

            long long A = v, X = v;

            for (int i = 0; i < n; ++i) {
                long long u;
                in >> u;
                A += u;
                X ^= u;
            }

            if (A & 1) {
                A += 1;
                X ^= 1;
                v ^= 1;
            }

            auto d = 2 * X - A;

            long long z = 0;

            for (int i = 1; i < 60; ++i) {
                if (d >> i & 1) {
                    z |= 1LL << (i - 1);
                }
            }

            assert(A + 2 * z == 2 * X);
            out << 3 << "\n" << v << " " << z << " " << z << endl;
        }
    }
};


int main() {
    CMakeGood solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}