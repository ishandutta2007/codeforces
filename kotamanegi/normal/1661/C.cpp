using namespace std;
#include "bits/stdc++.h"

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long

void solve()
{
    int n;
    cin >> n;
    vector<int> inputs;
    REP(i, n)
    {
        int a;
        cin >> a;
        inputs.push_back(a);
    }
    if (n == 1)
    {
        cout << 0 << endl;
        return;
    }

    sort(ALL(inputs));
    reverse(ALL(inputs));
    int ans = 1e18;
    REP(t, 4)
    {
        int cur = t;
        vector<int> tmps = inputs;
        sort(ALL(tmps));
        reverse(ALL(tmps));
        priority_queue<int, vector<int>, greater<int>> matches, unmatches;
        REP(q, tmps.size())
        {
            if (tmps[0] % 2 == tmps[q] % 2)
            {
                matches.push(tmps[q]);
            }
            else
            {
                unmatches.push(tmps[q]);
            }
        }
        int target_move = tmps[0];
        while (!unmatches.empty())
        {
            if (cur % 2 == 0)
            {
                int A = unmatches.top();
                unmatches.pop();
                matches.push(A + 1);
            }
            else
            {
                if (matches.empty() or unmatches.top() < matches.top())
                {
                    int A = unmatches.top();
                    if (A + 2 <= target_move)
                    {
                        unmatches.pop();
                        unmatches.push(A + 2);
                    }
                }
                else
                {
                    int A = matches.top();
                    if (A + 2 <= target_move)
                    {
                        matches.pop();
                        matches.push(A + 2);
                    }
                }
            }
            cur++;
        }

        vector<int> Target;
        while (!matches.empty())
        {
            Target.push_back(matches.top());
            matches.pop();
        }
        if (Target[0] != Target.back())
        {
            if (cur % 2 == 1)
            {
                cur++;
                Target[0] += 2;
            }
            int diff_two = 0;

            for (int q = 0; q < Target.size(); ++q)
            {
                diff_two += (Target.back() - Target[q]) / 2;
            }

            cur += (diff_two / 3) * 4;
            diff_two %= 3;
            if (diff_two == 1)
            {
                cur += 2;
            }
            else if (diff_two == 2)
            {
                cur += 3;
            }
        }
        ans = min(ans, cur);
        inputs[t % 2] += 2 - (t + 1) % 2;
    }
    cout << ans << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(100);
    int t = 1;
    cin >> t; // comment out if solving multi testcase
    for (int testCase = 1; testCase <= t; ++testCase)
    {
        solve();
    }
    return 0;
}