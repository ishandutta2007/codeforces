/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-04-26 19:05:03
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 200 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll get(ll A , ll x , ll y){
    return A / x + (A % x >= y);
}

ll t , a , b , q , l , r , A[MAXN][MAXN];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> t;
    while(t--){
        cin >> a >> b >> q;
        if(a > b)   swap(a , b);
        memset(A , -1 , sizeof(A));
        ll LCM = a * b / __gcd(a , b);
        for(ll i = 0 ; i < LCM ; i++)   A[i % a][i % b] = i;
        while(q--){
            cin >> l >> r;
            ll ans = r - l + 1;
            for(ll j = 0 ; j < b ; j++){
                ll k = j % a;
                if(A[k][j] == -1)   continue;
                ans -= get(r , LCM , A[k][j]) - get(l - 1 , LCM , A[k][j]);
            }
            cout << ans << sep;
        }
        cout << endl;
    }

    return 0;
}
/*

*/