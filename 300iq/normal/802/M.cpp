/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author gainullin.ildar
 */

#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <list>
#include <time.h>
#include <math.h>
#include <random>
#include <deque>
#include <queue>
#include <cassert>

using namespace std;

typedef long long ll;

class TaskM
{
public:
	void solve(std::istream& in, std::ostream& out)
	{
		int n, k;
		in >> n >> k;
		vector <int> a(n);
		for (int i = 0; i < n; i++)
		{
			in >> a[i];
		}
		sort(a.begin(), a.end());
		ll ans = 0;
		for (int i = 0; i < k; i++)
		{
			ans += a[i];
		}
		out << ans << '\n';
	}
};


int main()
{
    ios::sync_with_stdio(0);
	TaskM solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}