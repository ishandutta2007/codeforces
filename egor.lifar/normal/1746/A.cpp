//****,,,,,.,,,****//*//////////****/&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@@@@@@@@@@@@@@@@@@&//***********///(/////////*****//////////((##%&&&&&%#((////*******,***/*****,**********///((((((//((((/((/
//***,,,,,..,.,,*/*//(/////////////&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@#/*********/(/////(/*****//*****///////(((##%%%%%##(((////************************(/*//////((((((((((((/
//****,,.,..,,,***////*//////////&@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@&#(////////////////////////////////((((####%#%#####((((//////////////////////////(((((((((////(((((((
//***,,,.....,,*****/*/**/////(%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@&((%&&((//////(#((((((((((((((((((((((####%%%%%%%%###((((/((/////////////////////((((((((/((//((//(((
//***,,,.....,,,,****(/****//(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@%///(#&&(/////////////*///(///////((((#(###%%%%####((((((////////////////////((/////////(((((/(////
//***,,...,,,.,,,,*****/**//#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#/////#&&#///////////////////////((((###%&&&&&%%###((((//////////////////////((#(/////((((///////
//***,,...,.,.,,,,****///*/%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#//////#&@#////*///////////////((((##%&&@@@@&&%##(((((///////////////////////(/////////////////
//**,,,..,,,,.,,,,****////%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%(//////%@&(/*/**********/////(((##%&&@@@@&&%#(((((////////////*****///****/****/////////////
//,,,,,,,,,,,.,,,,*****//#@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@&@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@&(/*/*/*%@@#*********//**/////(((##%&&&&%##(((/////*********/////***************//////(((//
//*,,,,,,,,,,.,,,,*****/(&@@@@@@@@@@@@@&@@@@&@@@@@@@@@@@@@@@@@@@@@@@&&@@@@@@@@@@@&@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@&(**,,/&@@(*,,,,,,,,,,,,******///(((((/////****,,,,,,,,,********************/////((((///
//,,,,,.,,,,,..,,,,****/%@@@@@@@@@@@@@&@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@&@@@@@@@@@@@%#&@&@@@@@@@@@@@@@@@@@@@&(*,/@@@%,,.,..,,*,,,,*/*,***************,,,,,,,,,,,,,**,**//**,,,,,******///((((((((
//,***,.,,,,...,,,,,***(&@@@@@@@@@@@@@&@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@&@&@@@@@@@@@&@@@@@@@@@@@%###%@@@@@@@@@@@@@@@@@@@@@@@@@@@&,......,*.*/,,,,,,,,,,,,,,,,,,,,,,,,,,..,,,,,,,,,*,,,,,,,,,****////(/////((
//**/*,........,,,,****&&@@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@@&@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@%###%@@@@@@@@@@@@@@@@@@@@@@@@@@@%*...............,,,,,,,,,,,,,,,,,,,,,,,,,,,,,***,,,,,,,,,,,****///((((((((
//**,,,..,.....,,,,**/@&@@@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@@@@@@&@@@@@&&@@@@&@@@@@@@@@@@@@@@@@@&##@@&@@@@@@@@@@@@@@@@@&@@@@@@@@@@@%*.....................,.........,,,,,,,,,,,,,,,,,,,,,,,,****/////////(*
//*,,,...,......,,,**%@&%@@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@@@%&&&@@@@@@&@@@@@@&@@@@@@@@@@@@@@@@@&@#&@&@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@&*,*...,............,...............,,,**,,,..,,,,,,,****//(((/////*,
//***//*,,,,....,,,*/@@&#&@&@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@&@@@@@@@@&@&@@@@@@@@@@@@@##&@&@@@@@@&@@@@@@@@@%&@@@@@@@@@@@@@@@@@*.,........................................,,,,,,****/////////,,,
//,,***,,.......,,,*%@@&(%@%&@@@@@@&@@@&@@@&&%&@@@@@@@@@@@@@@@@@@&@@@@@@%@@@@@@@@&&&@@@@@@@@@@@@@%##@@&@@&%&@@@@@@@@@&#%@@@@@@@@@@@@@@@@@@@/,........................................,,,,,****///////*,,,,
//,,***,.......,,,*/@@@@#(##&@@@@@@&@@@%&@@@@@@@@@@@@@@@@@@@@&@@@&@@&@@&(..,,*,&/#&&&@@@@@@@@@@@@&#%@@%%#&@@@@@@@@@@@#(&@@&@@@@@@@@@@@@@@@@@,........................................,,,,,,,*//////**,,,,,
//,,,,,........,,,*(@@@@&(((@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@&@@@&@@@%./#(.,*(##(/&&&@@@@@@@@@@@@&#@@%#%@@@@@@@@@@@&#(%@@@@@@@@@@@@@@@@@@@@@/... ....................,,...........,...,,,,,,********,,,,,,
//,,,,,.........,,,(#&@@@%#(@@@@@@@@&@@@&&@@@@@&@@@@@@@@@@@@@&@@@&@@@#%&@@*(##(%##&&%@@@@@@@@@@@@&@@@#@@@@@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@&.... ................. .,..................,,,,,,***/**,,,,,,,
//,,,,,..........,,(/(&@@@@#@@@@@@@@@&@@@&@@@&@@&&@@@@@@@@@@@&@@@&@@@@@@@@@&&&@@@@@@%@@@@@@@@@@@@&@@&@@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&..............................................,,,,,***,,,*,,,,,
//,,,,,.........,,,/(#(%@@@&@@@@@@@@@@%@@@&(,*...,,(.*&@@@@@@&@@@@@@@@@@@@@@@&@@@@@@%@@@@@@@@@@@@&&@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%#......................... .....................,,,,,*,,,,,,,,,,
///,**,,........,/%#(%#(((((@@@@@@@@@@@%&&&@@@*,,((##*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@&@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#%%%%%%%%#(.........................................,,.,,,,,,,,,,,,,,,
////**,,,,,,..,*%%%%%#######@@@@@@@@@@@@%@&&@@@(##(&%%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%@@@&@@@@@@@@&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#%%%%%%%%%%%#%%%*........................................,,,,,.,*,,,,,,,,
//*////***/%&&%%%%%%##%%#%%%@@@@@@@@@@@&@&@@@&&@@&%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@@@&@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#%%%%%%%%%%%%%%%###%/................. ..................,,,,,,,,,,,,,,....
///((##%@@@&&&&%%%%%%%%##%%%@@@@@@@@@@@%(%%&@@@&@@@@&@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@&@@@&@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@####%%%%%%%%%%%%%%%#%%##*,..... .............................,,,,.,,.,....,,,
///(%@@&@&&&@&%#%%%%%##%&&&%@@@@@@@@@@@&((*&#&&&&@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@&@@@@@@&&@@@@@@&@@@@@@@@@@@@@@@@@@@@((%%%%%#%%%%%%%%%%%%%%##%#/*****,..,................,,,,,,,....,,,,,,.......,,,
///(&&&@@@@@@&&%%%######%%#%@@@@@@@@&@@&/*((%%%&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@&@@@@@@&&@@@@%&@@@@@@@@@@@@@@@@@@@#(##%%###%%%###%%%%%%%%#((###*********,...............,,****,...........,...,,,..
//&&&&@@@@&&&%%%#(////(####&@@@@@@@@#&@@*/***&&%%&@@&@@@@@@@@@@@@@@@@@@&&%&&@@@@@@&&@@&&@@@@@&&@&@&#&@@@@@@&@&&&&@@@@@@%(#%#(/%###%#%###((((#####%%####(/*******,,,,,,,***********,***,,.............,....
//%%%%%&&&%%%%%%%%###****((&@@@@@@@&(#@@#*****&&@@&&@@@@@@@@@@@@@###/*///(#%#&@@@@%@@&&@@@@@%&&@&%(&@&%@@@@@@@@@@@@&%&#(#(*/*#(#%#%####%##########%%####(*/*//*,,,,.,,,,,,,,,,,,,,,,,,...............,,,..
//#%%%%%%%%%%%%#%######(**/&@@@@@@@%(/(%&#%%#/*(@@@@@@@@@@@@@@@(*/**/#%##%%#&@@@@&@@@&@@@@&&@@@&##&&@@@@@&%%&&@@@@@@%(((/***##(*****/#%######%%###########/**/(*.............,,........ ............,.....
//*/(###%#(#((#(((((((((##(%&&@&@@&%////(&&%#&@@@&&@@@@@@@@@@@@@@%((%%%%%&@@@@@@@&@@%&@@&%%&&&&&@@@@@@%%&@&&&%%#%#(((///,///(((((##(((((((((#######((#######*#####*. ............. .......................
//#####(####(/&&&#(((#(((((%%&%&@@@&(///((#(&@@@@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@%&@&@@&&@@@@@@@@@@@@@@@@@@@@@&(///(#####%(##(#((##((/(*/(##(###((####(#########((((((, ...................................
//###/###/#(#%@@@@&(##/@&@&%@%@@&%%%%##%%&@@@@@@@@@@@@@@@&#(%&@@@@@@@@@@@@@@@@&%&@&@%@&@@@@@@@@@&&%%%&&&%%@@@@@@#@@@@@&@@#(###&&@&(###%#((##(####(####/#########%(****,..... ..... .....................,*
//#((##/#/##(&@@@@@(##(@@@@@@&%%&&@@&%%%@@@@@@@@@@@@@@@@@@@@@&#(((%%&@@@@@@&#%&%&&%&@@@@@@@@@@@@@@@@@@@@@@@@&&&@@@%&@@@@@@@@@@@&###%%##%@#(##(#####(###(##########/****,. ................................
//#/(((/((###@@@@@&(##(@@@@@@@@@@@&@@@@@@@@&&%%%&&&&&&&&&&&&&&&&&#((##%&&%&%&@&&@&@@@@@@@@&#(((((((((((((#&@@@@%&@@@&&@@@@@@@@####%@/#(&@%/##(#######(##/#########*****,..................................
//(###/%(##(&@@@@@(##(&@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%&&&%&&&&&&@@@@@@@@@@@@@@&%#((((((////((#&&&%&%&%&@@@@%(####@%##(&@%/(#((#######((#(#######(***,....................................
//##(%&#####@@@@@&/#(#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%&&&&&&%@@@@@@@@@@@@&@@@@@@@@&%&&@@@&@&%#(%&%&@@@@&%####(&@%##(@@&((############(/####%#(*,,.  .......... ........................
//(#%@&(##(%@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&%%&%@@@@&%%##((#&&&&&&%&@@@@@@&%&@@@@@@@@@@&@@@%(####&@@###/@@&(################(###**,............... ........................
//(&&@####/&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&@@@@@@@@@@@@&&&&%&%%&@&#((////#&@@@@@@@@@@@&%&&@&&&&@@@@@@@@@@@&(#####@@@###(@&&###################(((##########/,......   .............      . 
//%@@&/#(((@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@&%#((((((((((((((((%&&&@@@@%&&%@@&((//(/*//(/(((/(((((((((##%%&&&&&@@@@@@@@@@@%(#####@@@(##(&@%#######################((((######/**,*****,                     
//((((/(#/&@@@@@@@@@@@@@@@&&&@@&&%#((((/(((//(///*******/**//*****///(/&&/((/***************,,,,,,*//////(((//((((((#%%&&%(####%@&@(##(&&((#############################(/******/*/****..                 
//,*/*((#/%%&&&&&&&%%##((((((/////*****//////////(/////(///**///////((/%/(//*************************,,******//////(////(/*((#(/(/(((##*(//#################################(/**/***/////**,.     .       
//////**/,****///***,**,**,,,*,***/(////****////**/(((///////*///((((////(//*****************/**********//*//**********/***,**,,**,/#(#/**/**/(((((###(((######(####((##(##(((/#***//*/*******************
//******////*****/***/(**,,,,,,,,***(/(//(/**//((//**/((///////////(/****/********,*************************/********//*/*(/(//*****((((****////**/(((//***//(####(####(((/(////*///*///*********/*****///
#include <iostream>
#include <complex>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <random>
 
using namespace std;
template<typename T1, typename T2> inline bool chkmin(T1 &a, T2 b) {
	if (a > b) {
		a = b;
		return true;
	}
	return false;
}
template<typename T1, typename T2> inline bool chkmax(T1 &a, T2 b) {
	if (a < b) {
		a = b;
		return true;
	}
	return false;
}
#define files(FILENAME) read(FILENAME); write(FILENAME)
#define read(FILENAME) freopen((FILENAME + ".in").c_str(), "r", stdin)
#define write(FILENAME) freopen((FILENAME + ".out").c_str(), "w", stdout)
#define all(c) (c).begin(), (c).end()
#define sz(c) (int)(c).size()
#define left left228
#define right right228
#define y1 y1228
#define mp make_pair
#define pb push_back
#define y2 y2228
#define rank rank228
using ll = long long;
using ld = long double; 



int n, k;
int a[52];

void solve() {
	cin >> n >> k;
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}
	while ((n - 1) % (k - 1) != 0) {
		bool was = false;
		for (int i = 0; i < n - 1; i++) {
			if (a[i] == 0 && a[i + 1] == 0) {
				for (int j = i + 1; j < n - 1; j++) {
					a[j] = a[j + 1];
				}
				n--;
				was = true;
				break;
			}
		}
		if (was) {
			continue;
		}
		for (int i = 0; i < n - 1; i++) {
			if (a[i] == 1 && a[i + 1] == 1) {
				for (int j = i + 1; j < n - 1; j++) {
					a[j] = a[j + 1];
				}
				n--;
				was = true;
				break;
			}
		}
		if (was) {
			continue;
		}
		for (int i = 0; i < n - 1; i++) {
			if (a[i] == 1 && a[i + 1] == 0) {
				for (int j = i + 1; j < n - 1; j++) {
					a[j] = a[j + 1];
				}
				a[i] = 0;
				n--;
				was = true;
				break;
			}
		}
		if (was) {
			continue;
		}
		for (int i = 0; i < n - 1; i++) {
			if (a[i] == 0 && a[i + 1] == 1) {
				for (int j = i + 1; j < n - 1; j++) {
					a[j] = a[j + 1];
				}
				n--;
				was = true;
				break;
			}
		}
	}
	int sum = 0;
	for (int i = 0; i < n; i++) {
		sum += a[i];
	}
	if (sum) {
		cout << "YES\n";
	} else {
		cout << "NO\n";
	}
}


int main(){
	cin.tie(0)->sync_with_stdio(0);
	int t;
	t = 1;
	cin >> t;
	while (t--) {
		solve();
	}
}