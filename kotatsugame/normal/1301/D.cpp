#include<cstdio>
#include<vector>
#include<string>
using namespace std;
int N,M,K;
main()
{
	scanf("%d%d%d",&N,&M,&K);
	if(4*N*M-2*N-2*M<K)
	{
		printf("NO\n");
		return 0;
	}
	printf("YES\n");
	vector<pair<int,string> >ans;
	N--;M--;
	if(N==0)
	{
		if(K>0)
		{
			if(K<M)
			{
				ans.push_back(make_pair(K,"R"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(M,"R"));
				K-=M;
			}
		}
		if(K>0)
		{
			if(K<M)
			{
				ans.push_back(make_pair(K,"L"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(M,"L"));
				K-=M;
			}
		}
	}
	else if(M==0)
	{
		if(K>0)
		{
			if(K<N)
			{
				ans.push_back(make_pair(K,"D"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(N,"D"));
				K-=N;
			}
		}
		if(K>0)
		{
			if(K<N)
			{
				ans.push_back(make_pair(K,"U"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(N,"U"));
				K-=N;
			}
		}
	}
	else
	{
		for(int j=0;j<M;j++)
		{
			if(K>0)
			{
				ans.push_back(make_pair(1,"D"));
				K--;
			}
			if(K>0&&N>1)
			{
				if((N-1)*3<=K)
				{
					K-=(N-1)*3;
					ans.push_back(make_pair(N-1,"RLD"));
				}
				else
				{
					if(K>=3)
					{
						ans.push_back(make_pair(K/3,"RLD"));
						K%=3;
					}
					if(K==1)
					{
						ans.push_back(make_pair(1,"R"));
						K-=1;
					}
					else if(K==2)
					{
						ans.push_back(make_pair(1,"RL"));
						K-=2;
					}
				}
			}
			if(K>0)
			{
				ans.push_back(make_pair(1,"R"));
				K--;
			}
			if(K>0)
			{
				if(K<N)
				{
					ans.push_back(make_pair(K,"U"));
					K-=K;
				}
				else
				{
					ans.push_back(make_pair(N,"U"));
					K-=N;
				}
			}
		}
		if(K>0)
		{
			if(K<M)
			{
				ans.push_back(make_pair(K,"L"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(M,"L"));
				K-=M;
			}
		}
		if(K>0)
		{
			if(K<M)
			{
				ans.push_back(make_pair(K,"R"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(M,"R"));
				K-=M;
			}
		}
		if(K>0)
		{
			if(K<N)
			{
				ans.push_back(make_pair(K,"D"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(N,"D"));
				K-=N;
			}
		}
		if(K>0)
		{
			if(K<M)
			{
				ans.push_back(make_pair(K,"L"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(M,"L"));
				K-=M;
			}
		}
		if(K>0)
		{
			if(K<N)
			{
				ans.push_back(make_pair(K,"U"));
				K-=K;
			}
			else
			{
				ans.push_back(make_pair(N,"U"));
				K-=N;
			}
		}
	}
	printf("%d\n",(int)ans.size());
	for(pair<int,string>p:ans)
	{
		printf("%d %s\n",p.first,p.second.c_str());
	}
}