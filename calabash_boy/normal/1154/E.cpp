/* Generated by powerful Codeforces Tool
 * Author: calabash_boy_love_15 
 * Time: 2019-04-26 14:31:39
 * Personal Code Template: https://github.com/4thcalabash/ACM-Code-Library
**/
#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#ifdef __LOCAL_DEBUG__
# define _debug(fmt, ...) fprintf(stderr, "\033[91m[%s %3d]: " fmt "\n\033[0m", \
  __func__,__LINE__, ##__VA_ARGS__)
#else
# define _debug(...) (void(0))
#endif
#define PB(x) push_back(x)
#define rep(i,l,r) for (int i = l,_ = r;i< _;i++)
#define REP(i,l,r) for (int i=l,_=r;i<=_;i++)
#define leave(x) do {cout<<#x<<endl;fflush(stdout);return 0;}while (0);
#define untie do{ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}while (0)
#define range(x) x.begin(),x.end()
typedef long long LL;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef long double db;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int inf = 0x3f3f3f3f;
const ll inf_ll = 0x3f3f3f3f3f3f3f3fLL;
/************* header ******************/

const int maxn = 2e5+ 100;
int a[maxn];
int pre[maxn];
int nxt[maxn];
int ans[maxn];
int rk[maxn];
int n,k;
void del(int x){
    int p = pre[x];
    int t = nxt[x];
    nxt[p] = t;
    pre[t] = p;
}
int main(){
    untie;
    cin>>n>>k;
    for (int i=1;i<=n;i++){
        cin>>a[i];
        rk[i] = i;
    }
    sort(rk+1,rk+1+n,[](int x,int y){
        return a[x] > a[y];
    });
    for (int i=0;i<=n+1;i++){
        pre[i] = i-1;
        nxt[i] = i+ 1;
    }
    int now = 0;
    for (int i=1;i<=n;i++){
        int x = rk[i];
        if (ans[x])continue;
        int remain = k;
        while (remain--){
            int y = pre[x];
            if (!y)break;
            ans[y] = now + 1;
            del(y);   
        }
        remain = k;
        while (remain--){
            int y =nxt[x];
            if (y == n + 1)break;
            ans[y] = now + 1;
            del(y);
        }
        ans[x] = now + 1;
        del(x);
        now ^= 1;       
    }
    for (int i=1;i<=n;i++){
        printf("%d",ans[i]);
    }
    puts("");
    return 0;
}