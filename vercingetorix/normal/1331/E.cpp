#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <ctype.h>
#include <queue>
#include <cstring>
#include <set>
#include <bitset>
#include <map>
#include <chrono>
#include <random>
#include <unordered_map>
#include <stdio.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef std::vector<int> vi;
typedef std::vector<bool> vb;
typedef std::vector<string> vs;
typedef std::vector<double> vd;
typedef std::vector<long long> vll;
typedef std::vector<std::vector<int> > vvi;
typedef vector<vll> vvll;
typedef std::vector<std::pair<int, int> > vpi;
typedef vector<vpi> vvpi;
typedef std::pair<int, int> pi;
typedef std::pair<ll, ll> pll;
typedef std::vector<pll> vpll;

const long long mod = 1000000007;
ll gcd (ll a, ll b) {return b==0 ? a : gcd(b, a%b);}
const unsigned gen_seed = std::chrono::system_clock::now().time_since_epoch().count();
std::mt19937_64 gen(gen_seed);

#define all(c) (c).begin(),(c).end()
#define srt(c) sort(all(c))
#define srtrev(c) sort(all(c)); reverse(all(c))
#define forn(i, a, b) for(int i = a; i < b; i++)
#define read(x) scanf("%d", &x)
#define readv(x, n) vi x(n); forn(i,0,n) scanf("%d", &x[i])

#define pb push_back
#define mp make_pair
vs ans(64);
int main()
{
#ifdef LOCAL
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif
    ans[0]="1111111111111111111111111101010000001011111111111111111111111111";
    ans[1]="1111111111111111111111010001010101101000001111111111111111111111";
    ans[2]="1111111111111111111100010111011100101111011011111111111111111111";
    ans[3]="1111111111111111100001010100000111100001010001011111111111111111";
    ans[4]="1111111111111111001111110101111100001111010101001111111111111111";
    ans[5]="1111111111111101100100000100010001011010011101101011111111111111";
    ans[6]="1111111111111000110110111111010111000011001001001001111111111111";
    ans[7]="1111111111100000010010010001000100011110011011011100011111111111";
    ans[8]="1111111111000000000000111101111101110100110010010110001111111111";
    ans[9]="1111111110000000000000000000010000000110000110000000000111111111";
    ans[10]="1111111100000000000000000000000000000000000000000000000011111111";
    ans[11]="1111111000000000000000000000000000000000000000000000000001111111";
    ans[12]="1111111000000000000000000000000000000000000000000000000001111111";
    ans[13]="1111110000000000000000000000000000000000000000000000000000111111";
    ans[14]="1111100000000000000000000000000000000000000000000000000000011111";
    ans[15]="1111100000000000000000000000000000000000000000000000000000011111";
    ans[16]="1111000000000000000000000000000000000000000000000000000000001111";
    ans[17]="1110000000000000000000000000000000000000000000000000000000000111";
    ans[18]="1111100000000000000000000000000000000000000000000000000000000111";
    ans[19]="1111111000000000000111011000000000000001110101000000000000011111";
    ans[20]="1100111110000000001101110000000000000001011111110000000011111111";
    ans[21]="1100001111100000111001011100000000000000010010011010011111110011";
    ans[22]="1000000011111011100011000110000000000010110111001111111110000001";
    ans[23]="1000000000111110110110010011100000000010010000011011110000000001";
    ans[24]="1000000000000100100011111000110000000111011011110001000000000001";
    ans[25]="1000000000111110111000100011100000000101000001011101101000000001";
    ans[26]="0000000000001000101101101110110000001101101111001000111000000000";
    ans[27]="0000000000011101101001000100010000101000100001100011101000000000";
    ans[28]="0000000000010000001000011110110101111010110100001110001000000000";
    ans[29]="0000000000011111011011000100011101010010010110111011011000000000";
    ans[30]="0000000000001001000010010001110100011111000010100000010000000000";
    ans[31]="0000000000011100011011011100010110001000011010001110111000000000";
    ans[32]="0000000000000111110010001001000100111110110010011011101000000000";
    ans[33]="0000000000000010010111101011110101101010010111001001000000000000";
    ans[34]="0000000000001111000010101010100001001011010001100011100000000000";
    ans[35]="0000000000000101101110001110000111011001111011001110000000000000";
    ans[36]="0000000000000000111000111010010010010011010001011011000000000000";
    ans[37]="0000000000000000001110100000011111000000011101110000000000000000";
    ans[38]="1000000000000000011011110000010100000000000111011000000000000001";
    ans[39]="1000000000000000000000000000000111100000000000000000000000000001";
    ans[40]="1000000000000000000000000000101101000000000000000000000000000001";
    ans[41]="1000000000000000000000000010111000000000000000000000000000000001";
    ans[42]="1100000000000000000000000011101110000000000000000000000000000011";
    ans[43]="1100000001100000000000000000001000000000000000000000000000000011";
    ans[44]="1110000000101000000000000000011100000000000000000000010000000111";
    ans[45]="1110000000111011100000000000110100000000000100000101111000000111";
    ans[46]="1110000000101010110101110010100110101101001110011111010000000111";
    ans[47]="1111000000001110011111011111110011100111111010110001000000001111";
    ans[48]="1111100000001011000010000100011000111100010000010100000000011111";
    ans[49]="1111100000000001011011011101000010001001011111011100000000011111";
    ans[50]="1111110000000011110010010111101110101111000101110000000000111111";
    ans[51]="1111111000000000100111000001001010111010011100000000000001111111";
    ans[52]="1111111000000000110001101011100011101000110111000000000001111111";
    ans[53]="1111111100000000011100001110001001000010000100000000000011111111";
    ans[54]="1111111110000000001001111010111111011110100000000000000111111111";
    ans[55]="1111111111000000000000101000010010010100110000000000001111111111";
    ans[56]="1111111111100000000000001111000011110111100000000000011111111111";
    ans[57]="1111111111111000000000000000000001000000000000000001111111111111";
    ans[58]="1111111111111100000000000000000000000000000000000011111111111111";
    ans[59]="1111111111111111000000000000000000000000000000001111111111111111";
    ans[60]="1111111111111111100000000000000000000000000000011111111111111111";
    ans[61]="1111111111111111111100000000000000000000000011111111111111111111";
    ans[62]="1111111111111111111111000000000000000000001111111111111111111111";
    ans[63]="1111111111111111111111111100000000000011111111111111111111111111";
    int i,j;
    cin>>i>>j;
    if(ans[i][j] == '1') cout<<"OUT";
    else cout<<"IN";

    
}