//****,,,,,.,,,****//*//////////****/&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@@@@@@@@@@@@@@@@@@&//***********///(/////////*****//////////((##%&&&&&%#((////*******,***/*****,**********///((((((//((((/((/
//***,,,,,..,.,,*/*//(/////////////&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@#/*********/(/////(/*****//*****///////(((##%%%%%##(((////************************(/*//////((((((((((((/
//****,,.,..,,,***////*//////////&@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@&#(////////////////////////////////((((####%#%#####((((//////////////////////////(((((((((////(((((((
//***,,,.....,,*****/*/**/////(%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@&((%&&((//////(#((((((((((((((((((((((####%%%%%%%%###((((/((/////////////////////((((((((/((//((//(((
//***,,,.....,,,,****(/****//(@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@%///(#&&(/////////////*///(///////((((#(###%%%%####((((((////////////////////((/////////(((((/(////
//***,,...,,,.,,,,*****/**//#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#/////#&&#///////////////////////((((###%&&&&&%%###((((//////////////////////((#(/////((((///////
//***,,...,.,.,,,,****///*/%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#//////#&@#////*///////////////((((##%&&@@@@&&%##(((((///////////////////////(/////////////////
//**,,,..,,,,.,,,,****////%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%(//////%@&(/*/**********/////(((##%&&@@@@&&%#(((((////////////*****///****/****/////////////
//,,,,,,,,,,,.,,,,*****//#@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@&@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@&(/*/*/*%@@#*********//**/////(((##%&&&&%##(((/////*********/////***************//////(((//
//*,,,,,,,,,,.,,,,*****/(&@@@@@@@@@@@@@&@@@@&@@@@@@@@@@@@@@@@@@@@@@@&&@@@@@@@@@@@&@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@&(**,,/&@@(*,,,,,,,,,,,,******///(((((/////****,,,,,,,,,********************/////((((///
//,,,,,.,,,,,..,,,,****/%@@@@@@@@@@@@@&@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@&@@@@@@@@@@@%#&@&@@@@@@@@@@@@@@@@@@@&(*,/@@@%,,.,..,,*,,,,*/*,***************,,,,,,,,,,,,,**,**//**,,,,,******///((((((((
//,***,.,,,,...,,,,,***(&@@@@@@@@@@@@@&@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@&@&@@@@@@@@@&@@@@@@@@@@@%###%@@@@@@@@@@@@@@@@@@@@@@@@@@@&,......,*.*/,,,,,,,,,,,,,,,,,,,,,,,,,,..,,,,,,,,,*,,,,,,,,,****////(/////((
//**/*,........,,,,****&&@@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@@&@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@%###%@@@@@@@@@@@@@@@@@@@@@@@@@@@%*...............,,,,,,,,,,,,,,,,,,,,,,,,,,,,,***,,,,,,,,,,,****///((((((((
//**,,,..,.....,,,,**/@&@@@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@@@@@@&@@@@@&&@@@@&@@@@@@@@@@@@@@@@@@&##@@&@@@@@@@@@@@@@@@@@&@@@@@@@@@@@%*.....................,.........,,,,,,,,,,,,,,,,,,,,,,,,****/////////(*
//*,,,...,......,,,**%@&%@@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@@@%&&&@@@@@@&@@@@@@&@@@@@@@@@@@@@@@@@&@#&@&@@@@@@@@@@@@@@@@#@@@@@@@@@@@@@@&*,*...,............,...............,,,**,,,..,,,,,,,****//(((/////*,
//***//*,,,,....,,,*/@@&#&@&@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@&@@@@@@@@&@&@@@@@@@@@@@@@##&@&@@@@@@&@@@@@@@@@%&@@@@@@@@@@@@@@@@@*.,........................................,,,,,,****/////////,,,
//,,***,,.......,,,*%@@&(%@%&@@@@@@&@@@&@@@&&%&@@@@@@@@@@@@@@@@@@&@@@@@@%@@@@@@@@&&&@@@@@@@@@@@@@%##@@&@@&%&@@@@@@@@@&#%@@@@@@@@@@@@@@@@@@@/,........................................,,,,,****///////*,,,,
//,,***,.......,,,*/@@@@#(##&@@@@@@&@@@%&@@@@@@@@@@@@@@@@@@@@&@@@&@@&@@&(..,,*,&/#&&&@@@@@@@@@@@@&#%@@%%#&@@@@@@@@@@@#(&@@&@@@@@@@@@@@@@@@@@,........................................,,,,,,,*//////**,,,,,
//,,,,,........,,,*(@@@@&(((@@@@@@@@&@@@&@@@@@&@@@@@@@@@@@@@@&@@@&@@@%./#(.,*(##(/&&&@@@@@@@@@@@@&#@@%#%@@@@@@@@@@@&#(%@@@@@@@@@@@@@@@@@@@@@/... ....................,,...........,...,,,,,,********,,,,,,
//,,,,,.........,,,(#&@@@%#(@@@@@@@@&@@@&&@@@@@&@@@@@@@@@@@@@&@@@&@@@#%&@@*(##(%##&&%@@@@@@@@@@@@&@@@#@@@@@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@&.... ................. .,..................,,,,,,***/**,,,,,,,
//,,,,,..........,,(/(&@@@@#@@@@@@@@@&@@@&@@@&@@&&@@@@@@@@@@@&@@@&@@@@@@@@@&&&@@@@@@%@@@@@@@@@@@@&@@&@@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&..............................................,,,,,***,,,*,,,,,
//,,,,,.........,,,/(#(%@@@&@@@@@@@@@@%@@@&(,*...,,(.*&@@@@@@&@@@@@@@@@@@@@@@&@@@@@@%@@@@@@@@@@@@&&@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%#......................... .....................,,,,,*,,,,,,,,,,
///,**,,........,/%#(%#(((((@@@@@@@@@@@%&&&@@@*,,((##*%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@@@@@@@@@&@@@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#%%%%%%%%#(.........................................,,.,,,,,,,,,,,,,,,
////**,,,,,,..,*%%%%%#######@@@@@@@@@@@@%@&&@@@(##(&%%#@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%@@@&@@@@@@@@&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#%%%%%%%%%%%#%%%*........................................,,,,,.,*,,,,,,,,
//*////***/%&&%%%%%%##%%#%%%@@@@@@@@@@@&@&@@@&&@@&%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&@@@&@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#%%%%%%%%%%%%%%%###%/................. ..................,,,,,,,,,,,,,,....
///((##%@@@&&&&%%%%%%%%##%%%@@@@@@@@@@@%(%%&@@@&@@@@&@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@&@@@&@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@####%%%%%%%%%%%%%%%#%%##*,..... .............................,,,,.,,.,....,,,
///(%@@&@&&&@&%#%%%%%##%&&&%@@@@@@@@@@@&((*&#&&&&@&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@&@@@@@@&&@@@@@@&@@@@@@@@@@@@@@@@@@@@((%%%%%#%%%%%%%%%%%%%%##%#/*****,..,................,,,,,,,....,,,,,,.......,,,
///(&&&@@@@@@&&%%%######%%#%@@@@@@@@&@@&/*((%%%&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@&@@@@@@&&@@@@%&@@@@@@@@@@@@@@@@@@@#(##%%###%%%###%%%%%%%%#((###*********,...............,,****,...........,...,,,..
//&&&&@@@@&&&%%%#(////(####&@@@@@@@@#&@@*/***&&%%&@@&@@@@@@@@@@@@@@@@@@&&%&&@@@@@@&&@@&&@@@@@&&@&@&#&@@@@@@&@&&&&@@@@@@%(#%#(/%###%#%###((((#####%%####(/*******,,,,,,,***********,***,,.............,....
//%%%%%&&&%%%%%%%%###****((&@@@@@@@&(#@@#*****&&@@&&@@@@@@@@@@@@@###/*///(#%#&@@@@%@@&&@@@@@%&&@&%(&@&%@@@@@@@@@@@@&%&#(#(*/*#(#%#%####%##########%%####(*/*//*,,,,.,,,,,,,,,,,,,,,,,,...............,,,..
//#%%%%%%%%%%%%#%######(**/&@@@@@@@%(/(%&#%%#/*(@@@@@@@@@@@@@@@(*/**/#%##%%#&@@@@&@@@&@@@@&&@@@&##&&@@@@@&%%&&@@@@@@%(((/***##(*****/#%######%%###########/**/(*.............,,........ ............,.....
//*/(###%#(#((#(((((((((##(%&&@&@@&%////(&&%#&@@@&&@@@@@@@@@@@@@@%((%%%%%&@@@@@@@&@@%&@@&%%&&&&&@@@@@@%%&@&&&%%#%#(((///,///(((((##(((((((((#######((#######*#####*. ............. .......................
//#####(####(/&&&#(((#(((((%%&%&@@@&(///((#(&@@@@@@@@@&&@@@@@@@@@@@@@@@@@@@@@@@@%&@&@@&&@@@@@@@@@@@@@@@@@@@@@&(///(#####%(##(#((##((/(*/(##(###((####(#########((((((, ...................................
//###/###/#(#%@@@@&(##/@&@&%@%@@&%%%%##%%&@@@@@@@@@@@@@@@&#(%&@@@@@@@@@@@@@@@@&%&@&@%@&@@@@@@@@@&&%%%&&&%%@@@@@@#@@@@@&@@#(###&&@&(###%#((##(####(####/#########%(****,..... ..... .....................,*
//#((##/#/##(&@@@@@(##(@@@@@@&%%&&@@&%%%@@@@@@@@@@@@@@@@@@@@@&#(((%%&@@@@@@&#%&%&&%&@@@@@@@@@@@@@@@@@@@@@@@@&&&@@@%&@@@@@@@@@@@&###%%##%@#(##(#####(###(##########/****,. ................................
//#/(((/((###@@@@@&(##(@@@@@@@@@@@&@@@@@@@@&&%%%&&&&&&&&&&&&&&&&&#((##%&&%&%&@&&@&@@@@@@@@&#(((((((((((((#&@@@@%&@@@&&@@@@@@@@####%@/#(&@%/##(#######(##/#########*****,..................................
//(###/%(##(&@@@@@(##(&@@@@@@@@@@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%&&&%&&&&&&@@@@@@@@@@@@@@&%#((((((////((#&&&%&%&%&@@@@%(####@%##(&@%/(#((#######((#(#######(***,....................................
//##(%&#####@@@@@&/#(#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%&&&&&&%@@@@@@@@@@@@&@@@@@@@@&%&&@@@&@&%#(%&%&@@@@&%####(&@%##(@@&((############(/####%#(*,,.  .......... ........................
//(#%@&(##(%@@@@@&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&%%&%@@@@&%%##((#&&&&&&%&@@@@@@&%&@@@@@@@@@@&@@@%(####&@@###/@@&(################(###**,............... ........................
//(&&@####/&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&@@@@@@@@@@@@&&&&%&%%&@&#((////#&@@@@@@@@@@@&%&&@&&&&@@@@@@@@@@@&(#####@@@###(@&&###################(((##########/,......   .............      . 
//%@@&/#(((@@@@@@@@@@@@@@@@@@@@@@@@@@@&@@@@&%#((((((((((((((((%&&&@@@@%&&%@@&((//(/*//(/(((/(((((((((##%%&&&&&@@@@@@@@@@@%(#####@@@(##(&@%#######################((((######/**,*****,                     
//((((/(#/&@@@@@@@@@@@@@@@&&&@@&&%#((((/(((//(///*******/**//*****///(/&&/((/***************,,,,,,*//////(((//((((((#%%&&%(####%@&@(##(&&((#############################(/******/*/****..                 
//,*/*((#/%%&&&&&&&%%##((((((/////*****//////////(/////(///**///////((/%/(//*************************,,******//////(////(/*((#(/(/(((##*(//#################################(/**/***/////**,.     .       
//////**/,****///***,**,**,,,*,***/(////****////**/(((///////*///((((////(//*****************/**********//*//**********/***,**,,**,/#(#/**/**/(((((###(((######(####((##(##(((/#***//*/*******************
//******////*****/***/(**,,,,,,,,***(/(//(/**//((//**/((///////////(/****/********,*************************/********//*/*(/(//*****((((****////**/(((//***//(####(####(((/(////*///*///*********/*****///
#include <iostream>
#include <complex>
#include <vector>
#include <string>
#include <algorithm>
#include <cstdio>
#include <numeric>
#include <cstring>
#include <ctime>
#include <cstdlib>
#include <set>
#include <map>
#include <unordered_map>
#include <unordered_set>
#include <list>
#include <cmath>
#include <bitset>
#include <cassert>
#include <queue>
#include <stack>
#include <deque>
#include <random>
 
using namespace std;
template<typename T1, typename T2> inline bool chkmin(T1 &a, T2 b) {
	if (a > b) {
		a = b;
		return true;
	}
	return false;
}
template<typename T1, typename T2> inline bool chkmax(T1 &a, T2 b) {
	if (a < b) {
		a = b;
		return true;
	}
	return false;
}
#define files(FILENAME) read(FILENAME); write(FILENAME)
#define read(FILENAME) freopen((FILENAME + ".in").c_str(), "r", stdin)
#define write(FILENAME) freopen((FILENAME + ".out").c_str(), "w", stdout)
#define all(c) (c).begin(), (c).end()
#define sz(c) (int)(c).size()
#define left left228
#define right right228
#define y1 y1228
#define mp make_pair
#define pb push_back
#define y2 y2228
#define rank rank228
using ll = long long;
using ld = long double; 
const int MAXN = 200228;


int n, k;
vector<int> g[MAXN];
int rep[MAXN];
ll s[MAXN];


void dfs(int u) {
	for (auto h: g[u]) {
		dfs(h);
	}
	if (sz(g[u]) == 1) {
		rep[u] = rep[g[u][0]];
		s[rep[g[u][0]]] += s[u];
	} else {
		rep[u] = u;
	}
}


map<int, ll> dp[MAXN];


ll calcdp(int u, ll val) {
	if (val == 0) {
		return 0;
	}
	if (sz(g[u]) == 0) {
		return val * s[u];
	}
	if (dp[u].find(val) != dp[u].end()) {
		return dp[u][val];
	}
	ll add = s[u] * val;
	ll base = val / sz(g[u]);
	if (val % sz(g[u]) == 0) {
		for (auto h: g[u]) {
			int rh = rep[h];
			add += calcdp(rh, base);
		}
		dp[u][val] = add;
		return add;
	}
	vector<ll> sk;
	for (auto h: g[u]) {
		int rh = rep[h];
		ll val = calcdp(rh, base);
		add += val;
		sk.pb(calcdp(rh, base + 1) - val);
	}
	sort(all(sk));
	reverse(all(sk));
	for (int i = 0; i < val % sz(g[u]); i++) {
		add += sk[i];
	}
	dp[u][val] = add;
	return add;
}


void solve() {
	cin >> n >> k;
	for (int i = 0; i < n; i++) {
		g[i].clear();
	}	
	for (int i = 1; i < n; i++) {
		int p;
		cin >> p;
		p--;
		g[p].pb(i);
	}
	for (int i = 0; i < n; i++) {
		cin >> s[i];
		dp[i].clear();
	}
	dfs(0);
	cout << calcdp(rep[0], k) << '\n';
}


int main(){
	cin.tie(0)->sync_with_stdio(0);
	int t;
	t = 1;
	cin >> t;
	while (t--) {
		solve();
	}
}