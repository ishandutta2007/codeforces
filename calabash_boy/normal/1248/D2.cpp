/* Generated by powerful Codeforces Tool
 * Author: calabash_boy_love_15 
 * Time: 2019-11-02 18:39:43
 * Personal Code Template: https://github.com/4thcalabash/ACM-Code-Library
**/
#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#ifdef __LOCAL_DEBUG__
# define _debug(fmt, ...) fprintf(stderr, "\033[91m[%s %3d]: " fmt "\n\033[0m", \
  __func__,__LINE__, ##__VA_ARGS__)
#else
# define _debug(...) (void(0))
#endif
#define PB(x) push_back(x)
#define rep(i,l,r) for (int i = l,_ = r;i< _;i++)
#define REP(i,l,r) for (int i=l,_=r;i<=_;i++)
#define leave(x) do {cout<<#x<<endl;fflush(stdout);return 0;}while (0);
#define untie do{ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}while (0)
#define range(x) x.begin(),x.end()
typedef long long LL;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef long double db;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int inf = 0x3f3f3f3f;
const ll inf_ll = 0x3f3f3f3f3f3f3f3fLL;
/************* header ******************/
const int maxn = 3e5 + 100;
int sum[maxn];
char s[maxn];
char t[maxn];
int n;
int cnt1[maxn];
int cnt2[maxn];
int pos[maxn];
pair<int,pair<int,int> > ans = {0,{1,1}};
int main(){
    cin>>n;
    cin>>s+1;
    int min_pos = 1;
    for (int i=1;i<=n;i++){
        sum[i] = sum[i-1] + (s[i] == '('?1:-1);
        if (sum[i] < sum[min_pos])min_pos = i;
    }
    if (sum[n]!= 0){
        cout<<0<<endl<<"1 1"<<endl;
        return 0;
    }
    int now = 1;
    for (int i=min_pos+1;i<=n;i++){
        t[now] = s[i];
        pos[now++] = i;
    }
    for (int i=1;i<=min_pos;i++){
        t[now] = s[i];
        pos[now++] = i;
    }
    int part = 0;
    vector<int> ones(0);
    vector<int> zeros(0);
    zeros.push_back(0);
    for (int i=1;i<=n;i++){
        sum[i] = sum[i-1] + (t[i] == '('?1:-1);
        if (sum[i] == 0)zeros.push_back(i);
        if (sum[i] ==1 || sum[i] == 0)ones.push_back(i);
        cnt2[i] = cnt2[i-1];
        cnt2[i] += sum[i] == 2;
        cnt1[i] = cnt1[i-1];
        cnt1[i] += sum[i] == 1;
        part += sum[i] == 0;
    }
    ans.first = part;
    int r = ones.back();
    ones.pop_back();
    while (!ones.empty()){
        int l = ones.back();
        ones.pop_back();
        if (l + 1 <= r - 1 and t[l+1] == '(' and t[r] == ')')
            ans = max(ans,make_pair(part + cnt2[r] - cnt2[l],make_pair(l+1,r)));
        r = l;
    }
    r = zeros.back();
    zeros.pop_back();
    while (!zeros.empty()){
        int l = zeros.back();
        zeros.pop_back();
        if (l + 1 <= r - 1 and t[l + 1] == '(' and t[r] == ')')
            ans = max(ans,make_pair(cnt1[r-1] - cnt1[l],make_pair(l+1,r)));
        r = l;
    }
    cout<<ans.first<<endl<<pos[ans.second.first]<<" "<<pos[ans.second.second]<<endl;
    return 0;
}