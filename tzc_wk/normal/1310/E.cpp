#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define fill0(a) memset(a,0,sizeof(a))
#define fill1(a) memset(a,-1,sizeof(a))
#define fillbig(a) memset(a,63,sizeof(a))
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define mt make_tuple
#define eprintf(...) fprintf(stderr,__VA_ARGS__)
template<typename T1,typename T2> void chkmin(T1 &x,T2 y){if(x>y) x=y;}
template<typename T1,typename T2> void chkmax(T1 &x,T2 y){if(x<y) x=y;}
typedef pair<int,int> pii;
typedef long long ll;
typedef unsigned int u32;
typedef unsigned long long u64;
typedef long double ld;
namespace fastio{
	#define FILE_SIZE 1<<23
	char rbuf[FILE_SIZE],*p1=rbuf,*p2=rbuf,wbuf[FILE_SIZE],*p3=wbuf;
	inline char getc(){return p1==p2&&(p2=(p1=rbuf)+fread(rbuf,1,FILE_SIZE,stdin),p1==p2)?-1:*p1++;}
	inline void putc(char x){(*p3++=x);}
	template<typename T> void read(T &x){
		x=0;char c=getchar();T neg=0;
		while(!isdigit(c)) neg|=!(c^'-'),c=getchar();
		while(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();
		if(neg) x=(~x)+1;
	}
	template<typename T> void recursive_print(T x){return (!x)?void():(recursive_print(x/10),putc(x%10^48),void());}
	template<typename T> void print(T x){(!x)&&(putc('0'),0);(x<0)&&(putc('-'),x=~x+1);recursive_print(x);}
	template<typename T> void print(T x,char c){print(x);putc(c);}
	void print_final(){fwrite(wbuf,1,p3-wbuf,stdout);}
}
const int MAXN=2020;
const int MOD=998244353;
int n,k;
namespace ONE{
	int dp[MAXN+5];
	void solve(){
		dp[0]=1;
		for(int i=1;i<=n;i++) for(int j=i;j<=n;j++) dp[j]=(dp[j]+dp[j-i])%MOD;
		int res=0;for(int i=1;i<=n;i++) res=(res+dp[i])%MOD;
		printf("%d\n",res);
	}
}
namespace TWO{
	const int SQRT=63;
	int dp[SQRT+5][MAXN+5];
	void solve(){
		int cur=1,pre=0;dp[0][0]=1;
		for(int i=n;i;i--){
			for(int j=0;j<=SQRT;j++) for(int l=0;l<=n;l++){
				if(dp[j][l]&&l+(j+1)*i<=n){
					dp[j+1][l+(j+1)*i]=(dp[j+1][l+(j+1)*i]+dp[j][l])%MOD;
				}
			}
			swap(cur,pre);
		} int res=0;
		for(int j=1;j<=SQRT;j++) for(int l=1;l<=n;l++)
			res=(res+dp[j][l])%MOD;
		printf("%d\n",res);
	}
}
namespace THREE{
	const int table[]={0,1,1,2,3,3,4,5,5,5,7,8,8,9,10,11,12,12,13,14,15,16,18,18,19,21,21,22,24,25,25,27,28,28,30,33,34,35,36,38,39,41,43,44,44,45,48,49,51,53,55,56,57,58,59,63,67,67,70,72,72,75,76,78,79,82,84,86,87,89,93,96,98,101,102,103,106,109,110,114,119,121,124,125,128,130,133,133,137,139,142,146,149,151,155,157,160,164,167,168,172,178,180,183,185,190,193,196,200,204,206,209,213,218,219,222,227,228,231,236,242,245,248,251,255,260,267,272,274,278,283,285,290,296,301,302,308,314,316,323,329,333,336,339,343,347,352,359,363,368,371,377,382,384,392,400,402,406,413,417,422,432,437,444,451,453,458,463,469,472,479,487,492,496,501,513,520,526,534,537,538,545,550,554,562,571,577,584,590,595,602,613,621,627,635,641,647,653,655,667,677,684,691,699,704,709,720,726,733,742,751,758,765,772,779,785,797,805,813,818,827,835,840,848,857,869,880,887,894,903,913,921,934,942,950,957,967,977,986,994,1000,1014,1023,1031,1044,1054,1063,1071,1080,1089,1097,1109,1118,1129,1137,1146,1159,1169,1176,1185,1197,1209,1218,1231,1237,1250,1265,1274,1283,1295,1308,1319,1333,1345,1354,1364,1373,1383,1395,1408,1424,1437,1446,1456,1469,1479,1496,1513,1518,1530,1549,1561,1573,1582,1594,1605,1618,1625,1639,1650,1665,1680,1692,1707,1721,1729,1740,1755,1773,1784,1803,1826,1836,1844,1856,1873,1885,1899,1913,1927,1938,1949,1969,1989,2005,2019,2034,2047,2060,2079,2093,2109,2130,2141,2156,2176,2189,2202,2215,2237,2249,2266,2282,2296,2313,2326,2341,2361,2373,2388,2403,2421,2435,2452,2468,2485,2509,2529,2549,2565,2584,2602,2618,2631,2651,2673,2690,2707,2721,2735,2755,2773,2793,2816,2833,2851,2870,2888,2910,2934,2956,2977,2996,3011,3027,3052,3076,3088,3105,3128,3144,3163,3186,3202,3224,3244,3267,3288,3305,3320,3342,3370,3393,3413,3429,3451,3478,3502,3520,3545,3567,3579,3599,3629,3647,3670,3701,3722,3738,3765,3790,3811,3834,3857,3880,3901,3928,3952,3978,3994,4023,4050,4068,4092,4122,4139,4159,4192,4214,4240,4264,4293,4314,4332,4361,4387,4408,4438,4464,4486,4504,4540,4572,4591,4621,4649,4669,4695,4720,4747,4772,4804,4839,4864,4895,4910,4937,4967,4990,5022,5053,5081,5106,5133,5156,5190,5231,5258,5286,5319,5347,5369,5391,5427,5456,5489,5524,5555,5581,5606,5638,5674,5701,5724,5760,5783,5819,5852,5878,5905,5946,5982,6010,6042,6070,6098,6134,6162,6189,6219,6255,6289,6323,6352,6385,6424,6465,6502,6532,6566,6595,6626,6657,6686,6716,6759,6801,6829,6861,6892,6926,6960,7001,7038,7066,7101,7143,7178,7216,7259,7294,7334,7377,7414,7450,7487,7526,7557,7593,7622,7662,7699,7726,7775,7816,7858,7895,7933,7961,7993,8032,8083,8126,8165,8200,8237,8275,8321,8361,8408,8447,8479,8516,8550,8591,8629,8673,8724,8763,8797,8834,8885,8925,8967,9022,9061,9099,9145,9178,9217,9264,9305,9347,9392,9437,9481,9528,9573,9625,9668,9706,9751,9789,9832,9877,9937,9981,10022,10074,10120,10170,10220,10273,10307,10349,10395,10453,10496,10526,10577,10626,10664,10726,10777,10816,10860,10919,10956,11000,11057,11103,11146,11206,11252,11303,11362,11417,11464,11509,11552,11607,11667,11712,11763,11809,11853,11893,11946,12001,12052,12114,12171,12214,12266,12324,12376,12432,12491,12547,12604,12658,12711,12766,12808,12865,12924,12973,13038,13094,13146,13191,13253,13313,13367,13426,13485,13542,13600,13656,13711,13762,13825,13879,13934,13986,14046,14112,14169,14224,14281,14344,14409,14468,14519,14563,14636,14699,14755,14821,14873,14934,15000,15063,15128,15189,15247,15313,15374,15434,15496,15556,15604,15664,15733,15799,15865,15936,15989,16048,16112,16177,16255,16332,16384,16443,16514,16581,16646,16721,16792,16851,16920,16989,17044,17110,17187,17257,17330,17402,17467,17526,17580,17653,17716,17788,17869,17943,18008,18070,18142,18212,18287,18363,18429,18496,18562,18636,18716,18788,18857,18929,18996,19066,19136,19215,19284,19358,19436,19496,19578,19661,19739,19808,19881,19955,20028,20105,20178,20240,20322,20400,20476,20560,20627,20702,20780,20861,20949,21026,21104,21170,21258,21334,21412,21503,21579,21660,21746,21823,21901,21989,22064,22145,22217,22299,22390,22475,22560,22644,22728,22790,22879,22969,23055,23130,23221,23292,23364,23455,23548,23640,23734,23825,23894,23979,24063,24157,24244,24323,24418,24514,24595,24685,24765,24841,24925,25030,25115,25205,25302,25394,25488,25572,25661,25746,25837,25918,26020,26107,26173,26279,26388,26471,26559,26654,26743,26834,26934,27024,27110,27209,27313,27407,27489,27581,27680,27790,27897,28000,28093,28174,28277,28384,28472,28576,28687,28780,28862,28964,29062,29152,29280,29378,29455,29552,29661,29759,29862,29962,30056,30163,30272,30370,30482,30573,30686,30805,30900,30995,31099,31211,31293,31421,31544,31642,31747,31863,31960,32052,32163,32269,32370,32482,32588,32693,32792,32905,33025,33131,33245,33358,33466,33575,33673,33782,33882,33998,34110,34217,34330,34427,34554,34674,34788,34917,35025,35136,35239,35359,35468,35596,35722,35826,35932,36050,36158,36279,36404,36516,36628,36748,36869,37007,37129,37232,37356,37482,37598,37708,37847,37961,38077,38207,38316,38427,38554,38684,38811,38928,39062,39186,39298,39419,39551,39696,39822,39941,40075,40174,40287,40424,40570,40701,40836,40968,41080,41194,41327,41465,41598,41747,41877,41993,42110,42231,42373,42504,42643,42781,42895,43011,43156,43277,43403,43550,43698,43825,43955,44087,44210,44353,44509,44657,44792,44924,45065,45198,45316,45452,45602,45729,45867,46031,46160,46296,46444,46595,46732,46882,47022,47159,47310,47457,47596,47721,47863,48018,48158,48293,48441,48586,48723,48870,49024,49173,49330,49494,49635,49774,49927,50088,50238,50401,50543,50685,50830,50969,51127,51287,51414,51573,51745,51886,52030,52197,52339,52482,52661,52795,52943,53112,53281,53432,53585,53745,53890,54053,54206,54364,54519,54667,54852,55017,55168,55322,55484,55639,55785,55948,56116,56274,56455,56619,56772,56929,57083,57236,57413,57587,57746,57930,58090,58243,58421,58594,58781,58969,59135,59283,59447,59630,59798,59980,60143,60305,60472,60635,60801,60961,61142,61323,61515,61688,61856,62032,62175,62354,62551,62727,62902,63087,63273,63438,63624,63794,63972,64164,64362,64536,64713,64893,65064,65254,65431,65625,65814,65999,66174,66354,66520,66720,66908,67096,67269,67459,67647,67831,68019,68195,68374,68580,68768,68950,69135,69319,69516,69712,69913,70084,70291,70450,70659,70870,71049,71227,71430,71646,71823,72034,72221,72407,72604,72828,73033,73221,73414,73607,73801,73993,74195,74403,74594,74789,75022,75218,75421,75635,75827,76018,76238,76456,76636,76839,77062,77264,77478,77692,77904,78081,78282,78502,78724,78931,79130,79351,79548,79755,79979,80188,80412,80636,80854,81069,81253,81456,81680,81907,82140,82373,82576,82769,82994,83219,83431,83655,83904,84137,84341,84552,84764,84982,85218,85463,85685,85901,86116,86352,86579,86769,86990,87229,87449,87660,87894,88113,88332,88593,88831,89048,89278,89514,89739,89970,90187,90427,90662,90902,91150,91377,91600,91834,92088,92315,92529,92780,93011,93255,93518,93739,93965,94230,94493,94739,94973,95213,95432,95669,95908,96156,96412,96663,96902,97140,97359,97586,97845,98092,98347,98624,98874,99117,99374,99620,99873,100113,100398,100658,100903,101156,101392,101637,101889,102146,102409,102658,102919,103189,103425,103675,103944,104204,104475,104770,105024,105279,105572,105824,106073,106334,106578,106842,107118,107364,107638,107903,108165,108441,108734,108988,109238,109508,109778,110039,110308,110574,110838,111139,111420,111686,111939,112212,112488,112763,113038,113312,113581,113844,114150,114420,114699,114968,115276,115573,115839,116138,116417,116699,116992,117246,117521,117827,118090,118379,118686,118964,119240,119561,119848,120112,120417,120702,120985,121287,121575,121855,122141,122440,122722,123010,123303,123588,123908,124204,124492,124790,125096,125383,125707,125998,126297,126629,126931,127222,127542,127859,128144,128465,128754,129066,129366,129657,129936,130252,130566,130893,131227,131546,131854,132155,132467,132788,133093,133406,133694,134000,134311,134612,134918,135254,135584,135905,136233,136543,136836,137144,137468,137823,138163,138470,138807,139114,139443,139804,140116,140417,140768,141072,141376,141702,142021,142347,142697,143031,143346,143674,144013,144353,144690,145014,145355,145697,146024,146385,146725,147041,147379,147748,148105,148421,148769,149127,149430,149778,150112,150436,150790,151156,151506,151830,152172,152496,152845,153191,153544,153915,154266,154631,155017,155362,155682,156042,156398,156718,157072,157432,157780,158145,158507,158884,159236,159599,159982,160331,160677,161034,161401,161775,162142,162527,162876,163236,163650,164023,164368,164727,165139,165497,165837,166219,166583,166947,167290,167682,168062,168412,168800,169173,169533,169916,170323,170683,171044,171438,171844,172212,172606,173004,173372,173752,174112,174504,174891,175272,175661,176062,176443,176820,177216,177588,177954,178367,178802,179195,179576,179994,180367,180777,181193,181568,181953,182360,182776,183195,183543,183937,184366,184739,185166,185581,185964,186353,186788,187198,187571,187970,188390,188782,189220,189656,190063,190452,190880,191317,191706,192101,192522,192958,193346,193747,194193,194607,195020,195442,195848,196241,196687,197121,197545,197991,198450,198869,199282,199696,200119,200563,201001,201484,201933,202310,202738,203186,203599,204047,204510,204937,205343,205796,206233,206654,207108,207550,207983,208454,208855,209293,209768,210185,210640,211095,211535,211980,212452,212895,213323,213786,214257,214682,215127,215590,216019,216490,216953,217402,217857,218317,218798,219260,219722,220211,220690,221144,221579,222035,222480,222945,223429,223890,224353,224799,225264,225729,226230,226705,227148,227622,228096,228560,229075,229537,229992,230506,230958,231445,231932,232412,232869,233404,233887,234335,234799,235279,235771,236281,236738,237222,237722,238228,238716,239224,239711,240175,240716,241219,241712,242205,242697,243171,243686,244173,244626,245122,245675,246172,246689,247204,247689,248191,248670,249185,249702,250191,250733,251297,251786,252285,252847,253400,253882,254389,254895,255393,255921,256473,256982,257462,257983,258517,259038,259548,260092,260598,261132,261656,262191,262704,263245,263779,264334,264838,265393,265935,266484,267061,267588,268090,268607,269131,269645,270194,270690,271262,271830,272357,272903,273479,274013,274567,275160,275682,276219,276802,277357,277854,278436,279004,279553,280113,280674,281216,281759,282337,282916,283490,284026,284553,285091,285657,286201,286786,287361,287899,288488,289071,289604,290204,290800,291392,292012,292556,293099,293667,294252,294843,295430,295989,296591,297174,297747,298307,298908,299463,300054,300683,301250,301807,302396,303016,303585,304196,304827,305434,306041,306671,307231,307819,308417,309030,309633,310231,310811,311433,312014,312584,313215,313823,314423,315062,315676,316260,316865,317521,318134,318757,319355,319963,320595,321209,321835,322444,323034,323680,324341,324957,325563,326213,326808,327398,328047,328694,329310,329942,330614,331244,331844,332518,333158,333778,334434,335048,335679,336298,336963,337642,338286,338920,339601,340253,340860,341523,342167,342790,343433,344094,344743,345373,346050,346691,347317,347990,348679,349369,350032,350696,351348,351963,352645,353338,353995,354622,355298,355984,356644,357329,358012,358715,359345,360016,360707,361362,362025,362710,363431,364118,364797,365512,366171,366851,367596,368257,368929,369664,370374,371016,371704,372395,373083,373802,374493,375188,375881,376577,377319,378042,378731,379413,380138,380834,381513,382256,382934,383632,384390,385118,385807,386551,387261,387962,388697,389405,390093,390830,391563,392278,393012,393678,394401,395176,395952,396666,397400,398111,398815,399553,400316,401010,401762,402531,403271,403975,404699,405459,406206,406985,407716,408478,409194,409924,410671,411432,412148,412925,413682,414441,415223,415981,416745,417539,418303,419009,419773,420519,421312,422079,422819,423590,424384,425112,425895,426674,427446,428195,428996,429751,430500,431327,432111,432897,433679,434455,435193,436039,436852,437637,438418,439237,439989,440731,441536,442311,443096,443905,444714,445538,446336,447112,447937,448732,449543,450365,451174,451945};
	void solve(){printf("%d\n",table[n]);}
}
namespace FOUR{
	const int table[]={0,1,1,1,2,2,2,3,3,3,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,7,7,7,8,8,8,8,8,8,8,10,10,10,10,10,10,11,12,12,12,12,12,12,12,12,12,12,12,13,13,13,14,14,14,14,14,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,17,18,18,18,19,20,20,21,21,21,21,21,21,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,26,26,26,26,26,26,26,26,26,26,27,27,28,28,28,28,28,28,28,28,28,29,29,29,30,30,30,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,33,33,33,33,33,33,33,35,35,35,35,35,35,35,36,36,36,36,36,36,37,37,37,38,39,40,41,41,41,41,41,41,41,41,41,42,42,42,42,42,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,47,47,47,48,48,48,48,48,48,48,49,49,49,51,51,52,52,52,52,52,52,53,53,53,53,53,53,53,54,54,54,54,54,54,55,55,55,55,56,56,56,56,56,57,57,57,57,57,57,57,57,57,57,58,58,59,60,60,60,60,60,60,60,60,60,60,60,60,61,62,62,62,62,62,62,62,64,64,64,64,64,64,65,65,66,66,67,67,68,68,69,69,69,69,69,69,70,70,70,70,70,70,71,71,71,71,71,71,71,71,71,71,73,73,73,73,73,73,73,73,75,75,75,75,75,75,76,76,76,76,76,76,77,78,78,79,79,79,80,80,80,80,81,81,81,81,81,81,82,83,83,83,83,83,84,84,84,84,84,84,84,84,84,85,86,86,87,88,88,88,88,88,88,88,88,89,89,89,89,89,89,90,90,90,90,90,90,90,90,90,90,91,91,93,93,93,94,94,94,94,94,94,94,95,95,95,95,95,96,98,98,98,99,99,99,99,99,99,99,99,99,99,100,100,101,101,101,101,101,101,101,101,102,102,102,102,102,102,102,102,103,103,103,104,104,105,105,105,106,106,106,106,106,106,106,106,107,108,108,109,109,110,110,111,111,111,111,111,111,111,111,111,111,112,112,112,113,113,114,114,114,114,114,114,115,115,116,118,118,118,118,119,119,119,120,120,120,121,121,121,121,122,122,123,123,123,124,124,124,124,125,125,125,125,125,126,126,126,126,126,126,126,126,126,126,127,127,127,127,128,128,128,128,129,130,130,130,130,130,131,131,131,131,132,132,132,134,134,134,135,136,136,136,137,137,137,137,137,138,139,139,139,139,139,140,141,141,142,142,142,142,142,142,143,144,144,144,144,144,144,144,145,145,145,145,146,146,146,146,146,146,146,146,146,146,148,148,148,149,149,149,150,151,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,154,154,154,155,155,155,155,155,156,156,156,156,156,158,158,159,159,159,159,161,161,162,162,162,162,162,162,163,163,163,163,163,163,163,164,164,165,165,165,167,167,167,167,169,169,169,169,169,169,169,169,170,170,170,170,172,172,172,172,172,172,172,172,172,173,173,174,175,175,175,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,177,177,177,177,177,177,178,179,179,180,180,180,181,181,183,184,184,184,185,185,185,185,185,185,186,186,186,186,187,187,187,187,188,190,190,191,191,191,191,191,192,192,192,192,192,192,192,192,193,193,193,193,194,194,194,196,196,196,197,197,197,197,198,198,198,198,198,198,198,199,199,200,201,203,203,203,203,203,203,203,203,204,205,206,206,206,206,206,206,206,206,207,207,207,208,209,209,209,209,209,209,209,210,210,210,210,211,211,211,211,212,213,213,213,213,214,215,215,215,216,216,217,217,217,217,218,220,220,220,220,222,222,222,222,222,222,222,222,222,223,223,223,223,223,223,223,224,224,224,225,225,226,227,229,230,231,231,231,231,231,231,232,232,232,232,232,232,232,232,232,233,233,234,234,235,235,235,235,235,235,236,236,237,237,237,238,238,238,238,239,239,239,239,239,240,242,242,242,242,242,242,242,242,242,243,243,244,246,246,246,247,247,247,247,247,247,247,248,250,250,251,251,252,253,254,254,254,255,256,256,256,256,256,256,256,256,256,256,257,257,257,257,257,258,258,258,259,259,259,259,259,259,259,259,259,261,261,261,261,261,261,261,261,261,261,261,262,262,263,263,263,263,264,265,266,266,266,266,266,268,268,268,268,269,269,270,270,270,271,271,271,272,272,273,273,274,274,275,275,275,276,276,277,277,277,277,277,278,278,279,279,279,279,279,279,279,279,279,280,281,281,283,283,283,284,284,284,284,284,285,285,286,286,286,288,288,290,290,290,290,290,290,290,291,291,291,291,291,291,291,291,292,293,293,293,294,294,297,298,298,298,298,298,299,300,300,300,301,301,301,301,301,301,302,302,302,302,302,302,304,304,304,304,304,306,306,306,306,306,306,306,308,308,308,309,309,309,309,310,310,310,310,310,310,310,310,311,311,311,311,311,311,311,311,312,312,313,313,314,315,315,315,316,316,318,318,319,319,319,319,321,321,321,322,323,324,324,325,325,325,325,325,325,325,325,326,327,328,329,329,329,329,329,329,331,333,333,334,334,335,335,336,336,336,337,337,337,337,338,338,338,338,338,339,339,339,339,339,339,340,340,341,343,344,344,344,344,344,344,345,346,346,346,346,347,347,347,347,347,347,348,348,349,349,351,351,351,352,352,352,353,353,353,353,353,353,353,354,354,354,355,355,355,355,356,357,357,358,358,358,359,360,360,360,360,360,360,361,361,361,362,362,363,363,363,363,364,365,367,367,367,367,370,370,370,370,370,370,370,371,371,371,372,372,372,372,373,373,373,373,373,374,374,374,375,375,375,375,376,376,378,378,378,378,378,379,380,380,381,381,382,382,382,384,384,384,384,384,384,384,384,384,385,385,385,386,387,387,387,387,387,388,388,389,390,390,393,393,394,395,395,395,395,395,396,396,396,396,396,397,397,397,397,399,400,400,401,401,401,403,403,403,403,403,403,403,403,403,403,404,404,404,405,405,405,405,405,406,406,407,407,408,408,410,410,410,410,410,410,410,410,411,411,411,411,412,414,414,414,414,414,414,415,415,416,418,419,419,419,419,419,420,420,420,420,420,420,421,422,422,422,422,422,422,423,423,423,423,423,425,425,426,426,427,429,429,430,430,432,432,432,432,432,432,433,433,433,433,433,433,434,434,434,434,434,435,436,436,436,439,439,439,440,440,440,441,441,441,442,442,442,443,443,443,443,443,443,443,444,446,447,447,447,448,448,448,448,448,448,448,448,448,449,450,450,451,451,451,452,453,453,453,454,454,456,456,456,457,458,458,459,459,460,461,461,461,461,461,461,461,463,463,464,464,464,464,464,464,466,466,466,466,467,467,467,468,469,469,469,469,469,469,470,471,471,472,474,474,475,476,477,477,478,481,481,481,482,482,482,482,483,483,483,483,483,483,483,484,484,485,486,486,486,487,489,489,489,489,489,489,492,492,492,493,494,494,494,494,494,494,494,494,494,494,494,494,494,494,495,496,496,497,497,497,498,498,498,500,501,502,504,504,504,504,504,504,504,505,505,506,506,506,507,508,508,509,509,510,510,510,510,510,511,512,512,512,513,513,513,513,514,515,515,515,515,515,517,518,518,519,520,520,520,521,521,521,521,521,521,521,521,522,522,522,524,526,527,527,527,527,527,528,530,530,531,532,532,532,533,534,534,534,534,534,534,534,535,536,536,536,536,537,539,539,539,540,541,542,542,543,544,544,544,545,546,547,547,547,547,547,548,548,548,548,550,550,550,550,551,552,552,552,552,552,552,552,552,552,553,553,553,554,554,554,554,555,555,558,559,560,560,560,561,561,561,562,562,562,563,563,563,563,563,563,564,565,567,567,567,568,568,568,569,569,569,569,569,569,570,572,572,572,572,572,572,574,574,575,575,577,578,579,580,581,582,582,582,582,582,582,583,584,584,584,584,584,584,584,584,585,586,586,587,588,590,590,590,590,590,590,591,592,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,593,596,596,597,599,599,600,601,602,602,602,602,602,602,603,603,603,603,603,603,604,604,604,604,604,605,606,606,608,608,609,609,611,611,611,611,612,613,615,615,615,616,616,616,617,618,618,618,619,619,619,619,620,621,621,621,621,621,622,622,622,623,624,624,624,626,627,628,628,628,628,628,629,629,630,630,631,631,631,632,634,635,635,635,635,635,636,636,636,636,636,637,637,637,638,639,640,640,640,640,640,641,642,642,642,643,643,644,645,646,648,649,649,649,650,651,651,652,652,652,652,652,652,652,652,652,653,653,654,655,655,656,657,657,657,657,657,660,662,662,662,663,663,664,665,665,665,666,666,666,666,666,666,666,666,666,666,666,667,669,669,669,669,669,670,672,672,672,673,673,673,673,674,674,674,674,676,676,676,676,677,678,678,679,680,682,682,683,684,685,685,685,685,685,686,687,687,687};
	void solve(){printf("%d\n",table[n]);}
}
namespace FIVE{
	int a[11],res=0;
	bool check(int len){
		if(!len) return 0;
		vector<int> b;
		for(int i=1;i<=len;i++) b.pb(a[i]);
		for(int i=1;i<=k-2;i++){
			if(b.size()>63) return 0;
			vector<int> c;int sum=0;
			for(int j=(int)(b.size())-1;~j;j--){
				sum++;
				for(int k=1;k<=b[j];k++) c.pb(sum);
			} swap(b,c);
		} int sum=0;ll t=0;
		for(int j=(int)(b.size())-1;~j;j--){
			sum++;t+=1ll*sum*b[j];
		} return t<=n;
	}
	void dfs(int x,int sum,int pre){
		if(x>11||sum>11) return;
		if(check(x-1)) res++;
		for(int i=pre;i<=11-sum;i++){
			a[x]=i;dfs(x+1,sum+i,i);a[x]=0;
		}
	}
	void solve(){dfs(1,0,1);printf("%d\n",res);}
}
int main(){
//	freopen("function.in","r",stdin);
//	freopen("function.out","w",stdout);
	scanf("%d%d",&n,&k);
	if(k>=11) return puts("1"),0;
	if(k==1) ONE::solve();
	else if(k==2) TWO::solve();
	else if(k==3) THREE::solve();
	else if(k==4) FOUR::solve();
	else FIVE::solve();
	return 0;
}