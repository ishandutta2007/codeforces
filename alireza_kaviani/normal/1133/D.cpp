/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-03-28 18:41:53
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll n , ans , A[MAXN] , B[MAXN];
map<pll , ll> cnt;

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> n;
    for(ll i = 1 ; i <= n ; i++)    cin >> A[i];
    for(ll i = 1 ; i <= n ; i++)    cin >> B[i];

    for(ll i = 1 ; i <= n ; i++){
        if(A[i] == 0){
            ans += (B[i] == 0);
            continue;
        }
        pll x = {-B[i] , A[i]};
        ll g = __gcd(abs(B[i]) , abs(A[i]));
        if(B[i] > 0 || B[i] == 0 && A[i] < 0)    g *= -1;
        x.X /= g;
        x.Y /= g;
        cnt[x]++;
    }

    ll mx = 0;
    for(auto &i : cnt)  mx = max(mx , i.Y);
    cout << ans + mx << endl;

    return 0;
}
/*

*/