#include <bits/stdc++.h>

using namespace std;

using i64=long long;
using u64=unsigned long long;
using db=double;
using pii=pair<int,int>;
using vi=vector<int>;

template<typename T>
inline T read(){
    T x=0,f=0;char ch=getchar();
    while(!isdigit(ch)) f|=(ch=='-'),ch=getchar();
    while(isdigit(ch)) x=x*10+(ch-'0'),ch=getchar();
    return f?-x:x;
}

#define rdi read<int>
#define rdi64 read<i64>
#define fi first
#define se second
#define pb push_back

i64 query(i64 x){
    cout<<"? "<<x<<endl;
    return rdi();
}

const int pr[]={2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997};
const pair<i64,int> q[]={
{614889782588491410,53},
{38655288426304091,97},
{22125549654501673,137},
{316773187163046517,179},
{9879251463499721,223},
{39049078408188253,257},
{108538288030848139,293},
{309619196508457007,347},
{796229312542859009,383},
{4064625951224869,421},
{6860596063872959,457},
{10626236358872441,491},
{17092564102090369,541},
{30150641449095443,577},
{43889293834596251,613},
{60888412234461547,647},
{83850965748659689,683},
{122610116602749401,733},
{174123625045688707,769},
{244629182107482857,821},
{331523275336187063,857},
{433432014951605099,887},
{586300278030425213,941},
{779063344180506659,983},
};

const int MX=1e9;

void solve(){
    i64 ans=1,mul=1;
    int cnt=0;
    for(int i=0,p=0;;i++){
        if(cnt>=22) 
            break;
        int g=query(q[i].fi);++cnt;
        for(;pr[p]<q[i].se;p++){
            if(g%pr[p]==0){
                i64 tmp=1;
                while(tmp<MX)
                    tmp*=pr[p];
                int res=query(tmp);++cnt;
                int c=round(log(res)/log(pr[p]));
                ans*=(c+1),mul*=res;
                if(cnt==22)
                    break;
            }
        }
        if(mul>MX/q[i].se/q[i].se/q[i].se){
            cout<<"! "<<ans*2<<endl;
            return;
        }
    }
    cout<<"! "<<2<<endl;
}

int main(){
    int T=rdi();
    while(T--)
        solve();
    return 0;
}