/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author gainullin.ildar
 */

#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <list>
#include <time.h>
#include <math.h>
#include <random>
#include <deque>
#include <queue>
#include <cassert>

using namespace std;

typedef long long ll;

class TaskG
{
public:
	void solve(std::istream& in, std::ostream& out)
	{
		string s;
		in >> s;
        bool h = 0, he = 0, hei = 0, heid = 0, heidi = 0;
		for (auto c : s)
		{
			if (c == 'h')
			{
				h = 1;
			}
			if (c == 'e')
			{
				he |= h;
			}
			if (c == 'i')
			{
				hei |= he;
				heidi |= heid;
			}
			if (c == 'd')
			{
				heid |= hei;
			}
		}
		out << (heidi ? "YES" : "NO") << '\n';
	}
};


int main()
{
    ios::sync_with_stdio(0);
	TaskG solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}