#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
int dp[20000] = {};
void solve()
{
  int n;
  cin >> n;
  vector<int> A;
  vector<int> B;
  int ans = 0;
  REP(i, n)
  {
    int a;
    cin >> a;
    A.push_back(a);
    ans += a * a * (n - 1);
  }
  REP(i, n)
  {
    int a;
    cin >> a;
    B.push_back(a);
    ans += a * a * (n - 1);
  }
  REP(i, 20000)
  {
    dp[i] = 1e18;
  }
  dp[0] = 0;

  int base_cost = 0;
  int upper_cost = 0;

  REP(i, n)
  {
    if (A[i] > B[i])
      swap(A[i], B[i]);
    for (int q = 10000; q >= 0; --q)
    {
      if (dp[q] == 1e18)
        continue;

      {
        int cost = dp[q];
        cost += 2LL * (base_cost + q) * B[i];
        cost += 2LL * (upper_cost - q) * A[i];
        dp[q + B[i] - A[i]] = min(dp[q + B[i] - A[i]], cost);
      }
      {
        dp[q] += 2LL * (upper_cost - q) * B[i];
        dp[q] += 2LL * (base_cost + q) * A[i];
      }
    }
    base_cost += A[i];
    upper_cost += B[i];
  }
  int cur_go = 1e18;
  REP(q, 20000)
  {
    cur_go = min(cur_go, dp[q]);
  }
  ans += cur_go;
  cout << ans << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}