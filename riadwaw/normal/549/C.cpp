/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>

using namespace std;

class TaskC {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n, rest;
		in >> n >> rest;
		int moves = n - rest;
		int cnt0 = 0, cnt1 = 0;
		int cur = 0;
		for (int i = 0; i < n; ++i) {
			int x;
			in >> x;
			if(x % 2) {
				cnt1 ++;
				cur = 1 - cur;
			}
			else
				cnt0 ++;
		}

if(n==rest){
if(cnt1%2){

out << "Stannis";
			}
			else
				out << "Daenerys";
			return;
		}


		if(moves % 2 == 0) {
			if(rest % 2 == 1 && moves / 2 >= cnt0) {
				out << "Stannis";
			}
			else
				out << "Daenerys";
			return;
		}
		if(moves % 2 == 1) {
			if(moves / 2 >= cnt1) {
				out << "Daenerys";
				return;
			}
			if(rest % 2 == 0 && moves / 2 >= cnt0) {
				out << "Daenerys";
				return;
			}

			out << "Stannis";
		}
	}
};


int main() {
	std::ios_base::sync_with_stdio(false);
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	in.tie(0);
	out << std::fixed;
	out.precision(20);
	solver.solve(in, out);
	return 0;
}