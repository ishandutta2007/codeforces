/*
A strange force take my soul
I can see throught the wall
spirits run throught my hands
awake from my death
now I do know my real being

Evil is the hand path
my beginning is the end
my peace is anguish
real nightmare rising
death feeling, fear feeling
I'll emanate all pain

Angels of hell follow my flame
spittin' blood all over your head
everybody crawls throught the fire
nothing left to live
hell will conquer

I can't deny my fate
when the victory comes
I'll be the king, Lord of all evil
I knew the prophecy, I knew the pain

Slaves of disease, piled on, human suffer
the bird of prey eat this flesh
the rain turns into blood
all the dead become alive
all the water become fire
endless nightmare
hell has made our time
*/

//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-11
//#define M_PI 3.141592653589793
#define bs 777777777
#define bsize 256

using namespace std;
/*
long ways,temp,s;
long n,k,dp[(1<<8)+5][(1<<8)+5][1<<9];
long c[1<<10][1<<10];

void add(long&a,long&b)
{
 a+=b;
 if (a>=bs)a-=bs;
}
*/

long dp[300][300];

int main(){
//freopen("rush.in","r",stdin);
//freopen("rush.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);
dp[1][1]=0;
dp[2][1]=2;
dp[2][2]=1;
dp[4][1]=32;
dp[4][2]=30;
dp[4][3]=80;
dp[4][4]=109;
dp[8][1]=6824;
dp[8][2]=59808;
dp[8][3]=147224;
dp[8][4]=415870;
dp[8][5]=1757896;
dp[8][6]=1897056;
dp[8][7]=4898872;
dp[8][8]=7593125;
dp[16][1]=776830421;
dp[16][2]=290516100;
dp[16][3]=746623577;
dp[16][4]=293783147;
dp[16][5]=33900006;
dp[16][6]=735127505;
dp[16][7]=565460332;
dp[16][8]=428982705;
dp[16][9]=472062098;
dp[16][10]=161873957;
dp[16][11]=117354594;
dp[16][12]=515619293;
dp[16][13]=578944191;
dp[16][14]=312106242;
dp[16][15]=569389279;
dp[16][16]=391464593;
dp[32][1]=261086313;
dp[32][2]=584837659;
dp[32][3]=683961846;
dp[32][4]=468868529;
dp[32][5]=211593382;
dp[32][6]=736955478;
dp[32][7]=229471758;
dp[32][8]=157617135;
dp[32][9]=398169441;
dp[32][10]=360252438;
dp[32][11]=629394768;
dp[32][12]=264125799;
dp[32][13]=647490480;
dp[32][14]=342079395;
dp[32][15]=391579767;
dp[32][16]=225200475;
dp[32][17]=486011304;
dp[32][18]=513156108;
dp[32][19]=628771752;
dp[32][20]=132906648;
dp[32][21]=142138221;
dp[32][22]=20119449;
dp[32][23]=444199674;
dp[32][24]=195188679;
dp[32][25]=387329805;
dp[32][26]=44684703;
dp[32][27]=651912135;
dp[32][28]=737154512;
dp[32][29]=612549793;
dp[32][30]=519860281;
dp[32][31]=186175544;
dp[32][32]=212568440;
dp[64][1]=240805271;
dp[64][2]=239509872;
dp[64][3]=581127897;
dp[64][4]=6511239;
dp[64][5]=156126222;
dp[64][6]=509425833;
dp[64][7]=672407328;
dp[64][8]=366667722;
dp[64][9]=459185405;
dp[64][10]=509737025;
dp[64][11]=554790222;
dp[64][12]=165216555;
dp[64][13]=703150560;
dp[64][14]=74806569;
dp[64][15]=398730015;
dp[64][16]=383350905;
dp[64][17]=506108358;
dp[64][18]=51326142;
dp[64][19]=298053147;
dp[64][20]=104256117;
dp[64][21]=391428765;
dp[64][22]=374020479;
dp[64][23]=206607807;
dp[64][24]=87664059;
dp[64][25]=275899176;
dp[64][26]=56407680;
dp[64][27]=551553401;
dp[64][28]=448939463;
dp[64][29]=582889860;
dp[64][30]=129676638;
dp[64][31]=226078251;
dp[64][32]=135769095;
dp[64][33]=61292868;
dp[64][34]=578972226;
dp[64][35]=190181628;
dp[64][36]=390739055;
dp[64][37]=184587732;
dp[64][38]=446575689;
dp[64][39]=732674124;
dp[64][40]=232198470;
dp[64][41]=676760679;
dp[64][42]=352474101;
dp[64][43]=611444862;
dp[64][44]=575661807;
dp[64][45]=628905585;
dp[64][46]=320813094;
dp[64][47]=522840969;
dp[64][48]=469781928;
dp[64][49]=156006018;
dp[64][50]=554473341;
dp[64][51]=239654268;
dp[64][52]=643714911;
dp[64][53]=433540170;
dp[64][54]=199307003;
dp[64][55]=496385218;
dp[64][56]=291740751;
dp[64][57]=67309914;
dp[64][58]=370826673;
dp[64][59]=202356819;
dp[64][60]=279421821;
dp[64][61]=421203111;
dp[64][62]=63744786;
dp[64][63]=520987612;
dp[64][64]=550671827;
dp[128][1]=482164403;
dp[128][2]=768209115;
dp[128][3]=462063756;
dp[128][4]=154906374;
dp[128][5]=36099042;
dp[128][6]=341766705;
dp[128][7]=678182556;
dp[128][8]=621882744;
dp[128][9]=478771358;
dp[128][10]=231881111;
dp[128][11]=175889805;
dp[128][12]=243630450;
dp[128][13]=168908523;
dp[128][14]=671961765;
dp[128][15]=55761813;
dp[128][16]=652682670;
dp[128][17]=773939082;
dp[128][18]=517628076;
dp[128][19]=756201264;
dp[128][20]=124604900;
dp[128][21]=750976272;
dp[128][22]=498253248;
dp[128][23]=676047609;
dp[128][24]=137170026;
dp[128][25]=705610017;
dp[128][26]=495032139;
dp[128][27]=561797418;
dp[128][28]=703097347;
dp[128][29]=500815609;
dp[128][30]=95984586;
dp[128][31]=739707108;
dp[128][32]=265613565;
dp[128][33]=387099846;
dp[128][34]=777331779;
dp[128][35]=594676173;
dp[128][36]=591219559;
dp[128][37]=407997044;
dp[128][38]=208947235;
dp[128][39]=93337440;
dp[128][40]=478908360;
dp[128][41]=685013007;
dp[128][42]=487033953;
dp[128][43]=671903001;
dp[128][44]=39521181;
dp[128][45]=738490312;
dp[128][46]=33785059;
dp[128][47]=465470131;
dp[128][48]=310453920;
dp[128][49]=54648783;
dp[128][50]=346831137;
dp[128][51]=427694175;
dp[128][52]=474743430;
dp[128][53]=705296781;
dp[128][54]=435828036;
dp[128][55]=429824745;
dp[128][56]=663532359;
dp[128][57]=261388683;
dp[128][58]=244690731;
dp[128][59]=533997135;
dp[128][60]=596108961;
dp[128][61]=506813013;
dp[128][62]=371892402;
dp[128][63]=590145264;
dp[128][64]=104733162;
dp[128][65]=143420103;
dp[128][66]=654339672;
dp[128][67]=700348950;
dp[128][68]=685038942;
dp[128][69]=578826927;
dp[128][70]=286484229;
dp[128][71]=501639192;
dp[128][72]=434962491;
dp[128][73]=299270097;
dp[128][74]=27702486;
dp[128][75]=335375775;
dp[128][76]=111746817;
dp[128][77]=565603164;
dp[128][78]=294926121;
dp[128][79]=676063665;
dp[128][80]=735862995;
dp[128][81]=710035809;
dp[128][82]=437011960;
dp[128][83]=668528077;
dp[128][84]=138765186;
dp[128][85]=508213986;
dp[128][86]=615036450;
dp[128][87]=353784942;
dp[128][88]=624827616;
dp[128][89]=343900011;
dp[128][90]=241289776;
dp[128][91]=52410890;
dp[128][92]=72018835;
dp[128][93]=352406796;
dp[128][94]=415705878;
dp[128][95]=4802637;
dp[128][96]=376367145;
dp[128][97]=65589678;
dp[128][98]=333633477;
dp[128][99]=341834527;
dp[128][100]=303717460;
dp[128][101]=282387700;
dp[128][102]=42951006;
dp[128][103]=254706039;
dp[128][104]=423048528;
dp[128][105]=526429710;
dp[128][106]=68131467;
dp[128][107]=669954708;
dp[128][108]=12787348;
dp[128][109]=500636381;
dp[128][110]=317959019;
dp[128][111]=479433192;
dp[128][112]=657133515;
dp[128][113]=416259390;
dp[128][114]=610216692;
dp[128][115]=340129188;
dp[128][116]=44594256;
dp[128][117]=257373347;
dp[128][118]=138718678;
dp[128][119]=530767740;
dp[128][120]=292922628;
dp[128][121]=37220268;
dp[128][122]=605295159;
dp[128][123]=480722613;
dp[128][124]=458170419;
dp[128][125]=30540300;
dp[128][126]=487159055;
dp[128][127]=232966794;
dp[128][128]=149150650;
dp[256][1]=412133651;
dp[256][2]=386543325;
dp[256][3]=139952108;
dp[256][4]=289303402;
dp[256][5]=102404925;
dp[256][6]=317067177;
dp[256][7]=396414708;
dp[256][8]=80515854;
dp[256][9]=663739304;
dp[256][10]=317300809;
dp[256][11]=228877044;
dp[256][12]=493725043;
dp[256][13]=715317967;
dp[256][14]=490300965;
dp[256][15]=315527373;
dp[256][16]=743539734;
dp[256][17]=488329191;
dp[256][18]=553627998;
dp[256][19]=533025234;
dp[256][20]=242583957;
dp[256][21]=706116537;
dp[256][22]=614109258;
dp[256][23]=645447222;
dp[256][24]=523195911;
dp[256][25]=492109128;
dp[256][26]=722623041;
dp[256][27]=111085128;
dp[256][28]=766395126;
dp[256][29]=654378921;
dp[256][30]=691964847;
dp[256][31]=496688157;
dp[256][32]=399056049;
dp[256][33]=654363234;
dp[256][34]=102052314;
dp[256][35]=191720088;
dp[256][36]=473910948;
dp[256][37]=259736526;
dp[256][38]=332840025;
dp[256][39]=388047555;
dp[256][40]=665791056;
dp[256][41]=627111387;
dp[256][42]=139696515;
dp[256][43]=441456687;
dp[256][44]=443032569;
dp[256][45]=283264821;
dp[256][46]=771641703;
dp[256][47]=452641455;
dp[256][48]=511306362;
dp[256][49]=117572859;
dp[256][50]=127701891;
dp[256][51]=721298331;
dp[256][52]=176520078;
dp[256][53]=357242229;
dp[256][54]=611296308;
dp[256][55]=696994956;
dp[256][56]=405628839;
dp[256][57]=429224274;
dp[256][58]=465336054;
dp[256][59]=695091546;
dp[256][60]=689828796;
dp[256][61]=574648641;
dp[256][62]=351220905;
dp[256][63]=507964023;
dp[256][64]=675326610;
dp[256][65]=517248963;
dp[256][66]=453528621;
dp[256][67]=220301928;
dp[256][68]=494463186;
dp[256][69]=681789969;
dp[256][70]=339589656;
dp[256][71]=44524053;
dp[256][72]=417125457;
dp[256][73]=339589404;
dp[256][74]=747135963;
dp[256][75]=341780733;
dp[256][76]=734158215;
dp[256][77]=396817281;
dp[256][78]=21997836;
dp[256][79]=5728464;
dp[256][80]=147611205;
dp[256][81]=456248898;
dp[256][82]=714128667;
dp[256][83]=377654949;
dp[256][84]=3862068;
dp[256][85]=128418948;
dp[256][86]=589390074;
dp[256][87]=304947090;
dp[256][88]=11703825;
dp[256][89]=228266073;
dp[256][90]=127304142;
dp[256][91]=429215724;
dp[256][92]=361541124;
dp[256][93]=521572968;
dp[256][94]=468358191;
dp[256][95]=341231688;
dp[256][96]=65323503;
dp[256][97]=613778508;
dp[256][98]=15985323;
dp[256][99]=291661029;
dp[256][100]=410970006;
dp[256][101]=591638112;
dp[256][102]=349541550;
dp[256][103]=89967528;
dp[256][104]=224922159;
dp[256][105]=361094166;
dp[256][106]=584206074;
dp[256][107]=640051812;
dp[256][108]=324264456;
dp[256][109]=652625388;
dp[256][110]=693768537;
dp[256][111]=11740617;
dp[256][112]=309238398;
dp[256][113]=211085469;
dp[256][114]=194905872;
dp[256][115]=639416484;
dp[256][116]=110110707;
dp[256][117]=296645895;
dp[256][118]=748118511;
dp[256][119]=131177718;
dp[256][120]=511142751;
dp[256][121]=775975599;
dp[256][122]=421403409;
dp[256][123]=475528473;
dp[256][124]=434685258;
dp[256][125]=1768977;
dp[256][126]=80301375;
dp[256][127]=708023862;
dp[256][128]=569195676;
dp[256][129]=56238084;
dp[256][130]=632887668;
dp[256][131]=88089750;
dp[256][132]=631539342;
dp[256][133]=396695565;
dp[256][134]=38780154;
dp[256][135]=695798271;
dp[256][136]=469819224;
dp[256][137]=439587099;
dp[256][138]=69045921;
dp[256][139]=682966116;
dp[256][140]=112310856;
dp[256][141]=64943298;
dp[256][142]=534475872;
dp[256][143]=40215357;
dp[256][144]=389728458;
dp[256][145]=286368453;
dp[256][146]=736006257;
dp[256][147]=501181650;
dp[256][148]=54829908;
dp[256][149]=603489402;
dp[256][150]=338032656;
dp[256][151]=512182818;
dp[256][152]=627500097;
dp[256][153]=462674016;
dp[256][154]=3103092;
dp[256][155]=157324491;
dp[256][156]=43978329;
dp[256][157]=596818971;
dp[256][158]=259025598;
dp[256][159]=9088632;
dp[256][160]=91991781;
dp[256][161]=577291428;
dp[256][162]=211245489;
dp[256][163]=429471231;
dp[256][164]=142626330;
dp[256][165]=172560633;
dp[256][166]=510907446;
dp[256][167]=444609585;
dp[256][168]=758102058;
dp[256][169]=375112647;
dp[256][170]=744786693;
dp[256][171]=276174402;
dp[256][172]=19259856;
dp[256][173]=233672418;
dp[256][174]=745389414;
dp[256][175]=225772848;
dp[256][176]=23385663;
dp[256][177]=324290610;
dp[256][178]=519804558;
dp[256][179]=120337812;
dp[256][180]=402578568;
dp[256][181]=360676008;
dp[256][182]=450089262;
dp[256][183]=551043738;
dp[256][184]=337388940;
dp[256][185]=512108856;
dp[256][186]=28879011;
dp[256][187]=690040638;
dp[256][188]=106017282;
dp[256][189]=558262341;
dp[256][190]=99972432;
dp[256][191]=608226003;
dp[256][192]=612152037;
dp[256][193]=42414435;
dp[256][194]=776201013;
dp[256][195]=39580443;
dp[256][196]=518796945;
dp[256][197]=494437752;
dp[256][198]=583194366;
dp[256][199]=723936555;
dp[256][200]=415359657;
dp[256][201]=309569589;
dp[256][202]=751104774;
dp[256][203]=166684527;
dp[256][204]=249229170;
dp[256][205]=353120823;
dp[256][206]=130668327;
dp[256][207]=753823584;
dp[256][208]=580966092;
dp[256][209]=561963717;
dp[256][210]=543672234;
dp[256][211]=393846327;
dp[256][212]=586278000;
dp[256][213]=327398400;
dp[256][214]=278403867;
dp[256][215]=156455586;
dp[256][216]=363920382;
dp[256][217]=190245195;
dp[256][218]=290039148;
dp[256][219]=547014447;
dp[256][220]=466218648;
dp[256][221]=146037150;
dp[256][222]=585462906;
dp[256][223]=666008595;
dp[256][224]=691786683;
dp[256][225]=374707494;
dp[256][226]=622498779;
dp[256][227]=231158277;
dp[256][228]=685740951;
dp[256][229]=115612245;
dp[256][230]=681825249;
dp[256][231]=545555745;
dp[256][232]=551718468;
dp[256][233]=277206615;
dp[256][234]=640171035;
dp[256][235]=757727334;
dp[256][236]=195193908;
dp[256][237]=658656684;
dp[256][238]=457760646;
dp[256][239]=225925875;
dp[256][240]=505761984;
dp[256][241]=18685233;
dp[256][242]=506832921;
dp[256][243]=112511021;
dp[256][244]=396846646;
dp[256][245]=290147622;
dp[256][246]=113924623;
dp[256][247]=669986155;
dp[256][248]=336008070;
dp[256][249]=63611061;
dp[256][250]=238586775;
dp[256][251]=119956662;
dp[256][252]=616557739;
dp[256][253]=772784623;
dp[256][254]=334527774;
dp[256][255]=410403148;
dp[256][256]=51933421;
/*
for (int i=0;i<=1000;i++) 
 for (int j=0;j<=i;j++)
 {
  if (j==0||j==i)
   c[i][j]=1;
   else
   c[i][j]=(c[i-1][j-1]+c[i-1][j])%bs;
 }

for (int n=1;n<=256;n*=2)
for (int k=1;k<=n;k++)
{
    
for (int i=0;i<=n;i++)
 for (int j=0;j<=n;j++)
  for (int q=0;q<=n;q++)
   dp[i][j][q]=0;
   
dp[0][0][0]=1;

for (int wrong=1;wrong<=n;wrong++)
 for (int used=0;used<=n;used++)
  for (int failed=0;failed<=k;failed++)
  {
   if (used-failed>n-k)continue;
   // screwd
   for (int ad=0;ad<=n-used&&ad+failed<=k;ad++)
   {
    if (ad==wrong)continue;
    ways=c[n-used][ad];
    temp=1ll*ways*dp[wrong-1][used][failed]%bs;
    if (ad==wrong)
     add(dp[wrong][used+ad][failed],temp);
     else
     add(dp[wrong][used+ad][failed+ad],temp);
   }
   // dd
   for (int ad=wrong;ad<=wrong;ad++)
   {
    if (ad+used>n)continue;
    ways=c[n-used][ad];
    temp=1ll*ways*dp[wrong-1][used][failed]%bs;
    if (ad==wrong)
     add(dp[wrong][used+ad][failed],temp);
     else
     add(dp[wrong][used+ad][failed+ad],temp);
   }
   
  }

cout<<"dp["<<n<<"]["<<k<<"]="<<dp[n][n][k]<<";"<<endl;
//cout<<dp[n][n][k]<<endl;
}
*/
long n,k;

cin>>n>>k;
cout<<dp[n][k]<<endl;
cin.get();cin.get();
return 0;}