import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.System.exit;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class E {
	
	static BufferedReader in;
	static PrintWriter out;
	static StringTokenizer tok;
	
	static final boolean ppp[][] = new boolean[5][];
	
	static final String codes[] = {
		"BAAA",
		"EAAAEAAACAAACAAADAAACAAACAAADAAACAAABAAA",
		"9AAA9AAApAAAwAAAsAAAZAAApAAAhAAAZAAApAAA1AAA0AAAgAAAqAAAkAAAWAAAlAAAaAAAQAAAlAAAqAAAmAAAYAAAiAAAdAAAMAAAdAAAVAAANAAAbAAAmAAAqAAAaAAAeAAAcAAAUAAAaAAAUAAAMAAAcAAApAAAsAAAXAAAhAAAdAAASAAAeAAAUAAALAAAfAAAjAAAjAAAWAAAcAAAZAAAOAAAYAAASAAALAAAYAAAsAAAkAAAZAAAjAAAcAAAMAAAeAAAVAAAOAAAbAAAiAAAkAAAVAAAbAAAYAAAQAAAYAAARAAAKAAAZAAAkAAAnAAAXAAAdAAAbAAAQAAAZAAATAAALAAAaAAAoAAAeAAAWAAAeAAAUAAAQAAAcAAAQAAAMAAAaAAA",
		"rRBASsAABABAX0AA+zAAsnAAeBBAqeAA8tAAWvAAuBBASiAAxzAAKrAAxqAA0fAA80AA+YAAjjAAbmAAq9AA3gAAWwAAEoAADnAAsdAA1xAAsWAACiAAojAAf6AA/eAA+tAAOmAAakAAScAApvAAmVAAPgAAJhAA+5AAUeAActAAolAAhlAAwbAAZuAAtVAA7fAAHiAAa3AA8cAACsAArkAAGiAA3aAA4sAAGUAASfAAQgAAU4AAgdAAGtAAOlAAjjAA0bAAdtAAKVAAYfAAUgAAG0AAAcAAVoAArgAAAiAAAZAAKqAAdTAAhbAAfeAAY1AABcAAAqAABjAAHiAAxZAASrAA/TAABdAAFfAAI2AAAcAAfrAAQkAAVhAAxaAA+rAA7TAAieAAAfAAWCBALkAATyAADpAAbqAAidAAf0AAfYAAMjAAylAAM1AA3cAAkoAA5hAAwiAAWYAAOqAASUAAubAABeAAXzAAmbAASmAApfAAfgAADXAAmoAAhSAAmaAA8cAA+vAACaAA9jAACeAAzdAAvVAAOmAALRAARZAAxaAANwAAjZAAxkAAkeAAlfAA6VAA6lAASSAACZAA6bAA7sAAMYAAXiAA9cAA4bAAPUAAHkAAFQAA+XAA6YAAuvAAGZAADkAAaeAAldAAWVAAzlAAORAA+YAA9aAA0qAAZXAAgfAATZAAPcAAvSAAzhAA3PAAMVAAtYAA6sAAmXAAnhAAHcAAycAAIUAAfjAA8QAAuWAAeZAAgrAAZXAAohAAvcAA7aAAHUAAFjAA5PAAwXAAPYAAT9AA+gAAmvAAPnAAtmAAzcAAcxAAUWAAchAAhjAAhxAAvZAAZmAABgAAxfAAGXAAvnAAcSAA6ZAAscAAitAA+YAAXkAAWdAAudAABWAAFlAACRAA9YAAWaAAXsAA0XAApiAAAdAA1bAAJVAA+jAAaQAANYAASZAA3qAAxWAAYhAAxbAAEcAA7TAATiAAEQAA1WAA+YAA7pAATWAARhAAbbAAFaAAdUAA3hAAYPAAjXAAFYAA+qAAAXAAMiAATcAAUbAARUAA/iAAmPAAyXAAzYAAbnAAhVAATeAAlYAA+ZAA9SAAxfAAuOAA1UAAOXAAgnAAnVAAcfAAeZAA5ZAAaTAADgAA6OAAsVAA2WAA5oAAgVAAbgAAHbAAGZAAlTAAKhAA3OAAyWAAHXAAJ7AAbgAActAAIlAABmAA0bAAJvAAEWAAigAAahAAtvAAdZAAVkAAXeAAEfAAWWAAJmAA3RAAEZAABbAAQtAAFYAA8hAAPcAAicAAzUAA5jAAgQAABYAAWZAAGqAApWAADgAAiaAAFaAA5TAAwhAAWPAArWAAOXAAhqAAJWAA1fAAraAADbAALTAAmhAAZPAAKWAA+XAA+nAAkVAAgeAAeZAA8YAAXSAAVgAAWOAAhVAAAWAABpAA1VAAifAAOaAA9ZAATTAAngAALPAAOWAA8WAAylAAtUAAYcAAgWAAAZAAPRAAOeAAHOAAPTAAeVAANnAA9UAAndAArYAALZAACSAAVfAArOAAOUAArVAArnAA6UAAoeAAvZAANYAAuSAA5fAAXOAA0VAA3VAA95AAAfAAzsAAlkAA2kAAhaAAOuAADVAA9eAA7hAAavAAaYAAGkAAJeAAdeAAwVAASlAA0RAAPYAAsbAAYsAAvWAAKiAAJcAA3bAAYUAANjAABQAAAXAAOaAABqAAHWAAjgAAwaAAEaAABUAAmhAAZPAAZWAAIYAAjqAAgVAAXgAAqaAAJbAAlTAANhAAqPAAzVAA2YAAWnAAmUAAueAAZZAAJYAAHSAAgfAA3NAASVAA6WAACpAAOVAA+fAAraAAWZAAnTAAggAARPAARWAAmXAA/lAAGUAAxcAA+WAAoYAAoRAAMeAADOAALTAALWAAymAAvTAApdAAxYAAXYAA0RAAteAAHOAA1TAAtWAA/lAA+TAA4dAAAZAAWXAA8RAAQeAA3NAAtUAA6VAAD5AALeAAWrAA+iAAvjAAvaAAOtAAqUAA4eAAcgAAOtAAUXAA7iAApcAA7cAAAWAA4jAA1QAAKYAAtZAAvqAAZWAAUgAAcaAAgaAA7TAAJiAAFPAA4WAA1XAAMoAAJVAAAfAAOZAAFZAALTAATgAAVOAApVAAeWAAWnAAbUAAyeAA1YAAQZAAOTAAFfAAbOAA5VAA2WAA3mAAXUAA3dAAkYAAYXAA9SAA5eAApNAA8VAAjVAAZnAAPUAAMeAANZAAXYAApSAAKfAASOAAPVAA7VAACkAA+SAAoaAAfVAAGXAAqQAAlcAABNAATSAAgUAAblAACTAAGcAAGXAAHXAAjRAAwdAAVNAAqTAAEVAAdlAAhTAACdAAFYAAkWAA4RAA/dAAUNAA5UAAhUAAc4AAbdAAcrAAXjAAhjAA5aAAssAAfUAAmeAADgAAEvAAlYAAojAA3cAATeAA5VAAOlAAMRAAbYAA9aAApsAAYXAAghAAGbAA1bAAjUAANjAAxPAAdXAAkZAAcpAAuVAAgfAAiZAAdZAAqTAA+gAA6OAAPWAAXXAAwqAA1VAAqfAAiaAAfbAAZTAAJhAA3PAAzVAA9XAA8mAAMUAAbdAAjYAAqXAALSAA2eAAuNAADVAA2VAADoAAvUAA0eAAGZAArYAATTAAxfAAaOAArVAAXWAAslAA9TAACcAA/VAAuYAAVRAAfdAA8NAA9SAA9VAAnmAATUAAWdAAFYAAIZAAJSAAYeAAeOAA0TAAtVAAVmAABUAAldAAeYAAVXAAjSAAgeAA2NAAFVAAbVAA9yAA+cAA5oAAqiAA5hAAwXAALqAArTAAFcAAAeAAipAAEXAAChAAwbAA+bAAVTAACiAAeQAAFWAAWYAA0lAANVAAyeAApZAARZAAyRAAZfAAiOAAqUAAoWAA7jAAKUAAYdAAfYAA5XAAORAABeAAIOAAfTAAEVAAWkAA+TAAidAA9YAAuYAARRAAydAAeOAAwTAAlVAA0iAAgTAATcAArXAAMWAAcQAA5cAAPNAAkTAA7TAAYjAAqTAAjcAArYAAxWAAqQAAZdAAaNAA5TAAxUAA/gAANTAAdZAA9UAAlWAAGPAANbAAsMAAORAAVTAAdhAAwSAA+aAAmWAAiWAAzPAAlbAANNAA9RAAiTAAWhAAnSAAWbAAPXAAdVAAxPAArbAAzMAA0SAAQTAA+1AAddAA0oAA8hAAZiAASYAA4qAA1TAABdAAbeAAzrAAxXAAvhAAjbAAscAAXUAA/iAAnQAAvWAAAZAAepAACXAAqfAAkZAA/aAADTAA9gAAbPAAAWAAeXAAwmAA9UAAldAArYAAbYAAhRAAJfAA9NAAlUAA4VAARmAAiUAATdAAIYAAUZAATRAAEeAAwOAAyTAAyVAAekAAtTAA1bAA6WAAKXAA0QAAIdAAhNAAXTAARUAA5lAAuUAAscAAGYAA6XAAGRAAVeAAjNAAaUAAkVAAYiAAATAAsZAAvUAA2WAAdPAAObAA+MAAZRAA3TAA5jAAqTAADbAAPWAAcXAAbQAAhcAA2NAARSAA8TAAMlAA9TAArcAABYAAMXAAZRAA4dAAoNAAJUAArUAAa4AAOeAA+pAAphAAZjAATaAAHsAAOUAAMeAAUfAAptAAmXAAnhAAZbAAlcAAIVAAXjAAkQAAkXAAEZAAsqAA9VAAxfAAMaAARaAAqTAAphAA4OAAgWAA3XAAJoAAPVAAwdAAbYAAZYAAJTAAqfAAQOAAlVAA2VAAknAAAUAAadAABYAA3YAAWSAAreAAFOAAwUAAGWAAulAAmTAAfcAAFXAA8WAA+RAAtdAAPNAApUAA6UAAEnAAGUAAndAAjYAAQYAAnSAAyeAAGOAAAVAAbVAAkjAAvSAAdZAAcUAAPWAAVQAA7bAAfMAAMSAAvTAAMkAAnSAA+aAAOWAAiWAACRAApcAAtMAA8SAAJUAA9lAAeTAA4cAA8XAAJXAA1RAA5dAAfNAAhUAAzUAA",
		""
	};

	
//	static final int dyn[][][] = new int[6][][];
//	static {
//		boolean isPrime[] = new boolean[100000];
//		p: for (int p = 2; p < 100000; p++) {
//			for (int i = 2; ; i++) {
//				if (i * i > p) {
//					break;
//				}
//				if (p % i == 0) {
//					continue p;
//				}
//			}
//			isPrime[p] = true;
//		}
//		for (int total = 0; total < dyn.length; total++) {
//			int dyn2[][] = new int[total + 1][];
//			for (int known = total; known >= 0; known--) {
//				int unknown = total - known;
//				int digits = unknown * known;
//				int combs = 1;
//				for (int i = 0; i < digits; i++) {
//					combs *= 10;
//				}
//				int dyn3[] = new int[combs];
//				dyn2[known] = dyn3;
//				if (unknown == 0) {
//					dyn3[0] = 1;
//					continue;
//				}
//				int known10 = 1;
//				for (int i = 0; i < known; i++) {
//					known10 *= 10;
//				}
//				int unknown10 = 1;
//				for (int i = 0; i < unknown; i++) {
//					unknown10 *= 10;
//				}
//				int prefixes[] = new int[unknown];
//				for (int comb = 0; comb < combs; comb++) {
//					for (int i = 0, ccomb = comb; i < unknown; i++, ccomb /= known10) {
//						prefixes[i] = ccomb % known10;
//					}
//					for (int suffix = 0; suffix < unknown10; suffix++) {
//						if (!isPrime[prefixes[0] * unknown10 + suffix]) {
//							continue;
//						}
//						int nextComb = 0;
//						for (int i = unknown - 1, csuffix = suffix; i > 0; i--, csuffix /= 10) {
//							nextComb = (nextComb * known10 + prefixes[i]) * 10 + (csuffix % 10);
//						}
//						dyn3[comb] += dyn2[known + 1][nextComb];
//					}
//				}
//			}
//			dyn[total] = dyn2;
//		}
//	}
	
	static final String chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
	
//	static void precalc() {
//		StringBuilder sb = new StringBuilder();
//		sb.append("\tstatic final String codes[] = {\n");
//		for (int total = 1; total <= 5; total++) {
//			if (total > 1) {
//				sb.append(",\n");
//			}
//			sb.append("\t\t\"");
//			int lim = 1;
//			for (int i = 1; i < total; i++) {
//				lim *= 10;
//			}
//			for (int last = 0; last < lim; last++) {
//				int realLast = 0, curLast = last;
//				for (int i = 1; i < total; i++) {
//					realLast = realLast * 10 + curLast % 10;
//					curLast /= 10;
//				}
//				int ans = dyn[total][1][realLast];
//				for (int i = 0; i < 4; i++) {
//					int digit = ans % 64;
//					sb.append(chars.charAt(digit));
//					ans /= 64;
//				}
//			}
//			sb.append("\"");
//		}
//		sb.append("\n\t};");
//		System.out.println(sb.toString());
//	}
//	
//	static int solve(int p) {
//		int total, mul, curp, realp;
//		for (total = 0, mul = 1, curp = p, realp = 0; p >= mul; ++total, mul *= 10, realp = realp * 10 + curp % 10, curp /= 10) { }
//		return dyn[total][1][realp / 10];
//	}
	
	static int solve(int p) {
		int total = 0, mul = 1;
		while (p >= 10 * mul) {
			++total;
			mul *= 10;
		}
		p %= mul;
		String ans = codes[total].substring(4 * p, 4 * (p + 1));
		int realAns = 0;
		for (int i = 3; i >= 0; i--) {
			realAns = realAns * 64 + chars.indexOf(ans.charAt(i));
		}
		return realAns;
	}
	
	static void solve() throws Exception {
		int tests = nextInt();
		for (int test = 0; test < tests; test++) {
			int p = nextInt();
			out.println(solve(p));
		}
	}
	
	static int nextInt() throws IOException {
		return parseInt(next());
	}

	static long nextLong() throws IOException {
		return parseLong(next());
	}

	static double nextDouble() throws IOException {
		return parseDouble(next());
	}

	static String next() throws IOException {
		while (tok == null || !tok.hasMoreTokens()) {
			tok = new StringTokenizer(in.readLine());
		}
		return tok.nextToken();
	}

	public static void main(String[] args) {
		try {
			in = new BufferedReader(new InputStreamReader(System.in));
			out = new PrintWriter(new OutputStreamWriter(System.out));
			solve();
			in.close();
			out.close();
		} catch (Throwable e) {
			e.printStackTrace();
			exit(1);
		}
	}
}