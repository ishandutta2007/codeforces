/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author majk
 */

#ifndef MAJK_LIB
#define MAJK_LIB

#include <vector>
#include <stack>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <map>
#include <iomanip>
#include <set>
#include <functional>
#include <fstream>
#include <algorithm>
#include <cassert>
#include <cmath>
#include <string>
#include <sstream>
#include <queue>
#include <bitset>
using namespace std;

#define x first
#define y second
typedef std::pair<int,int> pii; typedef long long ll; typedef unsigned long long ull; typedef unsigned int ui; typedef pair<ui,ui> puu;

template <typename T, typename U> std::istream&operator>>(std::istream&i, pair<T,U>&p) {i >> p.x >> p.y; return i;}
template<typename T>std::istream&operator>>(std::istream&i,vector<T>&t) {for(auto&v:t){i>>v;}return i;}
template <typename T, typename U> std::ostream&operator<<(std::ostream&o, const pair<T,U>&p) {o << p.x << ' ' << p.y; return o;}
template<typename T>std::ostream&operator<<(std::ostream&o,const vector<T>&t) {if(t.empty())o<<'\n';for(size_t i=0;i<t.size();++i){o<<t[i]<<" \n"[i == t.size()-1];}return o;}
template<typename T> using minheap = priority_queue<T, vector<T>, greater<T>>;
template<typename T> using maxheap = priority_queue<T, vector<T>, less<T>>;
template <typename T> bool in(T a, T b, T c) { return a <= b && b < c; }
ui logceil(int x) { return x?8*sizeof(int)-__builtin_clz(x):0; }

namespace std { template<typename T,typename U>struct hash<pair<T,U>>{hash<T>t;hash<U>u;size_t operator()(const pair<T,U>&p)const{return t(p.x)^(u(p.y)<<7);}}; }
template<typename T,typename F>T bsh(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){l=m+1;r=m;}else{h=m-1;}}return r;}
template<typename F> double bshd(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){l=m;}else{h=m;}}return (l+h)/2;}
template<typename T,typename F>T bsl(T l,T h,const F&f){T r=-1,m;while(l<=h){m=(l+h)/2;if(f(m)){h=m-1;r=m;}else{l=m+1;}}return r;}
template<typename F> double bsld(double l,double h,const F&f,double p=1e-9){ui r=3+(ui)log2((h-l)/p);while(r--){double m=(l+h)/2;if(f(m)){h=m;}else{l=m;}}return (l+h)/2;}
template<typename T> T gcd(T a,T b) { if (a<b) swap(a,b); return b?gcd(b,a%b):a; }

template<typename T>class vector2:public vector<vector<T>>{public:vector2(){} vector2(size_t a,size_t b,T t=T()):vector<vector<T>>(a,vector<T>(b,t)){}};
template<typename T>class vector3:public vector<vector2<T>>{public:vector3(){} vector3(size_t a,size_t b,size_t c,T t=T()):vector<vector2<T>>(a,vector2<T>(b,c,t)){}};
template<typename T>class vector4:public vector<vector3<T>>{public:vector4(){} vector4(size_t a,size_t b,size_t c,size_t d,T t=T()):vector<vector3<T>>(a,vector3<T>(b,c,d,t)){}};
template<typename T>class vector5:public vector<vector4<T>>{public:vector5(){} vector5(size_t a,size_t b,size_t c,size_t d,size_t e,T t=T()):vector<vector4<T>>(a,vector4<T>(b,c,d,e,t)){}};


#endif
// #include "../l/mod.h"

class TaskC {
public:

    vector<vector<int>> Ans, LO;
    vector<vector<bool>> V;
    map<int, vector<pii>> EA, EB;
    vector<int> MA, MB, UA, UB;

    int mx(pii x) {
        if (V[x.x][x.y]) return 0;
        V[x.x][x.y] = true;
        int ret = LO[x.x][x.y];

        if (UA[x.x] == 2) {
            UA[x.x] = 1;
            for (pii e: EA[x.x]) ret = max(ret, mx(e));

        }

        if (UB[x.y] == 2) {
            UB[x.y] = 1;
            for (pii e: EB[x.y]) ret = max(ret, mx(e));
        }

        return ret;
    }


    void assign(pii x, int v) {
        if (Ans[x.x][x.y]) return;

        Ans[x.x][x.y] = v;
        MA[x.x] = v;
        MB[x.y] = v;

        if (UA[x.x] == 1) {
            UA[x.x] = 0;
            for (pii e: EA[x.x]) assign(e, v);
        }

        if (UB[x.y] == 1) {
            UB[x.y] = 0;
            for (pii e: EB[x.y]) assign(e, v);
        }
    }

    void solve(istream& cin, ostream& cout) {
        int N, M; cin >> N >> M;
        vector2<int> A(N, M);
        Ans = vector2<int>(N, M, 0);
        LO = vector2<int>(N, M, 0);
        V = vector2<bool>(N, M, false);

        cin >> A;
        map<int, vector<pii>> Q;
        for (int i = 0; i < N; ++i) {
            for (int j = 0; j < M; ++j) {
                Q[A[i][j]].push_back({i,j});
            }
        }
        MA.assign(N, 0);
        MB.assign(M, 0);
        UA.assign(N, 0);
        UB.assign(M, 0);

        for (auto&q: Q) {
            EA.clear(); EB.clear();

            for (auto e:q.y) {
                UA[e.x] = 2;
                UB[e.y] = 2;
                EA[e.x].push_back(e);
                EB[e.y].push_back(e);
                LO[e.x][e.y] = 1 + max(MA[e.x], MB[e.y]);
            }

            for (auto e:q.y) {
                if (!V[e.x][e.y]) {
                    int put = mx(e);
                    assign(e, put);
                }
            }
        }
        for (auto &ans: Ans) cout << ans;
    }
};


int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
    return 0;
}