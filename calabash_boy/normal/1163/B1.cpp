/* Generated by powerful Codeforces Tool
 * Author: calabash_boy_love_15 
 * Time: 2019-05-15 09:01:30
 * Personal Code Template: https://github.com/4thcalabash/ACM-Code-Library
**/
#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#ifdef __LOCAL_DEBUG__
# define _debug(fmt, ...) fprintf(stderr, "\033[91m[%s %3d]: " fmt "\n\033[0m", \
  __func__,__LINE__, ##__VA_ARGS__)
#else
# define _debug(...) (void(0))
#endif
#define PB(x) push_back(x)
#define rep(i,l,r) for (int i = l,_ = r;i< _;i++)
#define REP(i,l,r) for (int i=l,_=r;i<=_;i++)
#define leave(x) do {cout<<#x<<endl;fflush(stdout);return 0;}while (0);
#define untie do{ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}while (0)
#define range(x) x.begin(),x.end()
typedef long long LL;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef long double db;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int inf = 0x3f3f3f3f;
const ll inf_ll = 0x3f3f3f3f3f3f3f3fLL;
/************* header ******************/
const int maxn = 1e5 + 100;
int n;
int a[maxn];
map<int,int> cnt;
int tot[maxn];
int main(){
    cin>>n;
    for (int i=1;i<=n;i++){
        cin>>a[i];
        tot[a[i]] ++;
    }
    for (int i=1;i<=100000;i++){
        if (tot[i]){
            cnt[tot[i]] ++;
        }
    }
    for (int i=n;i>=1;i--){
        if (cnt.size() == 1){
            for (auto pii : cnt){
                if (pii.second == 1 || pii.first == 1){
                    cout<<i<<endl;
                    return 0;
                }
            }
        }
        if (cnt.size() == 2){
            vector<pii> temp(0);
            for (auto pii : cnt){
                temp.push_back(pii);
            }
            if (temp[1].second == 1 && temp[1].first == temp[0].first + 1){
                cout<<i<<endl;
                return 0;
            }
            if (temp[0].first == 1 && temp[0].second == 1){
                cout<<i<<endl;
                return 0;
            }
        }
        cnt[tot[a[i]]] --;
        if (cnt[tot[a[i]]] == 0){
            cnt.erase(tot[a[i]]);
        }
        tot[a[i]] --;
        if (tot[a[i]])
        cnt[tot[a[i]]] ++;

    }
    assert(0);
    return 0;
}