// &&@@@@@@@@@@@@@@@@,,,,,,**/***/////*//(//***/////(###&&&&&@@@@@/,,/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// &@@@@@@@@@@@@@@@@@*,,,,*******/////*/////***/////###%&&&&&@@@,.,,,,,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@*,,,,***/***/////*////****////(###%&&&&&@,.,,,,,,,,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@/,,,,,**/***/////*//(/***////*((##%&&%&(..,,,,,,,,.,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@(,,,,,**//**/////*////***/////(###%&&%...,,,,,,,,...,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@#,,,,***/***/////*/(//***/////(###%&%.......,,,......,@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@#,,,,***//**/////*////***/////(###%(.................,%@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@%,,,,***//**//(//*/(/. .....,,,.......,.....   .......,@@@@@@@@@@@@@@@@@@@@@@&////
// @@@@@@@@@@@@#(((#%%,,,,****/**////...,****,...................,*.........*@@@@@@@@@@@@@(#@@@*/////&@
// @@@@@@@@@@@..,,.       ....,**....*,..,,..........................*,.....,,@@@@@@@@@&**@%////*//@@@@
// @@@@@@@@@@@@.,,,...         ..,,..... ...............................*....,,,@@@@@(//#*#/#/*,*@@@@@@
// @@@@@@@@@@@@%,..,....     ..,.... ............................/@@%(@@@@(&%(,,,*@///****/*,,,@&,*@@@@
// @@@@@@@@@@@@@%,........ ..,....... ...   ...    ..  .  ......(@@@@@@@@@%#@@@@@,.******,.....,/@@@@@@
// @@@@@@@@@@@@@@&..,......,, ....     . .           ..     . .#@@#.#%#%@@@@@@@@@/,.**,.......,@@@%@@@@
// @@@@@@@@@@@@@@@@.......,.   .,.    (@@@.           ./...    /.....(###&@@@@@@@#,,........./,,/######
// @@@@@@@@@@@@@*&@#@(@..,.   .,.    (@@@@@@     .     .,..      ...  /%#/@@@@@@@&,,,.........(########
// @@@@@@@@@#*#@@@&@@&/.,.  ..,,.   .@@@@@@@@&. ..,.    .,.      ..... #%/@@@@@@@@,,,.......&@@@@@@@@@@
// @@@@@@@%@@@@&%@@@#@,,,...../.....&@@@@@@@@@@(. .       ,.  .. ......,#/%@@@@@@@,,,.....(@@@@@@@@@@@@
// @@@@@@#@@@/#%(@@&@./(......,....*@@@@@@@@@@@@@ ..&#  . .,. ..... .....(/#(#&&#@#,,....@@@@@@@@@@@@@@
// @@@@@#@@@@@%%(@**#,**...........@@@@@@@@@@@@@@@...@@&  ..,(..........*@@@@@@@@@@@,../@@@@@@@@@@@@@@@
// @@@@@#@@@@@%%%###(,,............@@@@@@@@@@@@@@@@/.&@@@@.../@,......%@@@@@@@@@@@@@@@@%&@@@@@@@@@@@@@@
// @@@@@&@@@@@@(#/##*,,. ... ....,,@@@@@@@@@@@@@@@@*#.@@@@@. .@@@.....,@@@@@@@@@@@@@@@@@@@@@@(@@@@@@@@@
// @@@@@@@@@@@@&%#%#,,,..... %...#,@@@@@@@@@@@@@@@@@@%@@@@@@..@@@@%....@@@@@@@@@@@@@@@@@@@@@@/@@@@@@@@@
// @@@@#@@@@@@@@#%##,,,.....(@...*.##%@@@@@@@@@@@@@@@@@@@@@@@.@@@@@%...@@@@@@@@@@@@@@@@&@##@@(@@@@@@@@@
// @@@@#@@@@@@%(%%#(/,......@@#..&#@@@@@@@@@@@@@@@@@&#@&.........../...@@@@@@@@@@@@@@@@%&@&@@/@@@@@@@@@
// @@@@@@@@@&(%#(#@@&,,.....@@@,.@@@@@@@@@@@@@@@@@@@@,.%&.   ..*...,..,@@@&/.....,@@@@@/%&@@@(@@@@@@@@@
// @@@@@@@@@@@@@@&@#@,,......@@@.&@@%%&@@@@@@@@@@@@@@@@@@,.......%&@...,..............*&%%%@@#@@@@@@@@@
// @@@@@@@@@@@@@@@@@@.,.... ..%@@........&@@@@@@@@@@@@@@@@@./#/.@@@@*.......................*@@@@@@@@@@
// @@@@@@@@@@@@@@@#@@.,........*.,%   .,.*@@@@@@@@@@@@@@@@@@@@@@@@@@#......................../@@@@@@@@@
// @@@@@@@@@@@@@@@@@@,,.... ......@&.(,,,.@@@@@@@@@@@@@@@@@@@@@@@@@@%.........................@@@@@@@@@
// &&@@@@@@@@@@@@/@@@/,..........(@@&@*/@@@@@@@@@@@@@@@@@@@@@@@@@@@@%. .......................*@@@@@@@@
// ..........*%@#@@@@&,...  ... ./*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&. ........................@@@@@@@@
// ............/@@@@@@,.  ..  ..,//*@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&. ................ .......@@@@@@@@
// ............*@@@@@@..        *((//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%. .......... ..... .......@@@@@@@@
// ............,@@@@@@,.        /((///&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%  ................   .....&@@@@@@@
// .............@@@@@@/.        */(//(/*#@@@@@@@@@@@/%%%#@@@@@@@@@@@(  ................ .......*@@@@@@@
// .............@@@@@@#.        */(//(/**..#@@@@@@@@@@@@@@@@@@@@&/##* ............ .....*@@@@@@@@@@@@@@
// ............%@@@@@@#..       *//////** &@@@%%@@@@@@@@@@@@%/######* ............. ....@@@@@@@@@@@@@@@
// ...........&@@@@@@@(..       *//,.....@@@@@@@&%%/&@@@((##/#######, .................  .#@@@@@@@@@@@@
// ..........@@@@@@@@@#,.       .........@@@@@@@@%%%%%%%*####/######  ..................  ......,,(&@@@
// ........ .@@@@@@@@@#, .      ........*@@@@@@@@@%%%%%%#####(######  .................   ...........,@
// .......  .(/..........       ........(@@@@@@@@@@%%%%*############  ..................   ............
// ......  ...............       .......#@@@@@@@@@@@@%%/#,######%@@&  .................... ............
// .....  ....  ...........      ... ...@@@@@@@@@@@@@@@###(##%@@@(@.  &................... ............
// ..........   ... .......      ... .. @@@@@@@@@@@@@@@(@@@@@@@@@/@  @@@...............................
// .........     . ...   ... .       ..*@@@@@@@@@@@@@@@/@@@@@@@/@@% @@@@@%.............................
// .....   .   ..  ... .......    .. ..%@@@@@@@@@@@@@@@&@@@@@*@@@@.@@@@@@@@@@/..... .. ................
//          .       .. .       .  .  ..@@@@@@@@@@@@@@@@@###*@@@@@#@@@@@@@@@@@@@@@@@@%/    ............@
//                                  ...@@@@@@@@@@#.  ,.  *    ,./@@@@@@@@@@@@@@@@@@@@/.              %@
//                     ,,,***,*****  . @&(.   .......  ..  ,, ..      #@@@@@@@@@@@@@@               *@@
//              .,,,,,,,,,***,****.         .... ...   ,,   .,. . . .....  *@@@@@@@@....           .@@@
//   ....,,.,,,,,,,,,,,,,,***,*,,*           ..     .,    ,     .,. .    .       (@*    .          @@@@
// ,,,,,,,,,,,,,,,,,,,,,,****,*,,*          ..   ...,     ,..      .,                             @@@@@
// ....................,,****,*,,*          ,...   .      .. .,     ,.                           &@@@@@
#include <bits/stdc++.h>
 
using namespace std;
using ll = long long;
using db = long double;
using str = string;
 
using pi = pair<int, int>;
#define mp make_pair
#define f first
#define s second
 
#define tcT template<class T
tcT> using V = vector<T>;
tcT, size_t SZ> using AR = array<T, SZ>;
using vi = V<int>;
using vb = V<bool>;
using vpi = V<pi>;
 
#define sz(x) int((x).size())
#define all(x) begin(x), end(x)
#define sor(x) sort(all(x))
#define rsz resize
#define pb push_back
#define ft front()
#define bk back()
 
const int MOD = 1e9+7;
const db PI = acos((db)-1);
mt19937 rng(0);
 
tcT> bool chkmin(T& a, const T& b){
    return b < a ? a = b, 1 : 0;
}
 
tcT> bool chkmax(T& a, const T& b){
    return a < b ? a = b, 1 : 0;
}
 

int n, m;


void solve() {
    cin >> n >> m;
    if (m == 1) {
        cout << n - 1 << '\n';
        return;
    }  
    cout << (ll)n * (m - 1) << '\n';
}


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    //read(FILENAME);
    int t = 1;
    //cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}