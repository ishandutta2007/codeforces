__asm__(
"	.file	\"main.cpp\"\n"
"	.text\n"
"	.section .rdata,\"dr\"\n"
"_ZStL19piecewise_construct:\n"
"	.space 1\n"
"_ZStL13allocator_arg:\n"
"	.space 1\n"
"_ZStL6ignore:\n"
"	.space 1\n"
".lcomm _ZStL8__ioinit,1,1\n"
"	.align 4\n"
"_ZN9__gnu_cxxL21__default_lock_policyE:\n"
"	.long	2\n"
"_ZStL10defer_lock:\n"
"	.space 1\n"
"_ZStL11try_to_lock:\n"
"	.space 1\n"
"_ZStL10adopt_lock:\n"
"	.space 1\n"
"	.align 4\n"
"_ZNSt15regex_constantsL5icaseE:\n"
"	.long	1\n"
"	.align 4\n"
"_ZNSt15regex_constantsL6nosubsE:\n"
"	.long	2\n"
"	.align 4\n"
"_ZNSt15regex_constantsL8optimizeE:\n"
"	.long	4\n"
"	.align 4\n"
"_ZNSt15regex_constantsL7collateE:\n"
"	.long	8\n"
"	.align 4\n"
"_ZNSt15regex_constantsL10ECMAScriptE:\n"
"	.long	16\n"
"	.align 4\n"
"_ZNSt15regex_constantsL5basicE:\n"
"	.long	32\n"
"	.align 4\n"
"_ZNSt15regex_constantsL8extendedE:\n"
"	.long	64\n"
"	.align 4\n"
"_ZNSt15regex_constantsL3awkE:\n"
"	.long	128\n"
"	.align 4\n"
"_ZNSt15regex_constantsL4grepE:\n"
"	.long	256\n"
"	.align 4\n"
"_ZNSt15regex_constantsL5egrepE:\n"
"	.long	512\n"
"	.align 4\n"
"_ZNSt15regex_constantsL12__polynomialE:\n"
"	.long	1024\n"
"	.align 4\n"
"_ZNSt15regex_constantsL13match_defaultE:\n"
"	.space 4\n"
"	.align 4\n"
"_ZNSt15regex_constantsL13match_not_bolE:\n"
"	.long	1\n"
"	.align 4\n"
"_ZNSt15regex_constantsL13match_not_eolE:\n"
"	.long	2\n"
"	.align 4\n"
"_ZNSt15regex_constantsL13match_not_bowE:\n"
"	.long	4\n"
"	.align 4\n"
"_ZNSt15regex_constantsL13match_not_eowE:\n"
"	.long	8\n"
"	.align 4\n"
"_ZNSt15regex_constantsL9match_anyE:\n"
"	.long	16\n"
"	.align 4\n"
"_ZNSt15regex_constantsL14match_not_nullE:\n"
"	.long	32\n"
"	.align 4\n"
"_ZNSt15regex_constantsL16match_continuousE:\n"
"	.long	64\n"
"	.align 4\n"
"_ZNSt15regex_constantsL16match_prev_availE:\n"
"	.long	128\n"
"	.align 4\n"
"_ZNSt15regex_constantsL14format_defaultE:\n"
"	.space 4\n"
"	.align 4\n"
"_ZNSt15regex_constantsL10format_sedE:\n"
"	.long	256\n"
"	.align 4\n"
"_ZNSt15regex_constantsL14format_no_copyE:\n"
"	.long	512\n"
"	.align 4\n"
"_ZNSt15regex_constantsL17format_first_onlyE:\n"
"	.long	1024\n"
"	.align 4\n"
"_ZNSt15regex_constantsL13error_collateE:\n"
"	.space 4\n"
"	.align 4\n"
"_ZNSt15regex_constantsL11error_ctypeE:\n"
"	.long	1\n"
"	.align 4\n"
"_ZNSt15regex_constantsL12error_escapeE:\n"
"	.long	2\n"
"	.align 4\n"
"_ZNSt15regex_constantsL13error_backrefE:\n"
"	.long	3\n"
"	.align 4\n"
"_ZNSt15regex_constantsL11error_brackE:\n"
"	.long	4\n"
"	.align 4\n"
"_ZNSt15regex_constantsL11error_parenE:\n"
"	.long	5\n"
"	.align 4\n"
"_ZNSt15regex_constantsL11error_braceE:\n"
"	.long	6\n"
"	.align 4\n"
"_ZNSt15regex_constantsL14error_badbraceE:\n"
"	.long	7\n"
"	.align 4\n"
"_ZNSt15regex_constantsL11error_rangeE:\n"
"	.long	8\n"
"	.align 4\n"
"_ZNSt15regex_constantsL11error_spaceE:\n"
"	.long	9\n"
"	.align 4\n"
"_ZNSt15regex_constantsL15error_badrepeatE:\n"
"	.long	10\n"
"	.align 4\n"
"_ZNSt15regex_constantsL16error_complexityE:\n"
"	.long	11\n"
"	.align 4\n"
"_ZNSt15regex_constantsL11error_stackE:\n"
"	.long	12\n"
"	.align 4\n"
"_ZNSt8__detailL19_S_invalid_state_idE:\n"
"	.long	-1\n"
"	.align 32\n"
"_ZN10__gnu_pbds6detailL9g_a_sizesE:\n"
"	.quad	5\n"
"	.quad	11\n"
"	.quad	23\n"
"	.quad	47\n"
"	.quad	97\n"
"	.quad	199\n"
"	.quad	409\n"
"	.quad	823\n"
"	.quad	1741\n"
"	.quad	3469\n"
"	.quad	6949\n"
"	.quad	14033\n"
"	.quad	28411\n"
"	.quad	57557\n"
"	.quad	116731\n"
"	.quad	236897\n"
"	.quad	480881\n"
"	.quad	976369\n"
"	.quad	1982627\n"
"	.quad	4026031\n"
"	.quad	8175383\n"
"	.quad	16601593\n"
"	.quad	33712729\n"
"	.quad	68460391\n"
"	.quad	139022417\n"
"	.quad	282312799\n"
"	.quad	573292817\n"
"	.quad	1164186217\n"
"	.quad	2364114217\n"
"	.quad	4294967291\n"
"	.quad	8589934583\n"
"	.quad	17179869143\n"
"	.quad	34359738337\n"
"	.quad	68719476731\n"
"	.quad	137438953447\n"
"	.quad	274877906899\n"
"	.quad	549755813881\n"
"	.quad	1099511627689\n"
"	.quad	2199023255531\n"
"	.quad	4398046511093\n"
"	.quad	8796093022151\n"
"	.quad	17592186044399\n"
"	.quad	35184372088777\n"
"	.quad	70368744177643\n"
"	.quad	140737488355213\n"
"	.quad	281474976710597\n"
"	.quad	562949953421231\n"
"	.quad	1125899906842597\n"
"	.quad	2251799813685119\n"
"	.quad	4503599627370449\n"
"	.quad	9007199254740881\n"
"	.quad	18014398509481951\n"
"	.quad	36028797018963913\n"
"	.quad	72057594037927931\n"
"	.quad	144115188075855859\n"
"	.quad	288230376151711717\n"
"	.quad	576460752303423433\n"
"	.quad	1152921504606846883\n"
"	.quad	2305843009213693951\n"
"	.quad	4611686018427387847\n"
"	.quad	9223372036854775783\n"
"	.quad	-59\n"
".lcomm _ZNSt3tr112_GLOBAL__N_16ignoreE,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_1E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_2E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_3E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_4E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_5E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_6E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_7E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_8E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_12_9E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_10E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_11E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_12E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_13E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_14E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_15E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_16E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_17E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_18E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_19E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_20E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_21E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_22E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_23E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_24E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_25E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_26E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_27E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_28E,1,1\n"
".lcomm _ZNSt3tr112placeholders12_GLOBAL__N_13_29E,1,1\n"
"	.align 16\n"
"_ZL3inf:\n"
"	.long	-196612\n"
"	.long	-196612\n"
"	.long	16444\n"
"	.long	0\n"
"	.align 8\n"
"_ZL1N:\n"
"	.quad	500018\n"
"	.globl	a\n"
"	.bss\n"
"	.align 32\n"
"a:\n"
"	.space 4000144\n"
"	.def	__main;	.scl	2;	.type	32;	.endef\n"
"	.text\n"
"	.globl	main\n"
"	.def	main;	.scl	2;	.type	32;	.endef\n"
"	.seh_proc	main\n"
"main:\n"
".LFB10382:\n"
"	pushq	%rbp\n"
"	.seh_pushreg	%rbp\n"
"	movq	%rsp, %rbp\n"
"	.seh_setframe	%rbp, 0\n"
"	addq	$-128, %rsp\n"
"	.seh_stackalloc	128\n"
"	.seh_endprologue\n"
"	call	__main\n"
"	movl	$0, %edx\n"
"	movq	.refptr._ZSt3cin(%rip), %rax\n"
"	leaq	16(%rax), %rcx\n"
"	call	_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo\n"
"	movl	$0, %edx\n"
"	movq	.refptr._ZSt4cout(%rip), %rax\n"
"	leaq	8(%rax), %rcx\n"
"	call	_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo\n"
"	movl	$0, %ecx\n"
"	call	_ZNSt8ios_base15sync_with_stdioEb\n"
"	leaq	-72(%rbp), %rax\n"
"	movq	%rax, %rdx\n"
"	movq	.refptr._ZSt3cin(%rip), %rcx\n"
"	call	_ZNSirsERx\n"
".L13:\n"
"	movq	-72(%rbp), %rax\n"
"	leaq	-1(%rax), %rdx\n"
"	movq	%rdx, -72(%rbp)\n"
"	testq	%rax, %rax\n"
"	setne	%al\n"
"	testb	%al, %al\n"
"	je	.L2\n"
"	leaq	-80(%rbp), %rax\n"
"	movq	%rax, %rdx\n"
"	movq	.refptr._ZSt3cin(%rip), %rcx\n"
"	call	_ZNSirsERx\n"
"	movq	%rax, %rcx\n"
"	leaq	-88(%rbp), %rax\n"
"	movq	%rax, %rdx\n"
"	call	_ZNSirsERx\n"
"	movq	$0, -8(%rbp)\n"
".L4:\n"
"	movq	-80(%rbp), %rax\n"
"	cmpq	%rax, -8(%rbp)\n"
"	jge	.L3\n"
"	movq	-8(%rbp), %rax\n"
"	leaq	0(,%rax,8), %rdx\n"
"	leaq	a(%rip), %rax\n"
"	addq	%rdx, %rax\n"
"	movq	%rax, %rdx\n"
"	movq	.refptr._ZSt3cin(%rip), %rcx\n"
"	call	_ZNSirsERx\n"
"	addq	$1, -8(%rbp)\n"
"	jmp	.L4\n"
".L3:\n"
"	movq	$0, -16(%rbp)\n"
"	movabsq	$1000000000000000001, %rax\n"
"	movq	%rax, -24(%rbp)\n"
".L12:\n"
"	movq	-24(%rbp), %rax\n"
"	subq	-16(%rbp), %rax\n"
"	cmpq	$1, %rax\n"
"	jle	.L5\n"
"	movq	-16(%rbp), %rdx\n"
"	movq	-24(%rbp), %rax\n"
"	addq	%rdx, %rax\n"
"	sarq	%rax\n"
"	movq	%rax, -56(%rbp)\n"
"	movq	$0, -32(%rbp)\n"
"	movq	$0, -40(%rbp)\n"
"	movq	$0, -48(%rbp)\n"
".L9:\n"
"	movq	-80(%rbp), %rax\n"
"	cmpq	%rax, -48(%rbp)\n"
"	jge	.L6\n"
"	movq	-48(%rbp), %rax\n"
"	leaq	0(,%rax,8), %rdx\n"
"	leaq	a(%rip), %rax\n"
"	movq	(%rdx,%rax), %rdx\n"
"	movq	-56(%rbp), %rax\n"
"	addq	%rdx, %rax\n"
"	subq	$1, %rax\n"
"	movq	%rax, -64(%rbp)\n"
"	movq	-48(%rbp), %rax\n"
"	leaq	0(,%rax,8), %rdx\n"
"	leaq	a(%rip), %rax\n"
"	movq	(%rdx,%rax), %rax\n"
"	cmpq	%rax, -32(%rbp)\n"
"	jl	.L7\n"
"	movq	-64(%rbp), %rax\n"
"	subq	-32(%rbp), %rax\n"
"	addq	%rax, -40(%rbp)\n"
"	movq	-64(%rbp), %rax\n"
"	movq	%rax, -32(%rbp)\n"
"	jmp	.L8\n"
".L7:\n"
"	movq	-56(%rbp), %rax\n"
"	addq	%rax, -40(%rbp)\n"
"	movq	-64(%rbp), %rax\n"
"	movq	%rax, -32(%rbp)\n"
".L8:\n"
"	addq	$1, -48(%rbp)\n"
"	jmp	.L9\n"
".L6:\n"
"	movq	-88(%rbp), %rax\n"
"	cmpq	%rax, -40(%rbp)\n"
"	jge	.L10\n"
"	movq	-56(%rbp), %rax\n"
"	movq	%rax, -16(%rbp)\n"
"	jmp	.L12\n"
".L10:\n"
"	movq	-56(%rbp), %rax\n"
"	movq	%rax, -24(%rbp)\n"
"	jmp	.L12\n"
".L5:\n"
"	movq	-24(%rbp), %rax\n"
"	movq	%rax, %rdx\n"
"	movq	.refptr._ZSt4cout(%rip), %rcx\n"
"	call	_ZNSolsEx\n"
"	movl	$10, %edx\n"
"	movq	%rax, %rcx\n"
"	call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c\n"
"	jmp	.L13\n"
".L2:\n"
"	movl	$0, %eax\n"
"	subq	$-128, %rsp\n"
"	popq	%rbp\n"
"	ret\n"
"	.seh_endproc\n"
"	.def	__tcf_0;	.scl	3;	.type	32;	.endef\n"
"	.seh_proc	__tcf_0\n"
"__tcf_0:\n"
".LFB11784:\n"
"	pushq	%rbp\n"
"	.seh_pushreg	%rbp\n"
"	movq	%rsp, %rbp\n"
"	.seh_setframe	%rbp, 0\n"
"	subq	$32, %rsp\n"
"	.seh_stackalloc	32\n"
"	.seh_endprologue\n"
"	leaq	_ZStL8__ioinit(%rip), %rcx\n"
"	call	_ZNSt8ios_base4InitD1Ev\n"
"	nop\n"
"	addq	$32, %rsp\n"
"	popq	%rbp\n"
"	ret\n"
"	.seh_endproc\n"
"	.def	_Z41__static_initialization_and_destruction_0ii;	.scl	3;	.type	32;	.endef\n"
"	.seh_proc	_Z41__static_initialization_and_destruction_0ii\n"
"_Z41__static_initialization_and_destruction_0ii:\n"
".LFB11783:\n"
"	pushq	%rbp\n"
"	.seh_pushreg	%rbp\n"
"	movq	%rsp, %rbp\n"
"	.seh_setframe	%rbp, 0\n"
"	subq	$32, %rsp\n"
"	.seh_stackalloc	32\n"
"	.seh_endprologue\n"
"	movl	%ecx, 16(%rbp)\n"
"	movl	%edx, 24(%rbp)\n"
"	cmpl	$1, 16(%rbp)\n"
"	jne	.L18\n"
"	cmpl	$65535, 24(%rbp)\n"
"	jne	.L18\n"
"	leaq	_ZStL8__ioinit(%rip), %rcx\n"
"	call	_ZNSt8ios_base4InitC1Ev\n"
"	leaq	__tcf_0(%rip), %rcx\n"
"	call	atexit\n"
".L18:\n"
"	nop\n"
"	addq	$32, %rsp\n"
"	popq	%rbp\n"
"	ret\n"
"	.seh_endproc\n"
"	.def	_GLOBAL__sub_I_a;	.scl	3;	.type	32;	.endef\n"
"	.seh_proc	_GLOBAL__sub_I_a\n"
"_GLOBAL__sub_I_a:\n"
".LFB11807:\n"
"	pushq	%rbp\n"
"	.seh_pushreg	%rbp\n"
"	movq	%rsp, %rbp\n"
"	.seh_setframe	%rbp, 0\n"
"	subq	$32, %rsp\n"
"	.seh_stackalloc	32\n"
"	.seh_endprologue\n"
"	movl	$65535, %edx\n"
"	movl	$1, %ecx\n"
"	call	_Z41__static_initialization_and_destruction_0ii\n"
"	nop\n"
"	addq	$32, %rsp\n"
"	popq	%rbp\n"
"	ret\n"
"	.seh_endproc\n"
"	.section	.ctors,\"w\"\n"
"	.align 8\n"
"	.quad	_GLOBAL__sub_I_a\n"
"	.ident	\"GCC: (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0\"\n"
"	.def	_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo;	.scl	2;	.type	32;	.endef\n"
"	.def	_ZNSt8ios_base15sync_with_stdioEb;	.scl	2;	.type	32;	.endef\n"
"	.def	_ZNSirsERx;	.scl	2;	.type	32;	.endef\n"
"	.def	_ZNSolsEx;	.scl	2;	.type	32;	.endef\n"
"	.def	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c;	.scl	2;	.type	32;	.endef\n"
"	.def	_ZNSt8ios_base4InitD1Ev;	.scl	2;	.type	32;	.endef\n"
"	.def	_ZNSt8ios_base4InitC1Ev;	.scl	2;	.type	32;	.endef\n"
"	.def	atexit;	.scl	2;	.type	32;	.endef\n"
"	.section	.rdata$.refptr._ZSt4cout, \"dr\"\n"
"	.globl	.refptr._ZSt4cout\n"
"	.linkonce	discard\n"
".refptr._ZSt4cout:\n"
"	.quad	_ZSt4cout\n"
"	.section	.rdata$.refptr._ZSt3cin, \"dr\"\n"
"	.globl	.refptr._ZSt3cin\n"
"	.linkonce	discard\n"
".refptr._ZSt3cin:\n"
"	.quad	_ZSt3cin\n"
);