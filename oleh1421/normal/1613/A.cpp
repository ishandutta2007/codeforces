#include <bits/stdc++.h>

typedef long long ll;
using namespace std;
mt19937 rnd(time(nullptr));
const int N=1000100;
const ll inf=1e18;
void solve(){
    int x1,p1,x2,p2;cin>>x1>>p1>>x2>>p2;
    vector<int>a,b;
    while (x1){
        a.push_back(x1%10);
        x1/=10;
    }
    while (x2){
        b.push_back(x2%10);
        x2/=10;
    }
    reverse(a.begin(),a.end());
    reverse(b.begin(),b.end());
    if (a.size()+p1>b.size()+p2){
        cout<<">\n";
        return;
    }
    if (b.size()+p2>a.size()+p1){
        cout<<"<\n";
        return;
    }
    while(!a.empty() && a.back()==0){
        a.pop_back();
        p1++;
    }
    while(!b.empty() && b.back()==0){
        b.pop_back();
        p2++;
    }
    for (int i=0;i<min(a.size(),b.size());i++){
        if (a[i]>b[i]){
            cout<<">\n";
            return;
        }
        if (a[i]<b[i]){
            cout<<"<\n";
            return;
        }
    }
    if (a.size()>b.size()){
        cout<<">\n";
        return;
    }
    if (a.size()<b.size()){
        cout<<"<\n";
        return;
    }
    cout<<"=\n";
}
int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int tt;cin>>tt;
    while (tt--){
        solve();
    }
    return 0;
}

/*
10
100 2
4 4
25 25 25 25
25 25 25 25

10
100 3
5 5 5
10 10 10 10 60
10 10 10 10 60
10 10 10 10 60



10
5000 7
16 16 16 16 16 18 16
15 15 15 15 4 4 4 4 4 4 4 4 3 3 1 1
15 15 15 15 4 4 4 4 4 4 4 4 3 3 1 1
15 15 10 10 10 10 4 4 4 4 3 3 3 3 1 1
15 15 10 10 10 10 4 4 4 4 3 3 3 3 1 1
15 15 10 10 10 10 4 4 4 4 3 3 3 3 1 1
15 15 15 15 3 3 3 3 3 3 2 2 5 5 3 3 1 1
10 10 10 10 10 10 10 10 3 3 3 3 3 3 1 1

19638


2 2
2 2
1 1
1 1

10000 7
16 18 16 16 16 16 16
10 10 10 10 10 10 10 10 3 3 3 3 3 3 1 1
15 15 15 15 3 3
3 3 3 2 2 5
5 3 3 1 1
15 15 10 10 10 10 4 4 4 4 3 3 3 3 1 1
15 15 10 10 10 10 4 4 4 4 3 3 3 3 1 1
15 15 10 10 10 10 4 4 4 4 3 3 3 3 1 1
15 15 15 15 4 4 4 4 4 4 4 4 3 3 1 1
15 15 15 15 4 4 4 4 4 4 4 4 3 3 1 1



15000 7
4 7 10 13 12 8 8
1000 1000 1000 12000
1000 1000 1000 1000 1000 1000 9000
1000 1000 1000 1000 1000 1000 1000 1000 1000 6000
1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 3000
1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 4000
1000 1000 1000 1000 1000 1000 1000 8000
1000 1000 1000 1000 1000 1000 1000 8000


10
20 7
4 7 10 13 12 8 8
1 1 1 17
1 1 1 1 1 1 14
1 1 1 1 1 1 1 1 1 11
1 1 1 1 1 1 1 1 1 1 1 1 8
1 1 1 1 1 1 1 1 1 1 1 9
1 1 1 1 1 1 1 13
1 1 1 1 1 1 1 13
*/