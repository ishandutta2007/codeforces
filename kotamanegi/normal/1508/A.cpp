#include "bits/stdc++.h"
using namespace std;
// add your library with double quotation #include"" here.
// #include "atcoder/all"
// using namespace atcoder;

// define your macros here.
// #define REP(a,b) for(long long a = 0;a < b;++a)

using namespace std;
typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a,b) for(long long (a) = 0;(a) < (b);++(a))
#define ALL(x) (x).begin(),(x).end()

#define int ll
void solve() {
    int n;
    cin >> n;
    vector<string> inputs;
    REP(i, 3) {
        string s;
        cin >> s;
        inputs.push_back(s);
    }
    int flipped = 0;
    REP(t, 2) {
        REP(i, 3) {
            for (int q = 0; q < 3; ++q) {
                if (i == q) continue;
                string base_ans;
                int itring = 0;
                for (int j = 0; j < 2 * n; ++j) {
                    if (inputs[q][j] == '0') {
                        base_ans.push_back('0');
                        if (itring < 2 * n and inputs[i][itring] == '0') itring++;
                    }
                    else {
                        while (itring < 2 * n and inputs[i][itring] == '0') {
                            base_ans.push_back(inputs[i][itring]);
                            itring++;
                        }
                        base_ans.push_back('1');
                        itring++;
                    }
                }
                for (int j = itring; j < 2 * n; ++j) {
                    base_ans.push_back(inputs[i][j]);
                }
                if (base_ans.length() > 3 * n) continue;
                if (t == 1) {
                    REP(q, base_ans.size()) {
                        if (base_ans[q] == '0') {
                            base_ans[q] = '1';
                        }
                        else {
                            base_ans[q] = '0';
                        }
                    }
                }
                cout << base_ans << endl;
                return;
            }
        }
        REP(i, 3) {
            REP(q, 2 * n) {
                if (inputs[i][q] == '0') {
                    inputs[i][q] = '1';
                }
                else {
                    inputs[i][q] = '0';
                }
            }
        }
    }
}
#undef int

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);
    cout << fixed << setprecision(100);
    int t = 1;
    cin >> t;
    REP(test, t) {
        solve();
    }
    return 0;
}