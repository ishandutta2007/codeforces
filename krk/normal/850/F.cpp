#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair <int, int> ii;

const int Maxn = 2505;
const int Maxm = 100005;
const int Maxk = 250;
const int harm[Maxk] = {0,881884276,224432428,117569315,65973860,517470973,558995133,860051261,155788942,910520518,120304438,154582539,519742130,627424624,845041807,554328605,656331368,691227914,840211063,388741362,529978561,897343109,93875054,197837413,294171160,218059710,992370950,608415075,127363831,605748785,874956379,695700236,302540311,434730736,585400383,704261248,297528324,326818180,492252413,463421375,387370501,872587234,361055436,992982497,325135313,801394116,557360951,403960409,547993698,775785847,299703623,472678625,403957663,380758761,540946595,374446961,228705807,892207521,718954981,57611608,776424610,71562850,896393406,90704811,271738138,153293323,339320628,153347307,896068049,632403841,117739701,466237359,504300280,315016389,391019917,945735692,935020357,882658738,739835603,933165221,989769439,782121533,249519096,193556131,703222437,419413446,431786435,631744438,949953078,999174487,347817442,181159585,782823623,724333362,992209009,421432125,717981978,963213881,949213181,905975821,397787437,979828694,480573495,277991208,549719751,567216451,47229125,193523226,562775516,198426247,701258838,658499361,951483459,798815837,289824405,212292772,298288616,228285400,82003167,14644418,667403141,637219612,776881735,746273961,470673094,63221052,396553805,802421416,664109705,330618733,80898868,500911712,372936810,14763369,164434278,800155067,129543226,522371293,885734730,864146098,190734195,760467956,53928139,773945403,355892699,893464662,613233574,649265872,750616222,542952833,174676223,49232709,491571581,636833544,18734469,128738923,344556596,869386371,926461092,866124411,189177380,528948452,137544262,899481695,604975812,982588373,880849435,858716632,680329826,787961996,331778750,91643473,471903941,35501904,297918764,875624473,698628706,177359323,96043834,799943555,132305296,274017167,430246600,803909020,885071333,211359087,908310181,163092501,289723843,862932058,335517815,160745095,353121184,396002777,254876617,299997699,148894905,282450851,892767244,141750010,197002259,189488125,336988739,5912479,377980801,779389514,730269025,863910892,80416580,990383116,346918584,911285900,970687314,196919273,814269369,981721633,537167041,524124890,512141421,129452529,826629961,844552662,858326199,316201725,216345457,217177043,170644387,330742436,110465947,479850415,454012664,334245732,482115882,61454438,582477184,856049964,2773859,622296549,54916186,135709872,344915784,568517529,323549891,255018380,244220213,769833837,525761676,966219748,267020701,139057568};
const int mod = 1000000007;

int n;
int a[Maxn];
int S;
int lim;
int myH[Maxm];
ii tmp[Maxm];

int toPower(int a, int p)
{
    int res = 1;
    while (p) {
        if (p & 1) res = ll(res) * a % mod;
        p >>= 1; a = ll(a) * a % mod;
    }
    return res;
}

int Inv(int x) { return toPower(x, mod - 2); }

int Harmonic(int x)
{
    int wh = x / 1000000;
    int res = harm[wh];
    for (int i = wh * 1000000 + 1; i <= x; i++)
        res = (res + Inv(i)) % mod;
    return res;
}

int main() {
    scanf("%d", &n);
    if (n == 1) {
        printf("0\n");
        return 0;
    }
    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
        S += a[i];
    }
    lim = min(Maxm - 1, S - 1);
    myH[lim] = Harmonic(S - lim - 1);
    for (int i = lim - 1; i > 0; i--)
        myH[i] = (myH[i + 1] + Inv(S - i - 1)) % mod;
    for (int i = 1; i <= lim; i++) {
        tmp[i].first = S - i;
        tmp[i].second = ll(myH[i]) * (S - i) % mod;
        tmp[i].second = (tmp[i].second - (S - i - 1) + mod) % mod;
        tmp[i].second = ll(S - 1) * tmp[i].second % mod;
        tmp[i].second = (mod - tmp[i].second) % mod;
    }
    int A = (2 * tmp[1].first % mod - tmp[2].first + mod) % mod;
    int B = (1 + tmp[2].second - 2 * tmp[1].second % mod + mod) % mod;
    int X = ll(B) * Inv(A) % mod;
    int res = 0;
    for (int i = 0; i < n; i++) {
        int ind = a[i];
        res = (ll(res) + ll(X) * tmp[ind].first + ll(tmp[ind].second)) % mod;
    }
    printf("%d\n", res);
    return 0;
}