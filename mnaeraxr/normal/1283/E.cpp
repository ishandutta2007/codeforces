/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class ENewYearParties {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n;
        in >> n;

        vector<int> a(n);

        for (int i = 0; i < n; ++i) {
            in >> a[i];
        }

        a.push_back(-10);

        sort(a.begin(), a.end());

        vector<int> mx(3), mn(3);

        for (int i = 1; i <= n; ++i) {
            vector<int> nmx(3), nmn(3, n);
            for (int j = 0; j < 3; ++j) {
                for (int k = 0; k < 3; ++k) {
                    int xp = a[i - 1] + j - 1;
                    int xc = a[i] + k - 1;
                    if (xp > xc) continue;

                    nmx[k] = max(nmx[k], mx[j] + (xp != xc));
                    nmn[k] = min(nmn[k], mn[j] + (xp != xc));
                }
            }

            mx.swap(nmx);
            mn.swap(nmn);
        }

        out << *min_element(mn.begin(), mn.end()) << " " << *max_element(mx.begin(), mx.end()) << endl;
    }
};


int main() {
    ENewYearParties solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}