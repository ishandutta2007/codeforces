/* Generated by powerful Codeforces Tool
 * Author: calabash_fool 
 * Time: 2019-05-02 15:51:00
 * Personal Code Template: https://github.com/4thcalabash/ACM-Code-Library
**/
#pragma GCC optimize(3)
#include <bits/stdc++.h>
using namespace std;
#ifdef __LOCAL_DEBUG__
# define _debug(fmt, ...) fprintf(stderr, "\033[91m[%s %3d]: " fmt "\n\033[0m", \
  __func__,__LINE__, ##__VA_ARGS__)
#else
# define _debug(...) (void(0))
#endif
#define PB(x) push_back(x)
#define rep(i,l,r) for (int i = l,_ = r;i< _;i++)
#define REP(i,l,r) for (int i=l,_=r;i<=_;i++)
#define leave(x) do {cout<<#x<<endl;fflush(stdout);return 0;}while (0);
#define untie do{ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr);}while (0)
#define range(x) x.begin(),x.end()
typedef long long LL;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef long double db;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
const int inf = 0x3f3f3f3f;
const ll inf_ll = 0x3f3f3f3f3f3f3f3fLL;
/************* header ******************/
const int mod = 998244353;
const int maxn = 5000 + 5;
int n;
int inv[maxn];
int cnt[maxn];
int dp[maxn][maxn];
int powmod(int x,int y){
    int res = 1;
    while (y){
        if (y&1){
            res = 1ll * res * x % mod;
        }
        y >>= 1;
        x = 1ll * x * x % mod;
    }
    return res;
}
int sum[maxn][maxn];

int main(){
    for (int i=1;i<maxn;i++){
        inv[i] = powmod(i,mod-2);
    }
    cin>>n;
    for (int i=0;i<n;i++){
        int ai;
        cin>>ai;
        cnt[ai] ++;
    }
    dp[0][0] = 1;
    int ans = 0;
    for (int i=1;i<n;i++){
        for (int j=0;j<=n;j++){
            sum[i-1][j] = (sum[i-1][j-1] + dp[i-1][j]) % mod;
        }
        for (int j=1;j<=n;j++){
            dp[i][j] = 1ll * sum[i-1][j-1] * (cnt[j]) % mod * inv[n-i+1]%mod;
            if(cnt[j] >=2){
                ans = (ans+1ll * dp[i][j]*(cnt[j] - 1)% mod * inv[n-i]% mod) % mod;
            }
        }
    }
    cout<<ans<<endl;









    return 0;
}