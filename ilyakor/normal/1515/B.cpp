/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <functional>
#include <sstream>
#include <cmath>

#include <cstring>
#include <cstdio>

using namespace std;

typedef pair<int, int> ii;
typedef long long int64;
typedef vector<int> vi;

#define pb push_back
#define mp make_pair
#define all(v) (v).begin(),(v).end()
#define sz(v) ((int)(v).size())

template<class T> T abs(T x) { return x >= 0 ? x : -x; }
template<class T> T sqr(T x) { return x * x; }

class TaskB {
public:
    bool IsSquare(int x) {
        int y = (int) sqrt(x);
        y -= 10;
        y = max(y, 0);
        while (y * y < x) ++y;
        return y * y == x;
    }

    void solve(std::istream& in, std::ostream& out) {
	    int n;
	    in >> n;
	    if (n % 2 == 1) {
	        out << "NO\n";
	        return;
	    }
	    if (IsSquare(n / 2)) {
            out << "YES\n";
            return;
	    }
	    if (n % 4 == 0 && IsSquare(n / 4)) {
            out << "YES\n";
            return;
	    }
        out << "NO\n";
	}
};


int main() {
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	int n;
in >> n;
for(int i = 0; i < n; ++i) {
	solver.solve(in, out);
}

	return 0;
}