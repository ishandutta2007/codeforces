/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-08-12 17:18:44
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

int n , sz , A[MAXN];
vector<int> vec , ans;

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

	cin >> n;
	for(int i = 0 ; i < n ; i++)	cin >> A[i];
	sort(A , A + n);
	for(int i = 0 ; i < n ; i++){
		int x = A[i];
		for(int j : vec){
			if((j & (-j)) & x)	x ^= j;
		}
		if(x == 0)	continue;
		vec.push_back(x);
		ans.push_back(A[i]);
		int k = 32 - __builtin_clz(A[i]);
		if(SZ(ans) == k)	sz = k;
	}
	ans.resize(sz);

	vector<int> res = {0};
	for(int i = 0 ; i < sz ; i++){
		vector<int> v = res;
		reverse(all(v));
		for(int j : v)	res.push_back(j ^ (1 << (i)));
	}
	cout << sz << endl;
	for(int i : res){
		int cur = 0;
		for(int j = 0 ; j < 20 ; j++)	if(i & (1 << j))	cur ^= ans[j];
		cout << cur << sep;
	}

    return 0;
}
/*

*/