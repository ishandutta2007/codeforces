

//teja349
#include <bits/stdc++.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <climits>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (14) << f << endl; Prints x.xxxx
//cout.precision(x)  cout<<fixed<<val;  // prints x digits after decimal in val

using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define pb push_back
#define mp make_pair
#define vi vector< int >
#define vl vector< ll >
#define ss second
#define ff first
#define ll long long
#define pii pair< int,int >
#define pll pair< ll,ll >
#define sz(a) a.size()
#define inf (1000*1000*1000+5)
#define all(a) a.begin(),a.end()
#define tri pair<int,pii>
#define vii vector<pii>
#define vll vector<pll>
#define viii vector<tri>
#define mod (1000*1000*1000+7)
#define pqueue priority_queue< int >
#define pdqueue priority_queue< int,vi ,greater< int > >

//std::ios::sync_with_stdio(false);   
map<string,string> dp;
int main(){
    std::ios::sync_with_stdio(false);
    
    

dp["00000000"] = "!x&x";

dp["00000001"] = "x&y&z";

dp["00000010"] = "!z&x&y";

dp["00000011"] = "x&y";

dp["00000100"] = "!y&x&z";

dp["00000101"] = "x&z";

dp["00000110"] = "!y&x&z|!z&x&y";

dp["00000111"] = "(y|z)&x";

dp["00001000"] = "!y&!z&x";

dp["00001001"] = "!y&!z&x|x&y&z";

dp["00001010"] = "!z&x";

dp["00001011"] = "!z&x|x&y";

dp["00001100"] = "!y&x";

dp["00001101"] = "!y&x|x&z";

dp["00001110"] = "!(y&z)&x";

dp["00001111"] = "x";

dp["00010000"] = "!x&y&z";

dp["00010001"] = "y&z";

dp["00010010"] = "!x&y&z|!z&x&y";

dp["00010011"] = "(x|z)&y";

dp["00010100"] = "!x&y&z|!y&x&z";

dp["00010101"] = "(x|y)&z";

dp["00010110"] = "!x&y&z|!y&x&z|!z&x&y";

dp["00010111"] = "(x|y)&z|x&y";

dp["00011000"] = "!x&y&z|!y&!z&x";

dp["00011001"] = "!y&!z&x|y&z";

dp["00011010"] = "!x&y&z|!z&x";

dp["00011011"] = "!z&x|y&z";

dp["00011100"] = "!x&y&z|!y&x";

dp["00011101"] = "!y&x|y&z";

dp["00011110"] = "!(y&z)&x|!x&y&z";

dp["00011111"] = "x|y&z";

dp["00100000"] = "!x&!z&y";

dp["00100001"] = "!x&!z&y|x&y&z";

dp["00100010"] = "!z&y";

dp["00100011"] = "!z&y|x&y";

dp["00100100"] = "!x&!z&y|!y&x&z";

dp["00100101"] = "!x&!z&y|x&z";

dp["00100110"] = "!y&x&z|!z&y";

dp["00100111"] = "!z&y|x&z";

dp["00101000"] = "!(!x&!y|x&y|z)";

dp["00101001"] = "!(!x&!y|x&y|z)|x&y&z";

dp["00101010"] = "!z&(x|y)";

dp["00101011"] = "!z&(x|y)|x&y";

dp["00101100"] = "!x&!z&y|!y&x";

dp["00101101"] = "!x&!z&y|!y&x|x&z";

dp["00101110"] = "!y&x|!z&y";

dp["00101111"] = "!z&y|x";

dp["00110000"] = "!x&y";

dp["00110001"] = "!x&y|y&z";

dp["00110010"] = "!(x&z)&y";

dp["00110011"] = "y";

dp["00110100"] = "!x&y|!y&x&z";

dp["00110101"] = "!x&y|x&z";

dp["00110110"] = "!(x&z)&y|!y&x&z";

dp["00110111"] = "x&z|y";

dp["00111000"] = "!x&y|!y&!z&x";

dp["00111001"] = "!x&y|!y&!z&x|y&z";

dp["00111010"] = "!x&y|!z&x";

dp["00111011"] = "!z&x|y";

dp["00111100"] = "!x&y|!y&x";

dp["00111101"] = "!x&y|!y&x|x&z";

dp["00111110"] = "!(x&z)&y|!y&x";

dp["00111111"] = "x|y";

dp["01000000"] = "!x&!y&z";

dp["01000001"] = "!x&!y&z|x&y&z";

dp["01000010"] = "!x&!y&z|!z&x&y";

dp["01000011"] = "!x&!y&z|x&y";

dp["01000100"] = "!y&z";

dp["01000101"] = "!y&z|x&z";

dp["01000110"] = "!y&z|!z&x&y";

dp["01000111"] = "!y&z|x&y";

dp["01001000"] = "!(!x&!z|x&z|y)";

dp["01001001"] = "!(!x&!z|x&z|y)|x&y&z";

dp["01001010"] = "!x&!y&z|!z&x";

dp["01001011"] = "!x&!y&z|!z&x|x&y";

dp["01001100"] = "!y&(x|z)";

dp["01001101"] = "!y&(x|z)|x&z";

dp["01001110"] = "!y&z|!z&x";

dp["01001111"] = "!y&z|x";

dp["01010000"] = "!x&z";

dp["01010001"] = "!x&z|y&z";

dp["01010010"] = "!x&z|!z&x&y";

dp["01010011"] = "!x&z|x&y";

dp["01010100"] = "!(x&y)&z";

dp["01010101"] = "z";

dp["01010110"] = "!(x&y)&z|!z&x&y";

dp["01010111"] = "x&y|z";

dp["01011000"] = "!x&z|!y&!z&x";

dp["01011001"] = "!x&z|!y&!z&x|y&z";

dp["01011010"] = "!x&z|!z&x";

dp["01011011"] = "!x&z|!z&x|x&y";

dp["01011100"] = "!x&z|!y&x";

dp["01011101"] = "!y&x|z";

dp["01011110"] = "!(x&y)&z|!z&x";

dp["01011111"] = "x|z";

dp["01100000"] = "!(!y&!z|x|y&z)";

dp["01100001"] = "!(!y&!z|x|y&z)|x&y&z";

dp["01100010"] = "!x&!y&z|!z&y";

dp["01100011"] = "!x&!y&z|!z&y|x&y";

dp["01100100"] = "!x&!z&y|!y&z";

dp["01100101"] = "!x&!z&y|!y&z|x&z";

dp["01100110"] = "!y&z|!z&y";

dp["01100111"] = "!y&z|!z&y|x&y";

dp["01101000"] = "!(!x&!y|x&y|z)|!x&!y&z";

dp["01101001"] = "!(!x&!y|x&y|z)|!x&!y&z|x&y&z";

dp["01101010"] = "!x&!y&z|!z&(x|y)";

dp["01101011"] = "!x&!y&z|!z&(x|y)|x&y";

dp["01101100"] = "!x&!z&y|!y&(x|z)";

dp["01101101"] = "!x&!z&y|!y&(x|z)|x&z";

dp["01101110"] = "!y&(x|z)|!z&y";

dp["01101111"] = "!y&z|!z&y|x";

dp["01110000"] = "!x&(y|z)";

dp["01110001"] = "!x&(y|z)|y&z";

dp["01110010"] = "!x&z|!z&y";

dp["01110011"] = "!x&z|y";

dp["01110100"] = "!x&y|!y&z";

dp["01110101"] = "!x&y|z";

dp["01110110"] = "!(x&y)&z|!z&y";

dp["01110111"] = "y|z";

dp["01111000"] = "!x&(y|z)|!y&!z&x";

dp["01111001"] = "!x&(y|z)|!y&!z&x|y&z";

dp["01111010"] = "!x&(y|z)|!z&x";

dp["01111011"] = "!x&z|!z&x|y";

dp["01111100"] = "!x&(y|z)|!y&x";

dp["01111101"] = "!x&y|!y&x|z";

dp["01111110"] = "!x&y|!y&z|!z&x";

dp["01111111"] = "x|y|z";

dp["10000000"] = "!(x|y|z)";

dp["10000001"] = "!(x|y|z)|x&y&z";

dp["10000010"] = "!(!x&y|!y&x|z)";

dp["10000011"] = "!(x|y|z)|x&y";

dp["10000100"] = "!(!x&z|!z&x|y)";

dp["10000101"] = "!(x|y|z)|x&z";

dp["10000110"] = "!(!x&y|!y&x|z)|!y&x&z";

dp["10000111"] = "!(x|y|z)|(y|z)&x";

dp["10001000"] = "!y&!z";

dp["10001001"] = "!y&!z|x&y&z";

dp["10001010"] = "!(!x&y|z)";

dp["10001011"] = "!y&!z|x&y";

dp["10001100"] = "!(!x&z|y)";

dp["10001101"] = "!y&!z|x&z";

dp["10001110"] = "!(!x&y|z)|!y&x";

dp["10001111"] = "!y&!z|x";

dp["10010000"] = "!(!y&z|!z&y|x)";

dp["10010001"] = "!(x|y|z)|y&z";

dp["10010010"] = "!(!x&y|!y&x|z)|!x&y&z";

dp["10010011"] = "!(x|y|z)|(x|z)&y";

dp["10010100"] = "!(!x&z|!z&x|y)|!x&y&z";

dp["10010101"] = "!(x|y|z)|(x|y)&z";

dp["10010110"] = "!(!x&y|!y&x|z)|!x&y&z|!y&x&z";

dp["10010111"] = "!(x|y|z)|(x|y)&z|x&y";

dp["10011000"] = "!x&y&z|!y&!z";

dp["10011001"] = "!y&!z|y&z";

dp["10011010"] = "!(!x&y|z)|!x&y&z";

dp["10011011"] = "!(!x&y|z)|y&z";

dp["10011100"] = "!(!x&z|y)|!x&y&z";

dp["10011101"] = "!(!x&z|y)|y&z";

dp["10011110"] = "!(!x&y|z)|!x&y&z|!y&x";

dp["10011111"] = "!y&!z|x|y&z";

dp["10100000"] = "!x&!z";

dp["10100001"] = "!x&!z|x&y&z";

dp["10100010"] = "!(!y&x|z)";

dp["10100011"] = "!x&!z|x&y";

dp["10100100"] = "!x&!z|!y&x&z";

dp["10100101"] = "!x&!z|x&z";

dp["10100110"] = "!(!y&x|z)|!y&x&z";

dp["10100111"] = "!(!y&x|z)|x&z";

dp["10101000"] = "!(x&y|z)";

dp["10101001"] = "!(x&y|z)|x&y&z";

dp["10101010"] = "!z";

dp["10101011"] = "!z|x&y";

dp["10101100"] = "!x&!z|!y&x";

dp["10101101"] = "!(x&y|z)|x&z";

dp["10101110"] = "!y&x|!z";

dp["10101111"] = "!z|x";

dp["10110000"] = "!(!y&z|x)";

dp["10110001"] = "!x&!z|y&z";

dp["10110010"] = "!(!y&x|z)|!x&y";

dp["10110011"] = "!x&!z|y";

dp["10110100"] = "!(!y&z|x)|!y&x&z";

dp["10110101"] = "!(!y&z|x)|x&z";

dp["10110110"] = "!(!y&x|z)|!x&y|!y&x&z";

dp["10110111"] = "!x&!z|x&z|y";

dp["10111000"] = "!x&y|!y&!z";

dp["10111001"] = "!(x&y|z)|y&z";

dp["10111010"] = "!x&y|!z";

dp["10111011"] = "!z|y";

dp["10111100"] = "!(!x&!y&z|x&y)";

dp["10111101"] = "!x&!z|!y&x|y&z";

dp["10111110"] = "!x&y|!y&x|!z";

dp["10111111"] = "!z|x|y";

dp["11000000"] = "!x&!y";

dp["11000001"] = "!x&!y|x&y&z";

dp["11000010"] = "!x&!y|!z&x&y";

dp["11000011"] = "!x&!y|x&y";

dp["11000100"] = "!(!z&x|y)";

dp["11000101"] = "!x&!y|x&z";

dp["11000110"] = "!(!z&x|y)|!z&x&y";

dp["11000111"] = "!(!z&x|y)|x&y";

dp["11001000"] = "!(x&z|y)";

dp["11001001"] = "!(x&z|y)|x&y&z";

dp["11001010"] = "!x&!y|!z&x";

dp["11001011"] = "!(x&z|y)|x&y";

dp["11001100"] = "!y";

dp["11001101"] = "!y|x&z";

dp["11001110"] = "!y|!z&x";

dp["11001111"] = "!y|x";

dp["11010000"] = "!(!z&y|x)";

dp["11010001"] = "!x&!y|y&z";

dp["11010010"] = "!(!z&y|x)|!z&x&y";

dp["11010011"] = "!(!z&y|x)|x&y";

dp["11010100"] = "!(!z&x|y)|!x&z";

dp["11010101"] = "!x&!y|z";

dp["11010110"] = "!(!z&x|y)|!x&z|!z&x&y";

dp["11010111"] = "!x&!y|x&y|z";

dp["11011000"] = "!x&z|!y&!z";

dp["11011001"] = "!(x&z|y)|y&z";

dp["11011010"] = "!(!x&!z&y|x&z)";

dp["11011011"] = "!x&!y|!z&x|y&z";

dp["11011100"] = "!x&z|!y";

dp["11011101"] = "!y|z";

dp["11011110"] = "!x&z|!y|!z&x";

dp["11011111"] = "!y|x|z";

dp["11100000"] = "!(x|y&z)";

dp["11100001"] = "!(x|y&z)|x&y&z";

dp["11100010"] = "!x&!y|!z&y";

dp["11100011"] = "!(x|y&z)|x&y";

dp["11100100"] = "!x&!z|!y&z";

dp["11100101"] = "!(x|y&z)|x&z";

dp["11100110"] = "!(!y&!z&x|y&z)";

dp["11100111"] = "!x&!y|!z&y|x&z";

dp["11101000"] = "!((x|y)&z|x&y)";

dp["11101001"] = "!((x|y)&z|x&y)|x&y&z";

dp["11101010"] = "!x&!y|!z";

dp["11101011"] = "!x&!y|!z|x&y";

dp["11101100"] = "!x&!z|!y";

dp["11101101"] = "!x&!z|!y|x&z";

dp["11101110"] = "!y|!z";

dp["11101111"] = "!y|!z|x";

dp["11110000"] = "!x";

dp["11110001"] = "!x|y&z";

dp["11110010"] = "!x|!z&y";

dp["11110011"] = "!x|y";

dp["11110100"] = "!x|!y&z";

dp["11110101"] = "!x|z";

dp["11110110"] = "!x|!y&z|!z&y";

dp["11110111"] = "!x|y|z";

dp["11111000"] = "!x|!y&!z";

dp["11111001"] = "!x|!y&!z|y&z";

dp["11111010"] = "!x|!z";

dp["11111011"] = "!x|!z|y";

dp["11111100"] = "!x|!y";

dp["11111101"] = "!x|!y|z";

dp["11111110"] = "!(x&y&z)";

dp["11111111"] = "!x|x";


	int n,i;
	cin>>n;
	string str;
	rep(i,n){
		cin>>str;
		cout<<dp[str]<<endl;
	}

}