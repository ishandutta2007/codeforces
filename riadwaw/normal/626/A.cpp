/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <map>

using namespace std;

class TaskA {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n;
		in >> n;
		pair<int, int> cur{0, 0};
		map<pair<int, int>, int> x;
		x[cur]++;
		string s;
		in >> s;
		for (char c: s) {
			if (c == 'L') {
				++cur.first;
			} else if (c == 'R') {
				--cur.first;
			} else if (c == 'U') {
				++cur.second;
			} else {
				--cur.second;
			}
			++x[cur];
		}

		int ans = 0;
		for (auto p: x) {
			ans += p.second * (p.second - 1) / 2;
		}
		out << ans;
	}
};


int main() {
	std::ios_base::sync_with_stdio(false);
	TaskA solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	in.tie(0);
	out << std::fixed;
	out.precision(20);
	solver.solve(in, out);
	return 0;
}