#include <stdio.h>
int n,m,a,b,c,i,j,x,y;
char s[222][222];
void copy(int x, int y) {
  s[x][y]=s[x-2][y];
  if (s[x][y]=='.') s[x][y]='#'; else if (s[x][y]=='#') s[x][y]='.';
}
int main() {
  scanf("%d%d%d%d%d",&n,&m,&a,&b,&c);
  x=a/m; y=a%m;
  for (i=0; i<=x; i++) for (j=0; j<m; j++) if (a) {
    s[2*i][2*j]='#'; s[2*i+1][2*j+1]='#';
    s[2*i+1][2*j]='#'; s[2*i][2*j+1]='#'; a--;
  }
  x++;
  if (y==0) for (i--,j=0; j<m; j++) if (j&1) {
    s[2*i][2*j]='#'; s[2*i+1][2*j+1]='.';
    s[2*i+1][2*j]='/'; s[2*i][2*j+1]='/';
  } else {
    s[2*i][2*j]='\\'; s[2*i+1][2*j+1]='\\';
    s[2*i+1][2*j]='.';   s[2*i][2*j+1]='#';
  } else {
    for (j=y-1; j>=0; j--) if ((j&1)!=(y&1)) {
      s[2*i][2*j]='#'; s[2*i+1][2*j+1]='.';
      s[2*i+1][2*j]='/'; s[2*i][2*j+1]='/';
    } else {
      s[2*i][2*j]='\\'; s[2*i+1][2*j+1]='\\';
      s[2*i+1][2*j]='.';   s[2*i][2*j+1]='#';
    }
    for (i--,j=y; j<m; j++) if ((j&1)==(y&1)) {
      s[2*i][2*j]='#'; s[2*i+1][2*j+1]='.';
      s[2*i+1][2*j]='/'; s[2*i][2*j+1]='/';
    } else {
      s[2*i][2*j]='\\'; s[2*i+1][2*j+1]='\\';
      s[2*i+1][2*j]='.';   s[2*i][2*j+1]='#';
    }
  }
  while (b) {
    s[2*x][2*y]='.'; s[2*x+1][2*y+1]='.';
    s[2*x+1][2*y]='.'; s[2*x][2*y+1]='.'; b--;
    if (++y>=m) { y=0; x++; }
  }
  i=++x; j=y;
  if (y==0) for (i--,j=0; j<m; j++) if (j&1) {
    s[2*i][2*j]='.'; s[2*i+1][2*j+1]='#';
    s[2*i+1][2*j]='/'; s[2*i][2*j+1]='/';
  } else {
    s[2*i][2*j]='\\'; s[2*i+1][2*j+1]='\\';
    s[2*i+1][2*j]='#';   s[2*i][2*j+1]='.';
  } else {
    for (j=y-1; j>=0; j--) if ((j&1)!=(y&1)) {
      s[2*i][2*j]='.'; s[2*i+1][2*j+1]='#';
      s[2*i+1][2*j]='/'; s[2*i][2*j+1]='/';
    } else {
      s[2*i][2*j]='\\'; s[2*i+1][2*j+1]='\\';
      s[2*i+1][2*j]='#';   s[2*i][2*j+1]='.';
    }
    for (i--,j=y; j<m; j++) if ((j&1)==(y&1)) {
      s[2*i][2*j]='.'; s[2*i+1][2*j+1]='#';
      s[2*i+1][2*j]='/'; s[2*i][2*j+1]='/';
    } else {
      s[2*i][2*j]='\\'; s[2*i+1][2*j+1]='\\';
      s[2*i+1][2*j]='#';   s[2*i][2*j+1]='.';
    }
  }
  while (x<n) {
    copy(2*x,2*y); copy(2*x+1,2*y+1);
    copy(2*x+1,2*y); copy(2*x,2*y+1);
    if (++y>=m) { y=0; x++; }
  }
  for (i=0; i<2*n; i++) puts(s[i]);
  return 0;
}