#include <bits/stdc++.h>

using namespace std;

int t, n, m, a[110][110];

struct op {
    int x1, y1, x2, y2, x3, y3;
};

int main() {
    scanf("%d", &t);
    while(t--) {
        scanf("%d %d", &n, &m);
        for(int i = 0; i < n; i++)
            for(int j = 0; j < m; j++)
                scanf("%1d", &a[i][j]);

        vector<op> ans;
        while(n > 2) {
            n--;
            for(int j = 0; j < m; j++) {
                if(a[n][j]) {
                    a[n-1][j] = 1 - a[n-1][j];
                    if(j) a[n-1][j-1] = 1 - a[n-1][j-1], ans.push_back({n, j, n-1, j, n-1, j-1});
                    else a[n-1][j+1] = 1 - a[n-1][j+1], ans.push_back({n, j, n-1, j, n-1, j+1});
                }
            }
        }
        while(m > 2) {
            m--;
            for(int i = 0; i < n; i++) {
                if(a[i][m]) {
                    a[i][m-1] = 1 - a[i][m-1];
                    if(i) a[i-1][m-1] = 1 - a[i-1][m-1], ans.push_back({i, m, i, m-1, i-1, m-1});
                    else a[i+1][m-1] = 1 - a[i+1][m-1], ans.push_back({i, m, i, m-1, i+1, m-1});
                }
            }
        }

        if(a[0][0] && a[0][1] && a[1][0] && a[1][1]) {
            a[0][0] = a[0][1] = a[1][0] = 0;
            ans.push_back({0, 0, 0, 1, 1, 0});
        }
        if(a[0][0] && !a[0][1] && !a[1][0] && !a[1][1]) {
            a[0][0] = 0;
            a[0][1] = a[1][0] = 1;
            ans.push_back({0, 0, 0, 1, 1, 0});
        }
        if(!a[0][0] && a[0][1] && !a[1][0] && !a[1][1]) {
            a[0][1] = 0;
            a[0][0] = a[1][0] = 1;
            ans.push_back({0, 0, 0, 1, 1, 0});
        }
        if(!a[0][0] && !a[0][1] && a[1][0] && !a[1][1]) {
            a[1][0] = 0;
            a[0][1] = a[0][0] = 1;
            ans.push_back({0, 0, 0, 1, 1, 0});
        }
        if(!a[0][0] && !a[0][1] && !a[1][0] && a[1][1]) {
            a[1][1] = 0;
            a[0][1] = a[1][0] = 1;
            ans.push_back({1, 1, 0, 1, 1, 0});
        }

        if(a[0][0] && a[0][1] && !a[1][0] && !a[1][1]) {
            a[0][0] = 0;
            a[1][0] = a[1][1] = 1;
            ans.push_back({0, 0, 1, 1, 1, 0});
        }
        if(a[0][0] && !a[0][1] && a[1][0] && !a[1][1]) {
            a[0][0] = 0;
            a[0][1] = a[1][1] = 1;
            ans.push_back({0, 0, 1, 1, 0, 1});
        }
        if(a[0][0] && !a[0][1] && !a[1][0] && a[1][1]) {
            a[0][0] = 0;
            a[0][1] = a[1][0] = 1;
            ans.push_back({0, 0, 1, 0, 0, 1});
        }
        if(!a[0][0] && a[0][1] && a[1][0] && !a[1][1]) {
            a[0][1] = 0;
            a[0][0] = a[1][1] = 1;
            ans.push_back({0, 0, 1, 1, 0, 1});
        }
        if(!a[0][0] && a[0][1] && !a[1][0] && a[1][1]) {
            a[0][1] = 0;
            a[0][0] = a[1][0] = 1;
            ans.push_back({0, 0, 1, 0, 0, 1});
        }
        if(!a[0][0] && !a[0][1] && a[1][0] && a[1][1]) {
            a[1][0] = 0;
            a[0][0] = a[0][1] = 1;
            ans.push_back({0, 0, 1, 0, 0, 1});
        }

        if(a[0][0] && a[0][1] && a[1][0] && !a[1][1]) {
            a[0][0] = a[0][1] = a[1][0] = 0;
            ans.push_back({0, 0, 1, 0, 0, 1});
        }
        if(a[0][0] && a[0][1] && !a[1][0] && a[1][1]) {
            a[0][0] = a[0][1] = a[1][1] = 0;
            ans.push_back({0, 0, 1, 1, 0, 1});
        }
        if(a[0][0] && !a[0][1] && a[1][0] && a[1][1]) {
            a[0][0] = a[1][1] = a[1][0] = 0;
            ans.push_back({0, 0, 1, 0, 1, 1});
        }
        if(!a[0][0] && a[0][1] && a[1][0] && a[1][1]) {
            a[1][1] = a[0][1] = a[1][0] = 0;
            ans.push_back({1, 1, 1, 0, 0, 1});
        }

        printf("%d\n", ans.size());
        for(op o : ans) {
            printf("%d %d %d %d %d %d\n", o.x1+1, o.y1+1, o.x2+1, o.y2+1, o.x3+1, o.y3+1);
        }
    }
    return 0;
}