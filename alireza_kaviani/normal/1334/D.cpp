/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-04-10 19:05:25
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll q , n , l , r , ps[MAXN];

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    cin >> q;
    while(q--){
        cin >> n >> l >> r;
        for(ll i = 1 ; i < n ; i++) ps[i] = 2 * n - 2 * i;
        ps[n] = 1;
        for(ll i = 1 ; i <= n ; i++)    ps[i] += ps[i - 1];
        for(ll i = l ; i <= r ; i++){
            ll ind = lower_bound(ps + 1 , ps + n + 1 , i) - ps;
            if(ind == n)    cout << 1;
            else{
                if(i % 2 == 1)  cout << ind << sep;
                else    cout << (i - ps[ind - 1]) / 2 + ind << sep;
            }
        }
        cout << endl;
    }

    return 0;
}
/*

*/