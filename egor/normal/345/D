with Ada.Text_IO, Ada.Float_Text_IO, Ada.Integer_Text_IO;
use Ada.Text_IO, Ada.Float_Text_IO, Ada.Integer_Text_IO;

procedure Program is

  Count       : INTEGER;
  Answer      : INTEGER;
  Graph       : array(1..50, 1..50) of INTEGER;
  I           : INTEGER;
  J           : INTEGER;
  K           : INTEGER;
  C           : CHARACTER;
  
  procedure Check(Number : in INTEGER;
                  Result : out INTEGER);

  procedure Check(Number : in INTEGER;
                  Result : out INTEGER) is
                  
    Current : INTEGER;
                  
  begin
    Result := 0;
    Current := Number;
    if Current mod 10 = 1 then
      Result := -1;
    end if;
    loop
      if Current < 10 then
        exit;
      end if;
      if Current mod 100 = 13 then
        Result := 1;
        exit;
      end if;
      Current := Current / 10;
    end loop;
    if (Result /= 1 And Current = 3) then
      Result := Result - 2;
    end if;
  end Check;

begin

  Get(Count);
  
  for I in 1..Count loop
    for J in 1..Count loop
      Get(C);
      Graph(I, J) := CHARACTER'POS(C) - CHARACTER'POS('0');
    end loop;
    Graph(I, I) := 1;
  end loop;
  
  for I in 1..Count - 1 loop
    for J in 1..Count - 1 loop
      for K in 1..Count - 1 loop
        if Graph(J, I) = 1 And Graph(I, K) = 1 then
          Graph(J, K) := 1;
        end if;
      end loop;
    end loop;
  end loop;
  
  Answer := 0;
  
  for I in 1..Count - 1 loop
    if Graph(1, I) = 1 And Graph(I, Count) = 1 then
      Answer := Answer + 1;
    end if;
  end loop;
  
  Put(Answer, 0);
end Program;