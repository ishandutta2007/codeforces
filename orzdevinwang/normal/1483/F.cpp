#include<bits/stdc++.h>
#define L(i,j,k)for(int i=j,i##E=k;i<=i##E;i++)
#define R(i,j,k)for(int i=j,i##E=k;i>=i##E;i--)
#define ll long long
#define pii pair<int,int>
#define sz(a)((int)(a).size())
using namespace std;const int N=1e6 + 7;using namespace std;int ns,cnt[N],tot,fa[N];vector<int> change[N],e[N],qet[N];int ch[N][26],sz[N];void ad(int x,int y){for(;x<=tot + 1;x+=(x & -x))sz[x]+=y;}int query(int x){int res=0;for(;x;x-=(x & -x))res+=sz[x];return res;}int qry(int l,int r){return query(r)-query(l - 1);}void ins(string s){int now=0;L(i,0,sz(s)- 1){if(!ch[now][s[i]-'a'])ch[now][s[i]-'a']=++tot;now=ch[now][s[i] - 'a'];}}int n,m,siz[N],hv[N],St[N],En[N],idtot,mx[N],sx[N],lef[N],sG[N];void dfs(int x){St[x]=++idtot;for(int v:e[x]){if(!sx[v])sx[v]=sx[x];mx[v]=max(mx[v],mx[x]),dfs(v);}En[x]=idtot;}void build(){queue<int>q;L(i,0,25)if(ch[0][i])q.push(ch[0][i]);while(!q.empty()){int u=q.front();q.pop();L(i,0,25)if(ch[u][i])fa[ch[u][i]]=ch[fa[u]][i],q.push(ch[u][i]);else ch[u][i]=ch[fa[u]][i];}}string s[N];int main(){ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);cin>>n;L(i,1,n)cin>>s[i],ins(s[i]);L(i,1,n){int now=0;L(j,0,sz(s[i])-1)now=ch[now][s[i][j]-'a'],change[now].push_back(i);mx[now]=max(mx[now],sz(s[i])),sx[now]=now;}build();L(i,1,tot)e[fa[i]].push_back(i);dfs(0);L(i,1,n){L(j,1,sz(s[i]))qet[j].clear();int now=0;L(j,0,sz(s[i])-1){now=ch[now][s[i][j]-'a'],ad(St[now],1);if(j==sz(s[i])-1)now=fa[now];lef[j]=j-mx[now]+1,sG[j]=sx[now];}lef[sz(s[i])]=1e9;R(j,sz(s[i])-1,0){if(lef[j]<=j&&lef[j]<lef[j+1])qet[j-lef[j]+1].push_back(sG[j]);lef[j]=min(lef[j],lef[j + 1]);}L(j,1,sz(s[i])){for(int x:qet[j])cnt[x]++;for(int x:qet[j])if(cnt[x])ns+=(qry(St[x],En[x])==cnt[x]),cnt[x]=0;}now=0;L(j,0,sz(s[i])- 1)now=ch[now][s[i][j]-'a'],ad(St[now],-1);}cout<<ns<<"\n";}