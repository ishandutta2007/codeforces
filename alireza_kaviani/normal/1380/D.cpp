/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-07-14 09:25:26
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;
typedef pair<int, int> pii;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 1e6 + 10;
const ll LOG = 22;
const ll INF = 1e15;
const ll MOD = 1e9 + 7; // 998244353; // 1e9 + 9;

ll q , n , m , x , k , y , A[MAXN] , B[MAXN];

ll calc(ll A , ll B , ll mx , ll cnt){
    ll ans = INF;
    if(A > mx || B > mx)    ans = min(ans , y * cnt);
    if(cnt >= k)    ans = min(ans , x + y * (cnt - k)) , ans = min(ans , x * (cnt / k) + y * (cnt % k));
    return ans;
}

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    q = 1;
    while(q--){
        cin >> n >> m >> x >> k >> y;
        for(int i = 0 ; i < n ; i++)    cin >> A[i];
        for(int i = 0 ; i < m ; i++)    cin >> B[i];
        ll ptr = 0 , mx = 0 , cnt = 0 , prv = 0; B[m] = MOD;
        ll ans = 0;
        for(int i = 0 ; i < n ; i++){
            if(B[ptr] == A[i]){
                ans += calc(B[ptr] , prv , mx , cnt);
                mx = 0, cnt = 0 , prv = A[i]; ptr++;
            }
            else    cnt++ , mx = max(mx , A[i]);
            ans = min(ans , INF);
        }
        ans += calc(B[m - 1] , 0 , mx , cnt);
        if(ans >= INF || ptr != m)  ans = -1;
        cout << ans << endl;
    }

    return 0;
}
/*

*/