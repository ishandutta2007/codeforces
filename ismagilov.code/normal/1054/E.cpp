/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Azat Ismagilov
 */

/*-.``                                          ``                                                   .
 .``                               ```````..-:oss+/-``                                              .
 .`                        `-.-://::::/+/+osyyhhyyysss+/:-.`                                        .
 `                      .::++:/+++syyyyyyyyyyyyydmmddhdmhhho-.`                                     -
                    ``./o+/++oooooooyhmmNddmmmdddhhmmdmmNmmmhhs:-..`                                -
                   `.-/++/oshddmmmmhhdmmNmmmNMNNmmmhyddmNNNNNNmmdhhso+/-.`                          :
                  `./+soooshNNMMNMNNNNNNmMMNNNMMNNmmdhddmmNNNNmNNddmmmmdhs+-`                       :
                `.:/+osyddhhdmNMMMMNMNNMNMMMMMMMMMMNmdmmmmmNMNNNNdddNNmNNNmdy/`                     -
 ``           `-osssydmNNNNNNNNmNMMMMMNMMMMMMMMMMMMMNmmNNNmmNNMNmmydNNNNNNmNNNy:`                   `
            `-+syoyhmNNNMMMMMMMMMMMMMNNNNNNNMMMMMMMMMMNNmmmmmmmNdmhsyNNmMNmmmNdho-`                 `
 `         -oddyoohyyyhdmNMMMMMMMMNmmdmmmmmddmmmmmmNNmmmdddddmmmmNdshdmhMNNdhdmmmho-`
 `        :hmmysosoooooshdmmNMMMNmdysshhddddhysysyshyyhhyyyyhhhdmmyhmym+hmhyyydhmNmh+.
 `       .ohmyyhhhhyysssssyhdmmmhyo+++osydhssoooo++oo+/+++/++++ososhmhss+hy++sshydmmds-
 `       :shhdddddddmmddddddhhyso/--::/+oyyso+o++//::-----:---:://oyhhsoosos+osydhdddh+.
 `      `/yddmdmmmmNNmNNNNdyo+/:-.````...-:///+/+/:--............--:+syhhdshshhdddhddhy/`
 `       :ydmdmNNNNNNMNNdyo/--..````````````..---:-......````````...-:+yhmmddhmmmmddmddy-
 `      `/ydhmNNNNNMMNmy+:...`````````````````....-....``.`````````...-/ohmmmmmNNmmmmmmd+`
        `:oydNNMNNNNmho:-..`````````````````````.....`......```````....-/oyhmmmNNNNdddddy.
        `:oddNNNNNNds/-..`````````````````````````````..........```.....:/syhmmmNNNNmmhhy:
        `-ymmNNNNdho:...``````````````````````````````````..............-:+yhmmmmNmNNmmmh+`
        `:dmNNMNdhs:-...`````````````````````````````````````...........-:+shdmmmNNmmmmmmo`
        `/dNNMMNdh+-.....``````````````````````````````````````````.....--/oyhmNmmNNNNNNNh-
        .omNMNNNdy/-......```````````````````````````````````````````....--:+sdmmNNNNMNNNm+`
        .sNNNNmdds/-......`````````````````````````````````````````````...---:+hmmNNNMNMMNh:`
        `oNMMNNNdy/:-.....````````````````````````````````....--:::----.....---/ymNNNNMMMNho/.
         .dNMMMNmy+:-.....````````````````````````....--:/+osyhhhyyyssoo+:------/hNNNNNNNdso+/-`
         .oNMMMNmds/--...`````````````............-:/oyddmmmmmddhhysoooooo+/:-:/+ymmmmNNdo/++/:-`
 `        -yNMMNNdy/--..``````....--:://::---....-:oyhdmddhyyssssssssoooo+++shoddhhmmNNmy+shhyo:`
 `        `+mNNNNms/--..`..-:/osyyhhdddhyso/-....-:ohhyssyyyyysssssyyhhyssoosdo+/:/ymmNdss+ohhy/.
           -dNNNNNs:--..:/+syyhddmmmdddddhyo:--://sssyyyhhhyhddmmmhhhhhhyso+/o-..-:+hmdy++//+dh+.
           `sNNNNNo---:+syyyyssooosyyhdddhhhyo/::::sosyhhhso+sssyssssso++/:--/...--:odhoso++:yho:.
            :dNNNN+--:+oso++osssyyhdmmhddhyys:`````:sssso+++++++++++++/:--...:`...--/yyohhys++yoo+`
 ``         `:hmNNo/:///++osyhhhdmdmddssso+so:`````./ys+::::://////::--...``..`...--:oy/yhhs++ooo:`
 ``         ./syhdhs-::/+oshhhdhssso+++++/+yo-.````..:o:--............`````````...--:/s:oyys+++/.
            `.-:odNd:-::/+ooooo++//++++/-.-+:..`````...//:-.........```````````...--:/+/sss+//-`
            `:+//dmo+:-------:://///:-..``./-..`````````.://:--....```````````....--::+++///:.
            .oysoyd++/--............````..-:..``````````.:/o+:-....`````````......--::/+//:-`
            .sy+:/y+:/:..................-::-.```` ``````../o/:--...............---::://::-`
            .:s/:/oo::--........``````..-:/+-..```````.-----o/::::----------------:::::/+:.
            `://-:/o/--...`.```````....--://.--:----::/+osooo/--::///::::::::::::::::::/o:`
             -//---//:-.....````.......-:::--:oyysoosssyhhyyo/-..--://///:::::::::::::://.
              `-...-::--.............--::-...-oyhhyyhhhssooo+/-..---::///::::::::::::::-.
                  ``.-:--...........-:::-..``.-/////osso++//:---..-:::::::-::::/::::::-``
 `                  ``.----........--::-..`.``...---::::////:-----:/++/::----:::::::::.`
 `                     `..------..--::-.....``..-::////oososssssyyyyyo+/:.--::::::::::.`
 .                       `.-----------.----..-://+++++ossyyyysssso+//:::---://////::::.`
 -                        `-:::---------/+/+ssssssssssyss+/////:--....---::/++///////:.`
 .                        `-::::--...--/ossssoo+//:---::::/++/:::--------:/++++//////:-`
 .`                        .-:::------:/+/--..-::/+/////+++oo++////::::::://++++//////:.
 -`                         .-::::::--:::-.....-://+ooosssyssoooo++//::::://+++///////:`
 .`                         `.:////////::-..--:::/+oosyyyyyyssoo+/::----://+++///////:-`
 ``                          `:++++/++//:----:://++oossssoo++//::--.---:///+++///+//::-`
 -`          ````             .:+ooo+++/::-------::::::-----.--....--::////+///+++//::--
 `.`    ``    ````````        `./++oooo++/:--.........`........---::://////++++++///::::-
 :-.`   ``    ``` `            `-:/oooooo++/:--.........-----::////++++++++++++++///::::o.
 ++-``   `     ``               .:/o+osoooo++//:------::////++ooooooo+++++ooo+++////::::/+       `  `
 `/:```         `   ```         `:os/+ossoooo++++///+++oosoosssssooooo+ooooooo++////:::::+-``` `
 `...               .`.          -sh+//++osssoooooooooosssssssssooooooooooooo+++/////:::::/s--:-   `
                   `:`           `:oo/:://+osssssoosooooossssssssssooooooooooo++/////::::-::::o.    .
                   ``              `::::::://+ossssssyssyyyyyyyyyssooooooooooo++/////::::----:o/.`..+
                                    .-:::::::://++osssyyyyyyyyyyyssooooooooooo++/////::::--------+ydy
                                    .---------::://++oossssyyysssssoooooossooo+++///::::------.....:+
                                    `----------:::::://++oooossssoooooooooooo+++///::::-----.......``
                                    .--------------::::///++oooooooooooooo++++/////:::----.......````
                        ```         `-----------------::::////++++++++++++++/////::::----......``````
                     ```.-:::--`   `.----.-.....-------::::://////////////////:::::----.......```````
                  `.-:+osyyyys: ````...............------::::::::::::::::::::::::----.......`````````
    `...`````.--:/osysyyhyyyyo```````..................-------::::--::--::::------......`````````````
  ``.-:://+osssyhhyyyyyhsyyyy/` ```````.................----------------------........```````````````
 `.:+ossssssyyhhhyhhhhhhhhyyy-` ```````````.................--------...............````````````````
 osssssyyyyyhhhhhhhhhhhhhhyhy-`  ```````````````````````....................``````````````````````
 syyyyyhhhhhhhhhhhhhhdhhhhhhy.    ``````````````````````````````..``..````````````````````````     */

#include <bits/stdc++.h>

#define fs first
#define sc second
#define pb push_back
#define ppb pop_back
#define pf push_front
#define ppf pop_front
#define mp make_pair
#define len(v) ((int)v.size())
#define vc vector
#define pr pair
#define all(v) v.begin(), v.end()
#pragma GCC optimize("Ofast")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,tune=native")
#pragma GCC optimize("unroll-loops")

using namespace std;

template<typename T, typename U> inline ostream &operator<< (ostream &_out, const pair<T, U> &_p) { _out << _p.first << ' ' << _p.second; return _out; }
template<typename T, typename U> inline istream &operator>> (istream &_in, pair<T, U> &_p) { _in >> _p.first >> _p.second; return _in; }
template<typename T> inline ostream &operator<< (ostream &_out, const vector<T> &_v) { if (_v.empty()) { return _out; } _out << _v.front(); for (auto _it = ++_v.begin(); _it != _v.end(); ++_it) { _out << ' ' << *_it; } return _out; }
template<typename T> inline istream &operator>> (istream &_in, vector<T> &_v) { for (auto &_i : _v) { _in >> _i; } return _in; }

const int MAXN = 1e5;
const int INF = 1e9;
const int MOD = 1e9 + 7;

vc<pr<pr<int, int>, pr<int, int>>> ans;
vc<vc<queue<char>>> d;

void move(int x, int y, int x1, int y1){
    if (x == x1){
        ans.pb({{x + 1, y + 1}, {x1 + 1, y1 + 1}});
        return;
    }
    if (y == y1){
        ans.pb({{x + 1, y + 1}, {x1 + 1, y1 + 1}});
        return;
    }
    if (y > y1) {
        move(x, y, x, y1);
        move(x, y1, x1, y1);
    }
    else{
        move(x, y, x1, y);
        move(x1, y, x1, y1);
    }
}



class TaskE {
public:
	void solve(std::istream& in, std::ostream& out) {
		int n, m;
		in >> n >> m;
		d.resize(2, vc<queue<char>> (2));
		string a[n][m];
		string b[n][m];
		for (int i = 0; i < n; i++){
		    for (int j = 0; j < m; j++){
		        cin >> a[i][j];
		    }
		}
        for (int i = 0; i < n; i++){
            for (int j = 0; j < m; j++){
                cin >> b[i][j];
            }
        }
        for (int i = 0; i < n; i++){
            for (int j = 0; j < m; j++){
                reverse(all(a[i][j]));
                reverse(all(b[i][j]));
                if (i + j <= 1) {
                    for (auto v : a[i][j]) {
                        d[i][j].push(v);
                    }
                }
            }
        }
        while(!d[0][1].empty()){
            d[0][0].push(d[0][1].front());
            d[0][1].pop();
            move(0, 1, 0, 0);
        }
        while(!d[1][0].empty()){
            d[0][0].push(d[1][0].front());
            d[1][0].pop();
            move(1, 0, 0, 0);
        }
        while(!d[0][0].empty()){
            if (d[0][0].front() == '0'){
                move(0, 0, 0, 1);
            }
            else{
                move(0, 0, 1, 0);
            }
            d[0][0].pop();
        }
        for (int i = 0; i < n; i++){
            for (int j = 0; j < m; j++){
                if (i + j > 1){
                    for (auto v : a[i][j]){
                        if (v == '0'){
                            move(i, j, 0, 1);
                        }
                        else{
                            move(i, j, 1, 0);
                        }
                    }
                }
            }
        }
        for (int i = n - 1; i >= 0; i--){
            for (int j = m - 1; j >= 0; j--){
                if (i + j > 1){
                    for (auto v : b[i][j]){
                        if (v == '0'){
                            move(0, 1, i, j);
                        }
                        else{
                            move(1, 0, i, j);
                        }
                    }
                }
            }
        }
        for (auto v : b[0][1]){
            if (v == '0'){
                move(0, 1, 0, 0);
            }
            else{
                move(1, 0, 0, 0);
            }
        }
        for (auto v : b[1][0]){
            if (v == '0'){
                move(0, 1, 0, 0);
            }
            else{
                move(1, 0, 0, 0);
            }
        }
        for (auto v : b[0][0]){
            if (v == '0'){
                move(0, 1, 0, 0);
            }
            else{
                move(1, 0, 0, 0);
            }
        }
        for (int i = 0; i < len(b[0][1]); i++){
            move(0, 0, 0, 1);
        }
        for (int i = 0; i < len(b[1][0]); i++){
            move(0, 0, 1, 0);
        }
        out << len(ans) << "\n";
        for (auto v : ans){
            out << v << "\n";
        }

	}
};


main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
	TaskE solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}