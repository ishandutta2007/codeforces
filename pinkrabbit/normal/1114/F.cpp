#include <cstdio>
#include <algorithm>
#include <map>

typedef unsigned int UI;
typedef unsigned long long LL;
typedef std::pair<UI, LL> pil;
const LL Mod = 1000000007, G = 5;
const UI eM = 1000000006;
const int MX = 301;

inline LL qPow(LL b, int e) {
	LL a = 1;
	for (; e; e >>= 1, b = b * b % Mod)
		if (e & 1) a = a * b % Mod;
	return a;
}

const int E[MX] = {0, 0, 381838282, 884237698, 763676564, 1, 266075974, 936544532, 145514840, 768475390, 381838283, 649233168, 647914256, 144547565, 318382808, 884237699, 527353122, 895459693, 150313666, 701153241, 763676565, 820782224, 31071444, 82047235, 29752532, 2, 526385847, 652713082, 700221090, 347375814, 266075975, 198670980, 909191404, 533470860, 277297969, 936544533, 532151948, 289190395, 82991517, 28785257, 145514841, 802264261, 202620500, 24616936, 412909726, 768475391, 463885517, 730741137, 411590814, 873089058, 381838284, 779697385, 908224129, 616590335, 34551358, 649233169, 82059366, 585390933, 729214096, 178404868, 647914257, 234516540, 580509262, 705019916, 291029680, 144547566, 915309142, 351358075, 659136251, 966284933, 318382809, 557546595, 913990230, 559624399, 671028677, 884237700, 464829799, 585777694, 410623539, 414776906, 527353123, 536950774, 184102537, 809672376, 584458782, 895459694, 406455218, 231613506, 794748008, 689565125, 150313667, 81092091, 845723799, 82908672, 112579413, 701153242, 793429096, 993378125, 254927334, 417708552, 763676566, 495914368, 161535661, 991051336, 290062405, 820782225, 998428617, 326036185, 416389640, 525353314, 31071445, 173428087, 463897648, 429750477, 967229215, 82047236, 111052372, 913022955, 560243150, 832004219, 29752533, 298466330, 616354822, 686501953, 962347544, 3, 86858192, 155622902, 672867962, 908854634, 526385848, 26958408, 297147418, 637697767, 733196357, 652713083, 40974527, 540374100, 348123209, 293399235, 700221091, 614978829, 939384877, 793780733, 295828506, 347375815, 941462681, 757326750, 52866953, 109607515, 266075976, 468364065, 846668081, 663935077, 967615976, 198670981, 792461821, 967234449, 796615188, 500828027, 909191405, 18591761, 918789056, 238291131, 565940819, 533470861, 191510652, 98758628, 966297064, 289095130, 277297970, 469628625, 788293500, 328851128, 613451788, 936544534, 176586284, 62642560, 71403401, 492996069, 532151949, 546888614, 462930373, 118754232, 227562075, 289190396, 464746954, 544692855, 494417695, 589257608, 82991518, 366164793, 175267372, 23539458, 375216401, 28785258, 636765616, 829772542, 799546834, 912024915, 145514842, 235595767, 877752650, 283920340, 543373943, 802264262, 372889612, 850522625, 671900687, 350386403, 202620501, 437098732, 380266893, 441784287, 707874467, 24616937, 798227922, 135215506, 907191596, 443862091, 412909727, 40007252, 555266369, 768794522, 845735930, 768475392, 811588759, 342799273, 349067491, 566661897, 463885518, 470015386, 492890654, 924677391, 294861231, 730741138, 942081432, 299014598, 213842495, 732754158, 411590815, 733768720, 680304612, 421188466, 998193104, 873089059, 68340229, 845700806, 344185820, 693910068, 381838285, 241119035, 468696474, 731280403, 537461184, 779697386, 54706238, 17661842, 290692910, 225734921, 908224130, 115851198, 408796690, 872301485, 678985700, 616590336, 19536043, 573802817, 115034633, 298959763, 34551359, 462560014, 422812809, 965329789, 922212382, 649233170, 729961491, 31035300, 675237517, 967146370, 82059367, 345578910, 996817111, 82704431, 321223153, 585390934, 175619009, 738808787, 677666788, 790919380, 729214097, 877615817, 323300957, 912101836, 139165026, 178404869, 434705235, 301946244, 491445797, 226594800, 647914258};
int ip[MX], v[62], pc;
LL S[MX];

void Init(int N) {
	for (int i = 2; i <= N; ++i) if (!ip[i]) {
		for (int j = i; j <= N; j += i) {
			if (j > i) ip[j] = 1;
			S[j] |= 1llu << pc;
		}
		v[pc++] = (i - 1) * qPow(i, Mod - 2) % Mod;
	}
}
 
const int MS = 1 << 20 | 7;
#define li (i << 1)
#define ri (i << 1 | 1)
#define len (r - l + 1)
#define mid ((l + r) >> 1)
#define now i, l, r
#define ls li, l, mid
#define rs ri, mid + 1, r
#define Root 1, 1, N
#define St int i, int l, int r

UI sum[MS], t1[MS]; LL st[MS], t2[MS];

inline void P(St, int v, LL s) {
	sum[i] = (sum[i] + (LL)len * v) % eM, st[i] |= s;
	t1[i] = (t1[i] + v) % eM, t2[i] |= s;
}
inline void Pd(St) {
	if (t1[i] || t2[i]) {
		P(ls, t1[i], t2[i]), P(rs, t1[i], t2[i]);
		t1[i] = t2[i] = 0;
	}
}

void Mdf(St, int a, int b, LL v, LL s) {
	if (r < a || b < l) return ;
	if (a <= l && r <= b) return P(now, v, s);
	Pd(now);
	Mdf(ls, a, b, v, s), Mdf(rs, a, b, v, s);
	sum[i] = (sum[li] + sum[ri]) % eM;
	st[i] = st[li] | st[ri];
}

pil Qur(St, int a, int b) {
	if (r < a || b < l) return pil(0u, 0llu);
	if (a <= l && r <= b) return pil(sum[i], st[i]);
	Pd(now);
	pil p1 = Qur(ls, a, b), p2 = Qur(rs, a, b);
	return pil((p1.first + p2.first) % eM, p1.second | p2.second);
}

int N, Q;

int main() {
	int x;
	Init(300);
	scanf("%d%d", &N, &Q);
	for (int i = 1; i <= N; ++i) {
		scanf("%d", &x);
		Mdf(Root, i, i, E[x], S[x]);
	}
	for (int q = 1; q <= Q; ++q) {
		char opt[9]; int l, r;
		scanf("%s%d%d", opt, &l, &r);
		if (*opt == 'T') {
			pil P = Qur(Root, l, r);
			LL Ans = qPow(G, P.first);
			for (int i = 0; i < pc; ++i)
				if (P.second >> i & 1) Ans = Ans * v[i] % Mod;
			printf("%llu\n", Ans);
		}
		else scanf("%d", &x), Mdf(Root, l, r, E[x], S[x]);
	}
	return 0;
}