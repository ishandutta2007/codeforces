#include<bits/stdc++.h>

using namespace std;

const int maxn=205;

bool x[maxn][maxn],a[maxn],b[maxn];
int rc[maxn];
int n,m;

void inv(int k){
    b[k]^=1;
    for(int i=1;i<=n;i++){
        if(x[i][k]) rc[i]--;
        else rc[i]++;
    }
    for(int i=1;i<=n;i++) x[i][k]^=1;
}

bool chk(int f){
    bool ok=1;
    for(int i=1;i<m;i++){
        if(x[f-1][i]==1&&x[f-1][i+1]==0) ok=0;
    }
    for(int i=1;i<f-1;i++)if(rc[i]!=0) ok=0;
    for(int i=f;i<=n;i++)if(rc[i]!=m) ok=0;
    return ok;
}
void otp(int k){
    cout<<"YES\n";
    for(int i=1;i<=n;i++){
        bool q=0;
        cout<<a[i];
    }
    cout<<'\n';
    for(int i=1;i<=m;i++){
        cout<<b[i];
    }
}
void rnv(int k){
    a[k]^=1;
    rc[k]=m-rc[k];
    for(int i=1;i<=m;i++) x[k][i]^=1;
}
int main(){
    cin>>n>>m;
    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) cin>>x[i][j];
    for(int i=1;i<=n;i++) for(int j=1;j<=m;j++) if(x[i][j]) rc[i]++;
    for(int i=1;i<=m;i++){
        if(!x[1][i]) inv(i);
    }
    for(int j=2;j<=n;j++){
        if(rc[j]==0) rnv(j);
    }
    if(chk(2)){
        otp(2);
        return 0;
    }
    for(int i=1;i<=m;i++){
        inv(i);
        for(int j=2;j<=n;j++){
            if(rc[j]==0) rnv(j);
        }
        if(chk(2)){
            otp(2);
            return 0;
        }
    }
    for(int j=2;j<=n;j++) if(rc[j]==0) rnv(j);
    for(int i=2;i<=n;i++){
        if(chk(i+1)){
            otp(i);
            return 0;
        }
        rnv(i);
        if(chk(i+1)){
            otp(i);
            return 0;
        }
        if(x[i][1]==1) rnv(i);
    }
    cout<<"NO";
    return 0;
}
/* 
01001001000000000100000000011010001110111101001001011001011101000010101101000100111011001001000110001101010001111000101111001000001011111001101101100100011101111101111110010001111001001000111111111110
00001001000000000100000000011010001110111101001001011001011101000010101101000100111011001001000110001101010001111000101111001000001011111001101101100100011101111101111110010001111001001000111111111110
00000101111001101010111100101000110100110000011010111000110101000101100001011100001100001101100001011100110110101111101100010010100101101011000000100101000000001111110111100001101010010010000101000111
00000101111001101010111100101000110100110000011010111000110101000101100001011100001100001101100001011100110110101111101100010010100101101011000000100101000000001111110111100001101010010010000101000111
*/