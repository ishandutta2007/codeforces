/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author RiaD
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <vector>
#include <map>

using namespace std;

class TaskB {

int gcd(int a, int b) {
	//cout << "g = " << a << ' ' << b;
	while(b){
		a %= b;
		swap(a, b);
	}
	//cout << ' ' << a << endl;
	return a;
}
public:
	void solve(std::istream& in, std::ostream& out) {
		int n;
		in >> n;
		vector<int> l(n);
		vector<int> c(n);
		for(int i = 0; i < n; ++i) {
			in >> l[i];
		}
		for(int i = 0; i < n; ++i) {
			in >> c[i];
		}

		map<int, int> res;
		res[0] = 0;

		for(int i = 0; i < n; ++i) {
			map<int, int> newres = res;
			for(auto it: res) {
				int newr = gcd(it.first, l[i]);
				if(!newres.count(newr)) {
					newres[newr] = 1000000000;
				}
				newres[newr] = min(newres[newr], it.second + c[i]);
			}
			res.swap(newres);
		}



		if(res.count(1))
			out << res[1];
		else
			out << -1;
	}
};


int main() {
	std::cin.sync_with_stdio(false);
	std::cin.tie(0);
	std::cout << std::fixed;
	std::cout.precision(20);
	TaskB solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}