/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class BSnowWalkingRobot {
public:
    void solve(std::istream &in, std::ostream &out) {
        int t;
        in >> t;

        while (t-- > 0) {
            string s;
            in >> s;

            map<char, int> tot;

            for (auto x : s) {
                tot[x]++;
            }

            if (tot.size() != 4) {
                if (tot['U'] && tot['D']) {
                    out << 2 << endl << "UD" << endl;
                } else if (tot['R'] && tot['L']) {
                    out << 2 << endl << "RL" << endl;
                } else {
                    out << 0 << endl;
                }
            } else {
                int V = min(tot['U'], tot['D']);
                int H = min(tot['R'], tot['L']);

                out << 2 * (V + H) << endl;

                for (int i = 0; i < V; ++i)
                    out << 'U';
                for (int i = 0; i < H; ++i)
                    out << 'R';
                for (int i = 0; i < V; ++i)
                    out << 'D';
                for (int i = 0; i < H; ++i)
                    out << 'L';

                out << endl;
            }
        }
    }
};


int main() {
    BSnowWalkingRobot solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}