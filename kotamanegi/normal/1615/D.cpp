#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long

void solve()
{
  int n, m;
  cin >> n >> m;
  vector<tuple<int, int, int>> fixed_edges;

  vector<pair<int, int>> change_edges;

  vector<vector<pair<int, int>>> vertexs(n);
  REP(i, n - 1)
  {
    int a, b, c;
    cin >> a >> b >> c;
    a--;
    b--;
    if (c == -1)
    {
      change_edges.push_back({a, b});
    }
    else
    {
      fixed_edges.push_back({a, b, c});
      int cnt = 0;
      REP(q, 30)
      {
        if ((1 << q) & c)
        {
          cnt ^= 1;
        }
      }
      vertexs[a].push_back({b, cnt});
      vertexs[b].push_back({a, cnt});
    }
  }
  REP(i, m)
  {
    int a, b, c;
    cin >> a >> b >> c;
    a--;
    b--;
    vertexs[a].push_back({b, c});
    vertexs[b].push_back({a, c});
  }
  vector<int> values(n, -1);
  REP(i, n)
  {
    if (values[i] != -1)
      continue;
    queue<int> next;
    values[i] = 0;
    next.push(i);
    while (!next.empty())
    {
      int now = next.front();
      next.pop();
      for (auto x : vertexs[now])
      {
        if (values[x.first] == -1)
        {
          values[x.first] = (values[now] ^ x.second);
          next.push(x.first);
        }
        if ((values[x.first]) != (values[now] ^ x.second))
        {
          cout << "NO" << endl;
          return;
        }
      }
    }
  }

  cout << "YES" << endl;
  REP(i, fixed_edges.size())
  {
    cout << get<0>(fixed_edges[i]) + 1 << " " << get<1>(fixed_edges[i]) + 1 << " " << get<2>(fixed_edges[i]) << endl;
  }
  REP(i, change_edges.size())
  {
    cout << change_edges[i].first + 1 << " " << change_edges[i].second + 1 << " " << (values[change_edges[i].first] ^ values[change_edges[i].second]) << endl;
  }
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}