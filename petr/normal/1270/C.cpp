/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

#define pb push_back
#define sz(v) ((int)(v).size())
#define all(v) (v).begin(),(v).end()
#define mp make_pair

using namespace std;

typedef long long int64;
typedef vector<int> vi;
typedef pair<int, int> ii;

class TaskC {
 public:
  void solveOne(istream &in, ostream &out) {
    int n;
    in >> n;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) {
      in >> a[i];
    }
    int64 sum = 0;
    int64 xo = 0;
    for (int x : a) {
      sum += x;
      xo ^= x;
    }
    int64 extra1 = 1LL << 59;
    if (sum % 2 != 0) {
      extra1 += 1;
    }
    sum += extra1;
    xo ^= extra1;
    int64 need = 2 * xo - sum;
    need /= 2;
    sum += 2 * need;
    assert(2 * xo == sum);
    out << 3 << "\n";
    out << extra1 << " " << need << " " << need << "\n";
  }

  void solve(std::istream &in, std::ostream &out) {
    int nt;
    in >> nt;
    for (int it = 0; it < nt; ++it) {
      solveOne(in, out);
    }
  }
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  TaskC solver;
  std::istream& in(std::cin);
  std::ostream& out(std::cout);
  solver.solve(in, out);
  return 0;
}