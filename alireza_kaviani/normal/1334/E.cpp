/* Generated by powerful Codeforces Tool
 * You can download the binary file in here https://github.com/xalanq/cf-tool (Windows, macOS, Linux)
 * Author: alireza_kaviani
 * Time: 2020-04-10 19:05:25
**/
#include <bits/stdc++.h>
#include <ext/pb_ds/tree_policy.hpp>
#include <ext/pb_ds/assoc_container.hpp>

using namespace std;
using namespace __gnu_pbds;

template <class T> using Tree = tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;

typedef long long ll;
typedef long double ld;
typedef pair<ll, ll> pll;

#define all(x)                      (x).begin(),(x).end()
#define Sort(x)                     sort(all((x)))
#define X                           first
#define Y                           second
#define sep                         ' '
#define endl                        '\n'
#define SZ(x)                       ll(x.size())

ll poww(ll a, ll b, ll md) {
    return (!b ? 1 : (b & 1 ? a * poww(a * a % md, b / 2, md) % md : poww(a * a % md, b / 2, md) % md));
}

const ll MAXN = 100 + 10;
const ll LOG = 22;
const ll INF = 8e18;
const ll MOD = 998244353; // 1e9 + 9;

ll n , q , fact[MAXN] , inv[MAXN];
vector<ll> P;

ll calc(ll x , ll y){
    x /= y;
    ll S = 0 , ans = 1;
    for(ll i : P){
        ll C = 0;
        while(x % i == 0){
            x /= i;
            C++;
        }
        S += C;
        ans = ans * inv[C] % MOD;
    }
    ans = ans * fact[S] % MOD;
    return ans;
}

int main() {
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);

    fact[0] = inv[0] = 1;
    for(ll i = 1 ; i < MAXN ; i++)  fact[i] = fact[i - 1] * i % MOD , inv[i] = poww(fact[i] , MOD - 2 , MOD);

    cin >> n;
    for(ll i = 2 ; i * i <= n ; i++){
        if(n % i == 0){
            P.push_back(i);
            while(n % i == 0)   n /= i;
        }
    }
    if(n != 1)  P.push_back(n);

    cin >> q;
    while(q--){
        ll A , B , C;
        cin >> A >> B;
        C = __gcd(A , B);
        cout << calc(A , C) * calc(B , C) % MOD << endl;
    }

    return 0;
}
/*

*/