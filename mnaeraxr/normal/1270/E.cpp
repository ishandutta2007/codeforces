/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author marX
 */

#include <iostream>
#include <fstream>

#include <bits/stdc++.h>

using namespace std;

class EDividePoints {
public:
    void solve(std::istream &in, std::ostream &out) {
        int n;
        in >> n;

        vector<pair<int, int>> v;

        for (int i = 0; i < n; ++i) {
            int x, y;
            in >> x >> y;
            v.push_back({x, y});
        }

        while (true) {
            vector<int> a;

            for (int i = 0; i < n; ++i) {
                int x, y;
                tie(x, y) = v[i];

                if ((x & 1) == (y & 1)) {
                    a.push_back(i);
                }
            }

            if (a.size() == 0 || a.size() == n) {
                bool s = 0;

                if (a.empty()) s = 1;

                for (auto &p : v) {
                    p.first -= s;
                    int x = (p.first + p.second) / 2;
                    int y = (p.first - p.second) / 2;
                    p = make_pair(x, y);
                }
            } else {
                out << a.size() << endl;
                for (auto x : a) {
                    out << x + 1 << " ";
                }
                out << endl;
                break;
            }
        }
    }
};


int main() {
    EDividePoints solver;
    std::istream &in(std::cin);
    std::ostream &out(std::cout);
    solver.solve(in, out);
    return 0;
}